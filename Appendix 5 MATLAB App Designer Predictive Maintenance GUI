classdef Glovebox_Predictive_Maintenance_System_Joshua_Donald < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        UIFigure                        matlab.ui.Figure
        HoldButton                      matlab.ui.control.Button
        Image                           matlab.ui.control.Image
        Image_2                         matlab.ui.control.Image
        Image_3                         matlab.ui.control.Image
        GloveboxPredictiveMaintenanceSystemLabel  matlab.ui.control.Label
        TemperatureDropDownLabel        matlab.ui.control.Label
        TemperatureDropDown             matlab.ui.control.DropDown
        HumidityDropDownLabel           matlab.ui.control.Label
        HumidityDropDown                matlab.ui.control.DropDown
        PressureDropDownLabel           matlab.ui.control.Label
        PressureDropDown                matlab.ui.control.DropDown
        OxygenDropDownLabel             matlab.ui.control.Label
        OxygenDropDown                  matlab.ui.control.DropDown
        RadiationDropDownLabel          matlab.ui.control.Label
        RadiationDropDown               matlab.ui.control.DropDown
        OperatorGuideTextAreaLabel      matlab.ui.control.Label
        OperatorGuideTextArea           matlab.ui.control.TextArea
        ResetButton                     matlab.ui.control.Button
        PlotButton                      matlab.ui.control.Button
        NumberofSetPointVialationsEditFieldLabel  matlab.ui.control.Label
        NumberofSetPointVialationsEditField  matlab.ui.control.NumericEditField
        SetPointVialationsEditFieldLabel  matlab.ui.control.Label
        SetPointVialationPercentageEditField  matlab.ui.control.NumericEditField
        SetPointVialationsEditFieldLabel_2  matlab.ui.control.Label
        NumberofSetPointVialationsEditField_2  matlab.ui.control.NumericEditField
        SetPointVialationsEditFieldLabel_3  matlab.ui.control.Label
        SetPointVialationPercentageEditField_3  matlab.ui.control.NumericEditField
        SetPointVialationsEditFieldLabel_4  matlab.ui.control.Label
        NumberofSetPointVialationsEditField_4  matlab.ui.control.NumericEditField
        SetPointVialationsEditFieldLabel_5  matlab.ui.control.Label
        SetPointVialationPercentageEditField_5  matlab.ui.control.NumericEditField
        SetPointVialationsEditFieldLabel_6  matlab.ui.control.Label
        NumberofSetPointVialationsEditField_6  matlab.ui.control.NumericEditField
        SetPointVialationsEditFieldLabel_7  matlab.ui.control.Label
        SetPointVialationPercentageEditField_7  matlab.ui.control.NumericEditField
        SetPointVialationsEditFieldLabel_8  matlab.ui.control.Label
        NumberofSetPointVialationsEditField_8  matlab.ui.control.NumericEditField
        SetPointVialationsEditFieldLabel_9  matlab.ui.control.Label
        SetPointVialationPercentageEditField_9  matlab.ui.control.NumericEditField
        TemperatureSystemStatusMessageLabel  matlab.ui.control.Label
        HumiditySystemStatusMessageLabel  matlab.ui.control.Label
        PressureSystemStatusMessageLabel  matlab.ui.control.Label
        OxygenSystemStatusMessageLabel  matlab.ui.control.Label
        RadiationSystemStatusMessageLabel  matlab.ui.control.Label
        Label                           matlab.ui.control.Label
        Label_2                         matlab.ui.control.Label
        Label_3                         matlab.ui.control.Label
        Label_4                         matlab.ui.control.Label
        Label_5                         matlab.ui.control.Label
        UIAxes                          matlab.ui.control.UIAxes
    end

    % Callbacks that handle component events
    methods (Access = private)

        % Button pushed function: PlotButton
        function PlotButtonPushed(app, event)
         legend(app.UIAxes,"Location","southoutside") % Legend  
         
         % Temperature
         
         switch app.TemperatureDropDown.Value

         case "Test 1 vacuum pump on, no radioactive or oxidising material present (Temperature)"
             
         test1 = readtable("test1.xlsx") % Import data from excel spreadsheet for test1. 
         time1=datetime(xlsread('test1.xlsx','A2:A1002'),'convertfrom','excel');
         time1.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d1=datetime('10-Aug-2022') % Date of test.
         d1.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time1=d1 + timeofday(time1) % Date and time variabe.
         

         plot(app.UIAxes,[time1],[test1.Temperature],'Color','r','LineWidth',0.8,'DisplayName','Test 1 vacuum pump on, no radioactive or oxidising material present (Temperature ^oC)'); % Plot temperature for test1.
         
         lowlow=min(test1.Temperature) % Find minimum value for test1 temperature measurements.
         low=min(test1.Temperature)*1.001 % Calculate low set point for test1 temperature using minimum value, plus 0.01%.
         high=max(test1.Temperature)/1.001 % Calculate high value for test1 temperature using maximum value minus 0.01%.
         highhigh=max(test1.Temperature) % Find maximum value for test1 temperature measurements.
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test1.Temperature>=lowlow & test1.Temperature<=low))+length(find(test1.Temperature>=high & test1.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test1.Temperature)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - "Glovebox temperature not within design limits, issue with reduction in Glovebox pressure, pressure too low"'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, issue with reduction in Glovebox pressure, pressure too low'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test1.Temperature>=lowlow & test1.Temperature<=low); % Create fault log for test 1 temperature low set point violations.
         temperature=test1.Temperature(index); % Attain data from test1.
         time=test1.Time(index); % Record set point violations.
         
         index2=find(test1.Temperature>=high & test1.Temperature<=highhigh); % Create fault log for test 1 temperature high set point violations.
         temperature2=test1.Temperature(index2); % Attain data from test1.
         time2=test1.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test1TEMPERATURElog.mat',"data","time","errormessage"); % Table details.


         case "Test 2 vacuum pump off, no radioactive or oxidising material present (Temperature)"  
            
         test2 = readtable("test2.xlsx") % Import data from excel spreadsheet for test2.
         time24=datetime(xlsread('test2.xlsx','A2:A1002'),'convertfrom','excel');
         time24.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d2=datetime('11-Aug-2022') % Date of test.
         d2.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time24=d2 + timeofday(time24) % Date and time variabe.

         plot(app.UIAxes,[time24],[test2.Temperature],'Color','g','LineWidth',0.8,'DisplayName','Test 2 vacuum pump off, no radioactive or oxidising material present (Temperature ^oC)'); % Plot temperature for test2.
         
         lowlow=min(test2.Temperature) % Find minimum value for test2 temperature measurements.
         low=min(test2.Temperature)*1.001 % Calculate low set point for test2 temperature using minimum value, plus 0.01%.
         high=max(test2.Temperature)/1.001 % Calculate high value for test2 temperature using maximum value minus 0.01%.
         highhigh=max(test2.Temperature) % Find maximum value for test2 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test2.Temperature>=lowlow & test2.Temperature<=low))+length(find(test2.Temperature>=high & test2.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test2.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, issue with reduction in Glovebox pressure, pressure too high'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, issue with reduction in Glovebox pressure, pressure too high'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test2.Temperature>=lowlow & test2.Temperature<=low); % Create fault log for test 2 temperature low set point violations.
         temperature=test2.Temperature(index); % Attain data from test2.
         time=test2.Time(index); % Record set point violations.
         
         index2=find(test2.Temperature>=high & test2.Temperature<=highhigh); % Create fault log for test 2 temperature high set point violations.
         temperature2=test2.Temperature(index2); % Attain data from test2.
         time2=test2.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test2TEMPERATURElog.mat',"data","time","errormessage"); % Table details.
         

         case "Test 3 185kBq radioactive source present and oxidising material not present (Temperature)"
             
         test3 = readtable("test3.xlsx") % Import data from excel spreadheet for test3.
         time3=datetime(xlsread('test3.xlsx','A2:A1002'),'convertfrom','excel');
         time3.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d3=datetime('12-Aug-2022') % Date of test.
         d3.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time3=d3 + timeofday(time3) % Date and time variabe.
         
         plot(app.UIAxes,[time3],[test3.Temperature],'Color','b','LineWidth',0.8,'DisplayName','Test 3 185kBq radioactive source present and oxidising material not present (Temperature ^oC)'); % Plot temperature for test3.

         lowlow=min(test3.Temperature) % Find minimum value for test3 temperature measurements.
         low=min(test3.Temperature)*1.001 % Calculate low set point for test3 temperature using minimum value, plus 0.01%.
         high=max(test3.Temperature)/1.001 % Calculate high value for test3 temperature using maximum value minus 0.01%.
         highhigh=max(test3.Temperature) % Find maximum value for test3 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test3.Temperature>=lowlow & test3.Temperature<=low))+length(find(test3.Temperature>=high & test3.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test3.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, high radiation present, check radioactivity of material'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, high radiation present, check radioactivity of material'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test3.Temperature>=lowlow & test3.Temperature<=low); % Create fault log for test 3 temperature low set point violations.
         temperature=test3.Temperature(index); % Attain data from test3.
         time=test3.Time(index); % Record set point violations.
         
         index2=find(test3.Temperature>=high & test3.Temperature<=highhigh); % Create fault log for test 3 temperature high set point violations.
         temperature2=test3.Temperature(index2); % Attain data from test3.
         time2=test3.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test3TEMPERATURElog.mat',"data","time","errormessage"); % Table details.
         

         case "Test 4 40kBq radioactive source present and oxidising material not present (Temperature)"
             
         test4 = readtable("test4.xlsx") % Import data from excel spreadheet for test4.
         time4=datetime(xlsread('test4.xlsx','A2:A1002'),'convertfrom','excel');
         time4.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d4=datetime('13-Aug-2022') % Date of test.
         d4.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time4=d4 + timeofday(time4) % Date and time variabe.
         
         plot(app.UIAxes,[time4],[test4.Temperature],'Color','m','LineWidth',0.8,'DisplayName','Test 4 40kBq radioactive source present and oxidising material not present (Temperature ^oC)'); % Plot temperature for test4.
         
         lowlow=min(test4.Temperature) % Find minimum value for test4 temperature measurements.
         low=min(test4.Temperature)*1.001 % Calculate low set point for test4 temperature using minimum value, plus 0.01%.
         high=max(test4.Temperature)/1.001 % Calculate high value for test4 temperature using maximum value minus 0.01%.
         highhigh=max(test4.Temperature) % Find maximum value for test4 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test4.Temperature>=lowlow & test4.Temperature<=low))+length(find(test4.Temperature>=high & test4.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test4.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, radioactive source present'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, radioactive source present'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test4.Temperature>=lowlow & test4.Temperature<=low); % Create fault log for test 4 temperature low set point violations.
         temperature=test4.Temperature(index); % Attain data from test4.
         time=test4.Time(index); % Record set point violations.
         
         index2=find(test4.Temperature>=high & test4.Temperature<=highhigh); % Create fault log for test 4 temperature high set point violations.
         temperature2=test4.Temperature(index2); % Attain data from test4.
         time2=test4.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test4TEMPERATURElog.mat',"data","time","errormessage"); % Table details.


         case "Test 5 0.5M Sodium Hydroxide present and radioactive source not present (Temperature)"
             
         test5 = readtable("test5.xlsx") % Import data from excel spreadheet for test5.
         time5=datetime(xlsread('test5.xlsx','A2:A1002'),'convertfrom','excel');
         time5.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d5=datetime('14-Aug-2022') % Date of test.
         d5.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time5=d5 + timeofday(time5) % Date and time variabe.
         
         plot(app.UIAxes,[time5],[test5.Temperature],'Color','k','LineWidth',0.8,'DisplayName','Test 5 0.5M Sodium Hydroxide present and radioactive source not present (Temperature ^oC)'); % Plot temperature for test5.
 
         lowlow=min(test5.Temperature) % Find minimum value for test5 temperature measurements.
         low=min(test5.Temperature)*1.001 % Calculate low set point for test5 temperature using minimum value, plus 0.01%.
         high=max(test5.Temperature)/1.001 % Calculate high value for test5 temperature using maximum value minus 0.01%.
         highhigh=max(test5.Temperature) % Find maximum value for test5 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test5.Temperature>=lowlow & test5.Temperature<=low))+length(find(test5.Temperature>=high & test5.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test5.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, chemical source present'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, chemical source present'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test5.Temperature>=lowlow & test5.Temperature<=low); % Create fault log for test 5 temperature low set point violations.
         temperature=test5.Temperature(index); % Attain data from test5.
         time=test5.Time(index); % Record set point violations.
         
         index2=find(test5.Temperature>=high & test5.Temperature<=highhigh); % Create fault log for test 5 temperature high set point violations.
         temperature2=test5.Temperature(index2); % Attain data from test5.
         time2=test5.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test5TEMPERATURElog.mat',"data","time","errormessage"); % Table details.


         case "Test 6 0.01M Sodium Hydroxide present and radioactive source not present (Temperature)"
             
         test6 = readtable("test6.xlsx") % Import data from excel spreadheet for test6.
         time6=datetime(xlsread('test6.xlsx','A2:A1002'),'convertfrom','excel');
         time6.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d6=datetime('15-Aug-2022') % Date of test.
         d6.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time6=d6 + timeofday(time6) % Date and time variabe.
         
         plot(app.UIAxes,[time6],[test6.Temperature],'Color','#0072BD','LineWidth',0.8,'DisplayName','Test 6 0.01M Sodium Hydroxide present and radioactive source not present (Temperature ^oC)'); % Plot temperature for test6.
         
         lowlow=min(test6.Temperature) % Find minimum value for test6 temperature measurements.
         low=min(test6.Temperature)*1.001 % Calculate low set point for test6 temperature using minimum value, plus 0.01%.
         high=max(test6.Temperature)/1.001 % Calculate high value for test6 temperature using maximum value minus 0.01%.
         highhigh=max(test6.Temperature) % Find maximum value for test6 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test6.Temperature>=lowlow & test6.Temperature<=low))+length(find(test6.Temperature>=high & test6.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test6.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, chemical source present'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, chemical source present'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test6.Temperature>=lowlow & test6.Temperature<=low); % Create fault log for test 6 temperature low set point violations.
         temperature=test6.Temperature(index); % Attain data from test6.
         time=test6.Time(index); % Record set point violations.
         
         index2=find(test6.Temperature>=high & test6.Temperature<=highhigh); % Create fault log for test 6 temperature high set point violations.
         temperature2=test6.Temperature(index2); % Attain data from test6.
         time2=test6.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test6TEMPERATURElog.mat',"data","time","errormessage"); % Table details.


         case "Test 7 vacuum pump on, no radioactive or oxidising material present, temperature increased (Temperature)"
             
         test7 = readtable("test7.xlsx") % Import data from excel spreadheet for test7.
         time7=datetime(xlsread('test7.xlsx','A2:A1002'),'convertfrom','excel');
         time7.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d7=datetime('16-Aug-2022') % Date of test.
         d7.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time7=d7 + timeofday(time7) % Date and time variabe.
         
         plot(app.UIAxes,[time7],[test7.Temperature],'Color','#D95319','LineWidth',0.8,'DisplayName','Test 7 vacuum pump on, no radioactive or oxidising material present, temperature increased (Temperature ^oC)'); % Plot temperature for test7.

         lowlow=min(test7.Temperature) % Find minimum value for test7 temperature measurements.
         low=min(test7.Temperature)*1.001 % Calculate low set point for test7 temperature using minimum value, plus 0.01%.
         high=max(test7.Temperature)/1.001 % Calculate high value for test7 temperature using maximum value minus 0.01%.
         highhigh=max(test7.Temperature) % Find maximum value for test7 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test7.Temperature>=lowlow & test7.Temperature<=low))+length(find(test7.Temperature>=high & test7.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test7.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, temperature increased and pressure too low'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, temperature increased and pressure too low'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test7.Temperature>=lowlow & test7.Temperature<=low); % Create fault log for test 7 temperature low set point violations.
         temperature=test7.Temperature(index); % Attain data from test7.
         time=test7.Time(index); % Record set point violations.
         
         index2=find(test7.Temperature>=high & test7.Temperature<=highhigh); % Create fault log for test 7 temperature high set point violations.
         temperature2=test7.Temperature(index2); % Attain data from test7.
         time2=test7.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test7TEMPERATURElog.mat',"data","time","errormessage"); % Table details.


         case "Test 8 vacuum pump off, no radioactive or oxidising material present, temperature increased (Temperature)"
             
         test8 = readtable("test8.xlsx") % Import data from excel spreadheet for test8.
         time8=datetime(xlsread('test8.xlsx','A2:A1002'),'convertfrom','excel');
         time8.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d8=datetime('17-Aug-2022') % Date of test.
         d8.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time8=d8 + timeofday(time8) % Date and time variabe.
         
         plot(app.UIAxes,[time8],[test8.Temperature],'Color','#EDB120','LineWidth',0.8,'DisplayName','Test 8 vacuum pump off, no radioactive or oxidising material present, temperature increased (Temperature ^oC)'); % Plot temperature for test8.

         lowlow=min(test8.Temperature) % Find minimum value for test8 temperature measurements.
         low=min(test8.Temperature)*1.001 % Calculate low set point for test8 temperature using minimum value, plus 0.01%.
         high=max(test8.Temperature)/1.001 % Calculate high value for test8 temperature using maximum value minus 0.01%.
         highhigh=max(test8.Temperature) % Find maximum value for test8 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test8.Temperature>=lowlow & test8.Temperature<=low))+length(find(test8.Temperature>=high & test8.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test8.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, temperature increased and pressure too high'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, temperature increased and pressure too high'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test8.Temperature>=lowlow & test8.Temperature<=low); % Create fault log for test 8 temperature low set point violations.
         temperature=test8.Temperature(index); % Attain data from test8.
         time=test8.Time(index); % Record set point violations.
         
         index2=find(test8.Temperature>=high & test8.Temperature<=highhigh); % Create fault log for test 8 temperature high set point violations.
         temperature2=test8.Temperature(index2); % Attain data from test8.
         time2=test8.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test8log.mat',"data","time","errormessage"); % Table details.


         case "Test 9 vacuum pump on, no radioactive or oxidising material present, temperature decreased (Temperature)"
             
         test9 = readtable("test9.xlsx") % Import data from excel spreadheet for test9.
         time9=datetime(xlsread('test9.xlsx','A2:A1002'),'convertfrom','excel');
         time9.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d9=datetime('18-Aug-2022') % Date of test.
         d9.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time9=d9 + timeofday(time9) % Date and time variabe.
         
         plot(app.UIAxes,[time9],[test9.Temperature],'Color','#7E2F8E','LineWidth',0.8,'DisplayName','Test 9 vacuum pump on, no radioactive or oxidising material present, temperature decreased (Temperature ^oC)'); % Plot temperature for test9.
         
         lowlow=min(test9.Temperature) % Find minimum value for test9 temperature measurements.
         low=min(test9.Temperature)*1.001 % Calculate low set point for test9 temperature using minimum value, plus 0.01%.
         high=max(test9.Temperature)/1.001 % Calculate high value for test9 temperature using maximum value minus 0.01%.
         highhigh=max(test9.Temperature) % Find maximum value for test9 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test9.Temperature>=lowlow & test9.Temperature<=low))+length(find(test9.Temperature>=high & test9.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test9.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, temperature increased and pressure too low'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, temperature increased and pressure too low'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test9.Temperature>=lowlow & test9.Temperature<=low); % Create fault log for test 9 temperature low set point violations.
         temperature=test9.Temperature(index); % Attain data from test9.
         time=test9.Time(index); % Record set point violations.
         
         index2=find(test9.Temperature>=high & test9.Temperature<=highhigh); % Create fault log for test 9 temperature high set point violations.
         temperature2=test9.Temperature(index2); % Attain data from test9.
         time2=test9.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test9TEMPERATURElog.mat',"data","time","errormessage"); % Table details.


         case "Test 10 vacuum pump off, no radioactive or oxidising material present, temperature decreased (Temperature)"
                 
         test10 = readtable("test10.xlsx") % Import data from excel spreadheet for test10.
         time10=datetime(xlsread('test10.xlsx','A2:A1002'),'convertfrom','excel');
         time10.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d10=datetime('19-Aug-2022') % Date of test.
         d10.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time10=d10 + timeofday(time10) % Date and time variabe.
         
         plot(app.UIAxes,[time10],[test10.Temperature],'Color','#77AC30','LineWidth',0.8,'DisplayName','Test 10 vacuum pump off, no radioactive or oxidising material present, temperature decreased (Temperature ^oC)'); % Plot temperature for test10.   
         
         lowlow=min(test10.Temperature) % Find minimum value for test10 temperature measurements.
         low=min(test10.Temperature)*1.001 % Calculate low set point for test10 temperature using minimum value, plus 0.01%.
         high=max(test10.Temperature)/1.001 % Calculate high value for test10 temperature using maximum value minus 0.01%.
         highhigh=max(test10.Temperature) % Find maximum value for test10 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test10.Temperature>=lowlow & test10.Temperature<=low))+length(find(test10.Temperature>=high & test10.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test10.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, temperature decreased and pressure too high'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, temperature decreased and pressure too high'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test10.Temperature>=lowlow & test10.Temperature<=low); % Create fault log for test 10 temperature low set point violations.
         temperature=test10.Temperature(index); % Attain data from test10.
         time=test10.Time(index); % Record set point violations.
         
         index2=find(test10.Temperature>=high & test10.Temperature<=highhigh); % Create fault log for test 10 temperature high set point violations.
         temperature2=test10.Temperature(index2); % Attain data from test10.
         time2=test10.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test10TEMPERATURElog.mat',"data","time","errormessage"); % Table details.

         
         case "Test 11 vacuum pump on, no radioactive or oxidising material present, humidity increased (Temperature)"
         
         test11 = readtable("test11.xlsx") % Import data from excel spreadheet for test11.
         time11=datetime(xlsread('test11.xlsx','A2:A1002'),'convertfrom','excel');
         time11.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d11=datetime('20-Aug-2022') % Date of test.
         d11.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time11=d11 + timeofday(time11) % Date and time variabe.
         
         plot(app.UIAxes,[time11],[test11.Temperature],'Color','#4DBEEE','LineWidth',0.8,'DisplayName','Test 11 vacuum pump on, no radioactive or oxidising material present, humidity increased (Temperature ^oC)'); % Plot temperature for test11.   
         
         lowlow=min(test11.Temperature) % Find minimum value for test11 temperature measurements.
         low=min(test11.Temperature)*1.001 % Calculate low set point for test11 temperature using minimum value, plus 0.01%.
         high=max(test11.Temperature)/1.001 % Calculate high value for test11 temperature using maximum value minus 0.01%.
         highhigh=max(test11.Temperature) % Find maximum value for test11 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test11.Temperature>=lowlow & test11.Temperature<=low))+length(find(test11.Temperature>=high & test11.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test11.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, humidity increased and pressure too low'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, humidity increased and pressure too low'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test11.Temperature>=lowlow & test11.Temperature<=low); % Create fault log for test 11 temperature low set point violations.
         temperature=test11.Temperature(index); % Attain data from test11.
         time=test11.Time(index); % Record set point violations.
         
         index2=find(test11.Temperature>=high & test11.Temperature<=highhigh); % Create fault log for test 11 temperature high set point violations.
         temperature2=test11.Temperature(index2); % Attain data from test11.
         time2=test11.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test11TEMPERATURElog.mat',"data","time","errormessage"); % Table details.

   
         case "Test 12 vacuum pump off, no radioactive or oxidising material present, humidity increased (Temperature)"
         
         test12 = readtable("test12.xlsx") % Import data from excel spreadheet for test12.
         time12=datetime(xlsread('test12.xlsx','A2:A1002'),'convertfrom','excel');
         time12.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d12=datetime('21-Aug-2022') % Date of test.
         d12.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time12=d12 + timeofday(time12) % Date and time variabe.
         
         plot(app.UIAxes,[time12],[test12.Temperature],'Color','#A2142F','LineWidth',0.8,'DisplayName','Test 12 vacuum pump off, no radioactive or oxidising material present, humidity increased (Temperature ^oC)'); % Plot temperature for test12. 
       
         lowlow=min(test12.Temperature) % Find minimum value for test12 temperature measurements.
         low=min(test12.Temperature)*1.001 % Calculate low set point for test12 temperature using minimum value, plus 0.01%.
         high=max(test12.Temperature)/1.001 % Calculate high value for test12 temperature using maximum value minus 0.01%.
         highhigh=max(test12.Temperature) % Find maximum value for test12 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test12.Temperature>=lowlow & test12.Temperature<=low))+length(find(test12.Temperature>=high & test12.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test12.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, humidity increased and pressure too high'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, humidity increased and pressure too high'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test12.Temperature>=lowlow & test12.Temperature<=low); % Create fault log for test 12 temperature low set point violations.
         temperature=test12.Temperature(index); % Attain data from test12.
         time=test12.Time(index); % Record set point violations.
         
         index2=find(test12.Temperature>=high & test12.Temperature<=highhigh); % Create fault log for test 12 temperature high set point violations.
         temperature2=test12.Temperature(index2); % Attain data from test12.
         time2=test12.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test12TEMPERATURElog.mat',"data","time","errormessage"); % Table details.


         case "Test 13 vacuum pump on, no radioactive or oxidising material present, humidity and temperature increased (Temperature)"
         
         test13 = readtable("test13.xlsx") % Import data from excel spreadheet for test13.
         time13=datetime(xlsread('test13.xlsx','A2:A1002'),'convertfrom','excel');
         time13.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d13=datetime('22-Aug-2022') % Date of test.
         d13.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time13=d13 + timeofday(time13) % Date and time variabe.
         
         plot(app.UIAxes,[time13],[test13.Temperature],'Color','r','LineWidth',0.8,'DisplayName','Test 13 vacuum pump on, no radioactive or oxidising material present, humidity and temperature increased (Temperature ^oC)'); % Plot temperature for test13. 
         
         lowlow=min(test13.Temperature) % Find minimum value for test13 temperature measurements.
         low=min(test13.Temperature)*1.001 % Calculate low set point for test13 temperature using minimum value, plus 0.01%.
         high=max(test13.Temperature)/1.001 % Calculate high value for test13 temperature using maximum value minus 0.01%.
         highhigh=max(test13.Temperature) % Find maximum value for test13 temperature measurements..
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test13.Temperature>=lowlow & test13.Temperature<=low))+length(find(test13.Temperature>=high & test13.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test13.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, humidity and temperature increased and pressure too low'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, humidity and temperature increased and pressure too low'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test13.Temperature>=lowlow & test13.Temperature<=low); % Create fault log for test 13 temperature low set point violations.
         temperature=test13.Temperature(index); % Attain data from test13.
         time=test13.Time(index); % Record set point violations.
         
         index2=find(test13.Temperature>=high & test13.Temperature<=highhigh); % Create fault log for test 13 temperature high set point violations.
         temperature2=test13.Temperature(index2); % Attain data from test13.
         time2=test13.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test13TEMPERATURElog.mat',"data","time","errormessage"); % Table details.

         
         case "Test 14 vacuum pump off, no radioactive or oxidising material present, humidity and temperature increased (Temperature)"
                  
         test14 = readtable("test14.xlsx") % Import data from excel spreadheet for test14.
         time14=datetime(xlsread('test14.xlsx','A2:A1002'),'convertfrom','excel');
         time14.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d14=datetime('23-Aug-2022') % Date of test.
         d14.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time14=d14 + timeofday(time14) % Date and time variabe.
         
         plot(app.UIAxes,[time14],[test14.Temperature],'Color','g','LineWidth',0.8,'DisplayName','Test 14 vacuum pump off, no radioactive or oxidising material present, humidity and temperature increased (Temperature ^oC)'); % Plot temperature for test14. 
         
         lowlow=min(test14.Temperature) % Find minimum value for test14 temperature measurements.
         low=min(test14.Temperature)*1.001 % Calculate low set point for test14 temperature using minimum value, plus 0.01%.
         high=max(test14.Temperature)/1.001 % Calculate high value for test14 temperature using maximum value minus 0.01%.
         highhigh=max(test14.Temperature) % Find maximum value for test14 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test14.Temperature>=lowlow & test14.Temperature<=low))+length(find(test14.Temperature>=high & test14.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test14.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, humidity and temperature increased and pressure too high'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, humidity and temperature increased and pressure too high'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test14.Temperature>=lowlow & test14.Temperature<=low); % Create fault log for test 14 temperature low set point violations.
         temperature=test14.Temperature(index); % Attain data from test14.
         time=test14.Time(index); % Record set point violations.
         
         index2=find(test14.Temperature>=high & test14.Temperature<=highhigh); % Create fault log for test 14 temperature high set point violations.
         temperature2=test14.Temperature(index2); % Attain data from test14.
         time2=test14.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test15TEMPERATURElog.mat',"data","time","errormessage"); % Table details.

         
         case "Test 15 vacuum pump on, no radioactive or oxidising material present, humidity increased and temperature decreased (Temperature)"
                  
         test15 = readtable("test15.xlsx") % Import data from excel spreadheet for test15.
         time15=datetime(xlsread('test15.xlsx','A2:A1002'),'convertfrom','excel');
         time15.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d15=datetime('24-Aug-2022') % Date of test.
         d15.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time15=d15 + timeofday(time15) % Date and time variabe.
         
         plot(app.UIAxes,[time15],[test15.Temperature],'Color','b','LineWidth',0.8,'DisplayName','Test 15 vacuum pump on, no radioactive or oxidising material present, humidity increased and temperature decreased (Temperature ^oC)'); % Plot temperature for test15. 
         
         lowlow=min(test15.Temperature) % Find minimum value for test15 temperature measurements.
         low=min(test15.Temperature)*1.001 % Calculate low set point for test15 temperature using minimum value, plus 0.01%.
         high=max(test15.Temperature)/1.001 % Calculate high value for test15 temperature using maximum value minus 0.01%.
         highhigh=max(test15.Temperature) % Find maximum value for test15 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test15.Temperature>=lowlow & test15.Temperature<=low))+length(find(test15.Temperature>=high & test15.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test15.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='System Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, humidity increased and temperature decreased and pressure too low'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, humidity increased and temperature decreased and pressure too low'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test15.Temperature>=lowlow & test15.Temperature<=low); % Create fault log for test 15 temperature low set point violations.
         temperature=test15.Temperature(index); % Attain data from test15.
         time=test15.Time(index); % Record set point violations.
         
         index2=find(test15.Temperature>=high & test15.Temperature<=highhigh); % Create fault log for test 15 temperature high set point violations.
         temperature2=test15.Temperature(index2); % Attain data from test15.
         time2=test15.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test15TEMPERATURElog.mat',"data","time","errormessage"); % Table details.

         
         case "Test 16 vacuum pump off, no radioactive or oxidising material present, humidity increased and temperature decreased (Temperature)"
                  
         test16 = readtable("test16.xlsx") % Import data from excel spreadheet for test16.
         time16=datetime(xlsread('test16.xlsx','A2:A1002'),'convertfrom','excel');
         time16.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d16=datetime('25-Aug-2022') % Date of test.
         d16.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time16=d16 + timeofday(time16) % Date and time variabe.
         
         plot(app.UIAxes,[time16],[test16.Temperature],'Color','k','LineWidth',0.8,'DisplayName','Test 16 vacuum pump off, no radioactive or oxidising material present, humidity increased and temperature decreased (Temperature ^oC)'); % Plot temperature for test16. 
         
         lowlow=min(test16.Temperature) % Find minimum value for test16 temperature measurements.
         low=min(test16.Temperature)*1.001 % Calculate low set point for test16 temperature using minimum value, plus 0.01%.
         high=max(test16.Temperature)/1.001 % Calculate high value for test16 temperature using maximum value minus 0.01%.
         highhigh=max(test16.Temperature) % Find maximum value for test16 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test16.Temperature>=lowlow & test16.Temperature<=low))+length(find(test16.Temperature>=high & test16.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test16.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, humidity increased and temperature decreased and pressure too high'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, humidity increased and temperature decreased and pressure too high'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test16.Temperature>=lowlow & test16.Temperature<=low); % Create fault log for test 16 temperature low set point violations.
         temperature=test16.Temperature(index); % Attain data from test16.
         time=test16.Time(index); % Record set point violations.
         
         index2=find(test16.Temperature>=high & test16.Temperature<=highhigh); % Create fault log for test 16 temperature high set point violations.
         temperature2=test16.Temperature(index2); % Attain data from test16.
         time2=test16.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test16TEMPERATURElog.mat',"data","time","errormessage"); % Table details.
         
         
         case "Test 17 vacuum pump on, no radioactive or oxidising material present, humidity decreased (Temperature)"
                  
         test17 = readtable("test17.xlsx") % Import data from excel spreadheet for test17.
         time17=datetime(xlsread('test17.xlsx','A2:A1002'),'convertfrom','excel');
         time17.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d17=datetime('26-Aug-2022') % Date of test.
         d17.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time17=d17 + timeofday(time17) % Date and time variabe.
         
         plot(app.UIAxes,[time17],[test17.Temperature],'Color','#0072BD','LineWidth',0.8,'DisplayName','Test 17 vacuum pump on, no radioactive or oxidising material present, humidity decreased (Temperature ^oC)'); % Plot temperature for test17. 
         
         lowlow=min(test17.Temperature) % Find minimum value for test17 temperature measurements.
         low=min(test17.Temperature)*1.001 % Calculate low set point for test17 temperature using minimum value, plus 0.01%.
         high=max(test17.Temperature)/1.001 % Calculate high value for test17 temperature using maximum value minus 0.01%.
         highhigh=max(test17.Temperature) % Find maximum value for test17 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test17.Temperature>=lowlow & test17.Temperature<=low))+length(find(test17.Temperature>=high & test17.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test17.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, humidity decreased and pressure too low'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, humidity decreased and pressure too low'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test17.Temperature>=lowlow & test17.Temperature<=low); % Create fault log for test 17 temperature low set point violations.
         temperature=test17.Temperature(index); % Attain data from test17.
         time=test17.Time(index); % Record set point violations.
         
         index2=find(test17.Temperature>=high & test17.Temperature<=highhigh); % Create fault log for test 17 temperature high set point violations.
         temperature2=test17.Temperature(index2); % Attain data from test17.
         time2=test17.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test17TEMPERATURElog.mat',"data","time","errormessage"); % Table details.
         
         
         case "Test 18 vacuum pump off, no radioactive or oxidising material present, humidity decreased (Temperature)"
                  
         test18 = readtable("test18.xlsx") % Import data from excel spreadheet for test18.
         time18=datetime(xlsread('test18.xlsx','A2:A1002'),'convertfrom','excel');
         time18.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d18=datetime('27-Aug-2022') % Date of test.
         d18.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time18=d18 + timeofday(time18) % Date and time variabe.
         
         plot(app.UIAxes,[time18],[test18.Temperature],'Color','#D95319','LineWidth',0.8,'DisplayName','Test 18 vacuum pump off, no radioactive or oxidising material present, humidity decreased (Temperature ^oC)'); % Plot temperature for test18. 
         
         lowlow=min(test18.Temperature) % Find minimum value for test8 temperature measurements.
         low=min(test18.Temperature)*1.001 % Calculate low set point for test18 temperature using minimum value, plus 0.01%.
         high=max(test18.Temperature)/1.001 % Calculate high value for test18 temperature using maximum value minus 0.01%.
         highhigh=max(test18.Temperature) % Find maximum value for test18 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test18.Temperature>=lowlow & test18.Temperature<=low))+length(find(test18.Temperature>=high & test18.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test18.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, humidity decreased and pressure too high'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, humidity decreased and pressure too high'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test18.Temperature>=lowlow & test18.Temperature<=low); % Create fault log for test 18 temperature low set point violations.
         temperature=test18.Temperature(index); % Attain data from test18.
         time=test18.Time(index); % Record set point violations.
         
         index2=find(test18.Temperature>=high & test18.Temperature<=highhigh); % Create fault log for test 18 temperature high set point violations.
         temperature2=test18.Temperature(index2); % Attain data from test18.
         time2=test18.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test18TEMPERATURElog.mat',"data","time","errormessage"); % Table details.


         case "Test 19 vacuum pump on, no radioactive or oxidising material present, humidity decreased and temperature increased (Temperature)"
                  
         test19 = readtable("test19.xlsx") % Import data from excel spreadheet for test19.
         time19=datetime(xlsread('test19.xlsx','A2:A1002'),'convertfrom','excel');
         time19.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d19=datetime('28-Aug-2022') % Date of test.
         d19.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time19=d19 + timeofday(time19) % Date and time variabe.
         
         plot(app.UIAxes,[time19],[test19.Temperature],'Color','#EDB120','LineWidth',0.8,'DisplayName','Test 19 vacuum pump on, no radioactive or oxidising material present, humidity decreased and temperature increased (Temperature ^oC)'); % Plot temperature for test19. 
         
         lowlow=min(test19.Temperature) % Find minimum value for test19 temperature measurements.
         low=min(test19.Temperature)*1.001 % Calculate low set point for test19 temperature using minimum value, plus 0.01%.
         high=max(test19.Temperature)/1.001 % Calculate high value for test19 temperature using maximum value minus 0.01%.
         highhigh=max(test19.Temperature) % Find maximum value for test19 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test19.Temperature>=lowlow & test19.Temperature<=low))+length(find(test19.Temperature>=high & test19.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test19.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, humidity decreased, temperature increased and pressure too low'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, humidity decreased, temperature increased and pressure too low'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test19.Temperature>=lowlow & test19.Temperature<=low); % Create fault log for test 19 temperature low set point violations.
         temperature=test19.Temperature(index); % Attain data from test19.
         time=test19.Time(index); % Record set point violations.
         
         index2=find(test19.Temperature>=high & test19.Temperature<=highhigh); % Create fault log for test 19 temperature high set point violations.
         temperature2=test19.Temperature(index2); % Attain data from test19.
         time2=test19.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test19TEMPERATURElog.mat',"data","time","errormessage"); % Table details.

         
         case "Test 20 vacuum pump off, no radioactive or oxidising material present, humidity decreased and temperature increased (Temperature)"
                  
         test20 = readtable("test20.xlsx") % Import data from excel spreadheet for test20.
         time20=datetime(xlsread('test20.xlsx','A2:A1002'),'convertfrom','excel');
         time20.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d20=datetime('29-Aug-2022') % Date of test.
         d20.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time20=d20 + timeofday(time20) % Date and time variabe.
         
         plot(app.UIAxes,[time20],[test20.Temperature],'Color','#7E2F8E','LineWidth',0.8,'DisplayName','Test 20 vacuum pump off, no radioactive or oxidising material present, humidity decreased and temperature increased (Temperature ^oC)'); % Plot temperature for test20. 
         
         lowlow=min(test20.Temperature) % Find minimum value for test20 temperature measurements.
         low=min(test20.Temperature)*1.001 % Calculate low set point for test20 temperature using minimum value, plus 0.01%.
         high=max(test20.Temperature)/1.001 % Calculate high value for test20 temperature using maximum value minus 0.01%.
         highhigh=max(test20.Temperature) % Find maximum value for test20 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test20.Temperature>=lowlow & test20.Temperature<=low))+length(find(test20.Temperature>=high & test20.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test20.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, humidity decreased, temperature increased and pressure too high'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, humidity decreased, temperature increased and pressure too high'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test20.Temperature>=lowlow & test20.Temperature<=low); % Create fault log for test 20 temperature low set point violations.
         temperature=test20.Temperature(index); % Attain data from test20.
         time=test20.Time(index); % Record set point violations.
         
         index2=find(test20.Temperature>=high & test20.Temperature<=highhigh); % Create fault log for test 20 temperature high set point violations.
         temperature2=test20.Temperature(index2); % Attain data from test20.
         time2=test20.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test20TEMPERATURElog.mat',"data","time","errormessage"); % Table details.

         
         case "Test 21 vacuum pump on, no radioactive or oxidising material present, humidity and temperature decreased (Temperature)"
                  
         test21 = readtable("test21.xlsx") % Import data from excel spreadheet for test21.
         time21=datetime(xlsread('test21.xlsx','A2:A1002'),'convertfrom','excel');
         time21.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d21=datetime('30-Aug-2022') % Date of test.
         d21.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time21=d21 + timeofday(time21) % Date and time variabe.
         
         plot(app.UIAxes,[time21],[test21.Temperature],'Color','#77AC30','LineWidth',0.8,'DisplayName','Test 21 vacuum pump on, no radioactive or oxidising material present, humidity and temperature decreased (Temperature ^oC)'); % Plot temperature for test21. 
         
         lowlow=min(test21.Temperature) % Find minimum value for test21 temperature measurements.
         low=min(test21.Temperature)*1.001 % Calculate low set point for test21 temperature using minimum value, plus 0.01%.
         high=max(test21.Temperature)/1.001 % Calculate high value for test21 temperature using maximum value minus 0.01%.
         highhigh=max(test21.Temperature) % Find maximum value for test21 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test21.Temperature>=lowlow & test21.Temperature<=low))+length(find(test21.Temperature>=high & test21.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test21.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox System Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, humidity and temperature decreased and pressure too low'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, humidity and temperature decreased and pressure too low'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test21.Temperature>=lowlow & test21.Temperature<=low); % Create fault log for test 21 temperature low set point violations.
         temperature=test21.Temperature(index); % Attain data from test21.
         time=test21.Time(index); % Record set point violations.
         
         index2=find(test21.Temperature>=high & test21.Temperature<=highhigh); % Create fault log for test 21 temperature high set point violations.
         temperature2=test21.Temperature(index2); % Attain data from test21.
         time2=test21.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test21TEMPERATURElog.mat',"data","time","errormessage"); % Table details.

         
         case "Test 22 vacuum pump off, no radioactive or oxidising material present, humidity and temperature decreased (Temperature)"
                  
         test22 = readtable("test22.xlsx") % Import data from excel spreadheet for test22.
         time22=datetime(xlsread('test22.xlsx','A2:A1002'),'convertfrom','excel');
         time22.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
         d22=datetime('31-Aug-2022') % Date of test.
         d22.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
         time22=d22 + timeofday(time22) % Date and time variabe.
         
         plot(app.UIAxes,[time22],[test22.Temperature],'Color','#4DBEEE','LineWidth',0.8,'DisplayName','Test 22 vacuum pump off, no radioactive or oxidising material present, humidity and temperature decreased (Temperature ^oC)'); % Plot temperature for test22. 
         
         lowlow=min(test22.Temperature) % Find minimum value for test22 temperature measurements.
         low=min(test22.Temperature)*1.001 % Calculate low set point for test22 temperature using minimum value, plus 0.01%.
         high=max(test22.Temperature)/1.001 % Calculate high value for test22 temperature using maximum value minus 0.01%.
         highhigh=max(test22.Temperature) % Find maximum value for test22 temperature measurements.
         s=app.NumberofSetPointVialationsEditField.Value; % Take previous field value. 
         
         app.NumberofSetPointVialationsEditField.Value=length(find(test22.Temperature>=lowlow & test22.Temperature<=low))+length(find(test22.Temperature>=high & test22.Temperature<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField.Value=app.NumberofSetPointVialationsEditField.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField.Value=app.NumberofSetPointVialationsEditField.Value/length(test22.Temperature)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.TemperatureSystemStatusMessageLabel.Text='Glovebox Temperature Healthy'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField.Value>20 && app.SetPointVialationPercentageEditField.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.TemperatureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, humidity and temperature decreased and pressure too high'; % Display message.
             app.TemperatureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField.BackgroundColor='r'; % Greater than 50% set point.
             app.TemperatureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, humidity and temperature decreased and pressure too high'; % If number of set point violations is greater than 50% temperature instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.TemperatureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test22.Temperature>=lowlow & test22.Temperature<=low); % Create fault log for test 22 temperature low set point violations.
         temperature=test22.Temperature(index); % Attain data from test21.
         time=test22.Time(index); % Record set point violations.
         
         index2=find(test22.Temperature>=high & test22.Temperature<=highhigh); % Create fault log for test 22 temperature high set point violations.
         temperature2=test22.Temperature(index2); % Attain data from test21.
         time2=test22.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     temperature(L+i,1)=temperature2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=temperature; % Column 2 temperature.
         errormessage=app.TemperatureSystemStatusMessageLabel.Text % Column 3 label.
         save('test22TEMPERATURElog.mat',"data","time","errormessage"); % Table details.


         case "blank"
        
         end
         
        % Humidity
        
        switch app.HumidityDropDown.Value

        case "Test 1 vacuum pump on, no radioactive or oxidising material present (Humidity)"
 
        test1 = readtable("test1.xlsx") % Import data from excel spreadsheet for test1. 
        time1=datetime(xlsread('test1.xlsx','A2:A1002'),'convertfrom','excel');
        time1.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d1=datetime('10-Aug-2022') % Date of test.
        d1.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time1=d1 + timeofday(time1) % Date and time variabe.

        plot(app.UIAxes,[time1],[test1.Humidity],'Color','#A2142F','LineWidth',0.8,'DisplayName','Test 1 vacuum pump on, no radioactive or oxidising material present (Humidity %)'); % Plot humidity for test1.

        lowlow=min(test1.Humidity) % Find minimum value for test1 humidity measurements.
        low=min(test1.Humidity)*1.001 % Calculate low set point for test1 humidity using minimum value, plus 0.01%.
        high=max(test1.Humidity)/1.001 % Calculate high value for test1 humidity using maximum value minus 0.01%.
        highhigh=max(test1.Humidity) % Find maximum value for test1 humidity measurements.

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test1.Humidity>=lowlow & test1.Humidity<=low))+length(find(test1.Humidity>=high & test1.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test1.Humidity)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - "Glovebox humidity not within design limits, issue with reduction in Glovebox pressure, pressure too low"'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, issue with reduction in Glovebox pressure, pressure too low'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test1.Humidity>=lowlow & test1.Humidity<=low); % Create fault log for test 1 humidity low set point violations.
         humidity=test1.Humidity(index); % Attain data from test1.
         time=test1.Time(index); % Record set point violations.
         
         index2=find(test1.Humidity>=high & test1.Humidity<=highhigh); % Create fault log for test 1 humidity high set point violations.
         humidity2=test1.Humidity(index2); % Attain data from test1.
         time2=test1.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test1HUMIDITYlog.mat',"data","time","errormessage"); % Table details.

         
        case "Test 2 vacuum pump off, no radioactive or oxidising material present (Humidity)"  
             
        test2 = readtable("test2.xlsx") % Import data from excel spreadsheet for test2.
        time2=datetime(xlsread('test2.xlsx','A2:A1002'),'convertfrom','excel');
        time2.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d2=datetime('11-Aug-2022') % Date of test.
        d2.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time2=d2 + timeofday(time2) % Date and time variabe.

        plot(app.UIAxes,[time2],[test2.Humidity],'Color','r','LineWidth',0.8,'DisplayName','Test 2 vacuum pump off, no radioactive or oxidising material present (Humidity %)'); % Plot humidity for test2.

        lowlow=min(test2.Humidity) % Find minimum value for test2 humidity measurements.
        low=min(test2.Humidity)*1.001 % Calculate low set point for test2 humidity using minimum value, plus 0.01%.
        high=max(test2.Humidity)/1.001 % Calculate high value for test2 humidity using maximum value minus 0.01%.
        highhigh=max(test2.Humidity) % Find maximum value for test2 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test2.Humidity>=lowlow & test2.Humidity<=low))+length(find(test2.Humidity>=high & test2.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test2.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, issue with reduction in Glovebox pressure, pressure too high'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, issue with reduction in Glovebox pressure, pressure too high'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test2.Humidity>=lowlow & test2.Humidity<=low); % Create fault log for test 2 humidity low set point violations.
         humidity=test2.Humidity(index); % Attain data from test2.
         time=test2.Time(index); % Record set point violations.
         
         index2=find(test2.Humidity>=high & test2.Humidity<=highhigh); % Create fault log for test 2 humidity high set point violations.
         humidity2=test2.Humidity(index2); % Attain data from test2.
         time2=test2.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test2HUMIDITYlog.mat',"data","time","errormessage"); % Table details.



        case "Test 3 185kBq radioactive source present and oxidising material not present (Humidity)"
             
        test3 = readtable("test3.xlsx") % Import data from excel spreadheet for test3.
        time3=datetime(xlsread('test3.xlsx','A2:A1002'),'convertfrom','excel');
        time3.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d3=datetime('12-Aug-2022') % Date of test.
        d3.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time3=d3 + timeofday(time3) % Date and time variabe.
        
        plot(app.UIAxes,[time3],[test3.Humidity],'Color','g','LineWidth',0.8,'DisplayName','Test 3 185kBq radioactive source present and oxidising material not present (Humidity %)'); % Plot humidity for test3.

        lowlow=min(test3.Humidity) % Find minimum value for test3 humidity measurements.
        low=min(test3.Humidity)*1.001 % Calculate low set point for test3 humidity using minimum value, plus 0.01%.
        high=max(test3.Humidity)/1.001 % Calculate high value for test3 humidity using maximum value minus 0.01%.
        highhigh=max(test3.Humidity) % Find maximum value for test3 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test3.Humidity>=lowlow & test3.Humidity<=low))+length(find(test3.Humidity>=high & test3.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test3.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, high radiation present, check radioactivity of material'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, high radiation present, check radioactivity of material'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test3.Humidity>=lowlow & test3.Humidity<=low); % Create fault log for test 3 humidity low set point violations.
         humidity=test3.Humidity(index); % Attain data from test3.
         time=test3.Time(index); % Record set point violations.
         
         index2=find(test3.Humidity>=high & test3.Humidity<=highhigh); % Create fault log for test 3 humidity high set point violations.
         humidity2=test3.Humidity(index2); % Attain data from test3.
         time2=test3.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test3HUMIDITYlog.mat',"data","time","errormessage"); % Table details.


        
        case "Test 4 40kBq radioactive source present and oxidising material not present (Humidity)"
            
        test4 = readtable("test4.xlsx") % Import data from excel spreadheet for test4.
        time4=datetime(xlsread('test4.xlsx','A2:A1002'),'convertfrom','excel');
        time4.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d4=datetime('13-Aug-2022') % Date of test.
        d4.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time4=d4 + timeofday(time4) % Date and time variabe.
         
        plot(app.UIAxes,[time4],[test4.Humidity],'Color','b','LineWidth',0.8,'DisplayName','Test 4 40kBq radioactive source present and oxidising material not present (Humidity %)'); % Plot humidity for test4.
        
        lowlow=min(test4.Humidity) % Find minimum value for test4 humidity measurements.
        low=min(test4.Humidity)*1.001 % Calculate low set point for test4 humidity using minimum value, plus 0.01%.
        high=max(test4.Humidity)/1.001 % Calculate high value for test4 humidity using maximum value minus 0.01%.
        highhigh=max(test4.Humidity) % Find maximum value for test4 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test4.Humidity>=lowlow & test4.Humidity<=low))+length(find(test4.Humidity>=high & test4.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test4.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, radioactive source present'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, radioactive source present'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test4.Humidity>=lowlow & test4.Humidity<=low); % Create fault log for test 4 humidity low set point violations.
         humidity=test4.Humidity(index); % Attain data from test4.
         time=test4.Time(index); % Record set point violations.
         
         index2=find(test4.Humidity>=high & test4.Humidity<=highhigh); % Create fault log for test 4 humidity high set point violations.
         humidity2=test4.Humidity(index2); % Attain data from test4.
         time2=test4.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test4HUMIDITYlog.mat',"data","time","errormessage"); % Table details.
         
  
        case "Test 5 0.5M Sodium Hydroxide present and radioactive source not present (Humidity)"
             
        test5 = readtable("test5.xlsx") % Import data from excel spreadheet for test5.
        time5=datetime(xlsread('test5.xlsx','A2:A1002'),'convertfrom','excel');
        time5.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d5=datetime('14-Aug-2022') % Date of test.
        d5.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time5=d5 + timeofday(time5) % Date and time variabe.
         
        plot(app.UIAxes,[time5],[test5.Humidity],'Color','m','LineWidth',0.8,'DisplayName','Test 5 0.5M Sodium Hydroxide present and radioactive source not present (Humidity %)'); % Plot humidity for test5.
        
        lowlow=min(test5.Humidity) % Find minimum value for test5 humidity measurements.
        low=min(test5.Humidity)*1.001 % Calculate low set point for test5 humidity using minimum value, plus 0.01%.
        high=max(test5.Humidity)/1.001 % Calculate high value for test5 humidity using maximum value minus 0.01%.
        highhigh=max(test5.Humidity) % Find maximum value for test5 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test5.Humidity>=lowlow & test5.Humidity<=low))+length(find(test5.Humidity>=high & test5.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test5.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, chemical source present'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, chemical source present'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test5.Humidity>=lowlow & test5.Humidity<=low); % Create fault log for test 5 humidity low set point violations.
         humidity=test5.Humidity(index); % Attain data from test5.
         time=test5.Time(index); % Record set point violations.
         
         index2=find(test5.Humidity>=high & test5.Humidity<=highhigh); % Create fault log for test 5 humidity high set point violations.
         humidity2=test5.Humidity(index2); % Attain data from test5.
         time2=test5.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test5HUMIDITYlog.mat',"data","time","errormessage"); % Table details.

         
        case "Test 6 0.01M Sodium Hydroxide present and radioactive source not present (Humidity)"
             
        test6 = readtable("test6.xlsx") % Import data from excel spreadheet for test6.
        time6=datetime(xlsread('test6.xlsx','A2:A1002'),'convertfrom','excel');
        time6.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d6=datetime('15-Aug-2022') % Date of test.
        d6.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time6=d6 + timeofday(time6) % Date and time variabe.
         
        plot(app.UIAxes,[time6],[test6.Humidity],'Color','k','LineWidth',0.8,'DisplayName','Test 6 0.01M Sodium Hydroxide present and radioactive source not present (Humidity %)'); % Plot humidity for test6.
        
        lowlow=min(test6.Humidity) % Find minimum value for test6 humidity measurements.
        low=min(test6.Humidity)*1.001 % Calculate low set point for test6 humidity using minimum value, plus 0.01%.
        high=max(test6.Humidity)/1.001 % Calculate high value for test6 humidity using maximum value minus 0.01%.
        highhigh=max(test6.Humidity) % Find maximum value for test6 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test6.Humidity>=lowlow & test6.Humidity<=low))+length(find(test6.Humidity>=high & test6.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test6.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, chemical source present'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, chemical source present'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test6.Humidity>=lowlow & test6.Humidity<=low); % Create fault log for test 6 humidity low set point violations.
         humidity=test6.Humidity(index); % Attain data from test6.
         time=test6.Time(index); % Record set point violations.
         
         index2=find(test6.Humidity>=high & test6.Humidity<=highhigh); % Create fault log for test 6 humidity high set point violations.
         humidity2=test6.Humidity(index2); % Attain data from test6.
         time2=test6.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test6HUMIDITYlog.mat',"data","time","errormessage"); % Table details.

         
        case "Test 7 vacuum pump on, no radioactive or oxidising material present, temperature increased (Humidity)"
             
        test7 = readtable("test7.xlsx") % Import data from excel spreadheet for test7.
        time7=datetime(xlsread('test7.xlsx','A2:A1002'),'convertfrom','excel');
        time7.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d7=datetime('16-Aug-2022') % Date of test.
        d7.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time7=d7 + timeofday(time7) % Date and time variabe.
        
        plot(app.UIAxes,[time7],[test7.Humidity],'Color','#0072BD','LineWidth',0.8,'DisplayName','Test 7 vacuum pump on, no radioactive or oxidising material present, temperature increased (Humidity %)'); % Plot humidity for test7.

        lowlow=min(test7.Humidity) % Find minimum value for test7 humidity measurements.
        low=min(test7.Humidity)*1.001 % Calculate low set point for test7 humidity using minimum value, plus 0.01%.
        high=max(test7.Humidity)/1.001 % Calculate high value for test7 humidity using maximum value minus 0.01%.
        highhigh=max(test7.Humidity) % Find maximum value for test7 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test7.Humidity>=lowlow & test7.Humidity<=low))+length(find(test7.Humidity>=high & test7.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test7.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, temperature increased and pressure too low'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, temperature increased and pressure too low'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test7.Humidity>=lowlow & test7.Humidity<=low); % Create fault log for test 7 humidity low set point violations.
         humidity=test7.Humidity(index); % Attain data from test7.
         time=test7.Time(index); % Record set point violations.
         
         index2=find(test7.Humidity>=high & test7.Humidity<=highhigh); % Create fault log for test 7 humidity high set point violations.
         humidity2=test7.Humidity(index2); % Attain data from test7.
         time2=test7.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test7HUMIDITYlog.mat',"data","time","errormessage"); % Table details.

         
        case "Test 8 vacuum pump off, no radioactive or oxidising material present, temperature increased (Humidity)"
             
        test8 = readtable("test8.xlsx") % Import data from excel spreadheet for test8.
        time8=datetime(xlsread('test8.xlsx','A2:A1002'),'convertfrom','excel');
        time8.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d8=datetime('17-Aug-2022') % Date of test.
        d8.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time8=d8 + timeofday(time8) % Date and time variabe.
         
        plot(app.UIAxes,[time8],[test8.Humidity],'Color','#D95319','LineWidth',0.8,'DisplayName','Test 8 vacuum pump off, no radioactive or oxidising material present, temperature increased (Humidity %)'); % Plot humidity for test8.
        
        lowlow=min(test8.Humidity) % Find minimum value for test8 humidity measurements.
        low=min(test8.Humidity)*1.001 % Calculate low set point for test8 humidity using minimum value, plus 0.01%.
        high=max(test8.Humidity)/1.001 % Calculate high value for test8 humidity using maximum value minus 0.01%.
        highhigh=max(test8.Humidity) % Find maximum value for test8 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test8.Humidity>=lowlow & test8.Humidity<=low))+length(find(test8.Humidity>=high & test8.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test8.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, temperature increased and pressure too high'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, temperature increased and pressure too high'; % If number of set point violations is greater than 50% humidity instrument is maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test8.Humidity>=lowlow & test8.Humidity<=low); % Create fault log for test 8 humidity low set point violations.
         humidity=test8.Humidity(index); % Attain data from test8.
         time=test8.Time(index); % Record set point violations.
         
         index2=find(test8.Humidity>=high & test8.Humidity<=highhigh); % Create fault log for test 8 humidity high set point violations.
         humidity2=test8.Humidity(index2); % Attain data from test8.
         time2=test8.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test8HUMIDITYlog.mat',"data","time","errormessage"); % Table details.


        case "Test 9 vacuum pump on, no radioactive or oxidising material present, temperature decreased (Humidity)"
            
        test9 = readtable("test9.xlsx") % Import data from excel spreadheet for test9.
        time9=datetime(xlsread('test9.xlsx','A2:A1002'),'convertfrom','excel');
        time9.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d9=datetime('18-Aug-2022') % Date of test.
        d9.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time9=d9 + timeofday(time9) % Date and time variabe.
         
        plot(app.UIAxes,[time9],[test9.Humidity],'Color','#EDB120','LineWidth',0.8,'DisplayName','Test 9 vacuum pump on, no radioactive or oxidising material present, temperature decreased (Humidity %)'); % Plot humidity for test9.
        
        lowlow=min(test9.Humidity) % Find minimum value for test9 humidity measurements.
        low=min(test9.Humidity)*1.001 % Calculate low set point for test9 humidity using minimum value, plus 0.01%.
        high=max(test9.Humidity)/1.001 % Calculate high value for test9 humidity using maximum value minus 0.01%.
        highhigh=max(test9.Humidity) % Find maximum value for test9 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test9.Humidity>=lowlow & test9.Humidity<=low))+length(find(test9.Humidity>=high & test9.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test9.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% temperature instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, temperature increased and pressure too low'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, temperature increased and pressure too low'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test9.Humidity>=lowlow & test9.Humidity<=low); % Create fault log for test 9 humidity low set point violations.
         humidity=test9.Humidity(index); % Attain data from test9.
         time=test9.Time(index); % Record set point violations.
         
         index2=find(test9.Humidity>=high & test9.Humidity<=highhigh); % Create fault log for test 9 humidity high set point violations.
         humidity2=test9.Humidity(index2); % Attain data from test9.
         time2=test9.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test9HUMIDITYlog.mat',"data","time","errormessage"); % Table details.

         
        case "Test 10 vacuum pump off, no radioactive or oxidising material present, temperature decreased (Humidity)"
            
        test10 = readtable("test10.xlsx") % Import data from excel spreadheet for test10.
        time10=datetime(xlsread('test10.xlsx','A2:A1002'),'convertfrom','excel');
        time10.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d10=datetime('19-Aug-2022') % Date of test.
        d10.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time10=d10 + timeofday(time10) % Date and time variabe.
        
        plot(app.UIAxes,[time10],[test10.Humidity],'Color','#7E2F8E','LineWidth',0.8,'DisplayName','Test 10 vacuum pump off, no radioactive or oxidising material present, temperature decreased (Humidity %)'); % Plot humidity for test10.
        
        lowlow=min(test10.Humidity) % Find minimum value for test10 humidity measurements.
        low=min(test10.Humidity)*1.001 % Calculate low set point for test10 humidity using minimum value, plus 0.01%.
        high=max(test10.Humidity)/1.001 % Calculate high value for test10 humidity using maximum value minus 0.01%.
        highhigh=max(test10.Humidity) % Find maximum value for test10 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test10.Humidity>=lowlow & test10.Humidity<=low))+length(find(test10.Humidity>=high & test10.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test10.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, temperature decreased and pressure too high'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, temperature decreased and pressure too high'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test10.Humidity>=lowlow & test10.Humidity<=low); % Create fault log for test 10 humidity low set point violations.
         humidity=test10.Humidity(index); % Attain data from test10.
         time=test10.Time(index); % Record set point violations.
         
         index2=find(test10.Humidity>=high & test10.Humidity<=highhigh); % Create fault log for test 10 humidity high set point violations.
         humidity2=test10.Humidity(index2); % Attain data from test10.
         time2=test10.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test10HUMIDITYlog.mat',"data","time","errormessage"); % Table details.
         

        case "Test 11 vacuum pump on, no radioactive or oxidising material present, humidity increased (Humidity)"
         
        test11 = readtable("test11.xlsx") % Import data from excel spreadheet for test11.
        time11=datetime(xlsread('test11.xlsx','A2:A1002'),'convertfrom','excel');
        time11.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d11=datetime('20-Aug-2022') % Date of test.
        d11.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time11=d11 + timeofday(time11) % Date and time variabe.
         
        plot(app.UIAxes,[time11],[test11.Humidity],'Color','#77AC30','LineWidth',0.8,'DisplayName','Test 11 vacuum pump on, no radioactive or oxidising material present, humidity increased (Humidity %)'); % Plot humidity for test11.   
         
        lowlow=min(test11.Humidity) % Find minimum value for test11 humidity measurements.
        low=min(test11.Humidity)*1.001 % Calculate low set point for test11 humidity using minimum value, plus 0.01%.
        high=max(test11.Humidity)/1.001 % Calculate high value for test11 humidity using maximum value minus 0.01%.
        highhigh=max(test11.Humidity) % Find maximum value for test11 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test11.Humidity>=lowlow & test11.Humidity<=low))+length(find(test11.Humidity>=high & test11.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test11.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, humidity increased and pressure too low'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, humidity increased and pressure too low'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test11.Humidity>=lowlow & test11.Humidity<=low); % Create fault log for test 11 humidity low set point violations.
         humidity=test11.Humidity(index); % Attain data from test11.
         time=test11.Time(index); % Record set point violations.
         
         index2=find(test11.Humidity>=high & test11.Humidity<=highhigh); % Create fault log for test 11 humidity high set point violations.
         humidity2=test11.Humidity(index2); % Attain data from test11.
         time2=test11.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations. 
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test11HUMIDITYlog.mat',"data","time","errormessage"); % Table details.


        case "Test 12 vacuum pump off, no radioactive or oxidising material present, humidity increased (Humidity)"
         
        test12 = readtable("test12.xlsx") % Import data from excel spreadheet for test12.
        time12=datetime(xlsread('test12.xlsx','A2:A1002'),'convertfrom','excel');
        time12.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d12=datetime('21-Aug-2022') % Date of test.
        d12.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time12=d12 + timeofday(time12) % Date and time variabe.
         
        plot(app.UIAxes,[time12],[test12.Humidity],'Color','#4DBEEE','LineWidth',0.8,'DisplayName','Test 12 vacuum pump off, no radioactive or oxidising material present, humidity increased (Humidity %)'); % Plot humidity for test12. 
       
        lowlow=min(test12.Humidity) % Find minimum value for test12 humidity measurements.
        low=min(test12.Humidity)*1.001 % Calculate low set point for test12 humidity using minimum value, plus 0.01%.
        high=max(test12.Humidity)/1.001 % Calculate high value for test12 humidity using maximum value minus 0.01%.
        highhigh=max(test12.Humidity) % Find maximum value for test12 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test12.Humidity>=lowlow & test12.Humidity<=low))+length(find(test12.Humidity>=high & test12.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test12.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, humidity increased and pressure too high'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, humidity increased and pressure too high'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test12.Humidity>=lowlow & test12.Humidity<=low); % Create fault log for test 12 humidity low set point violations.
         humidity=test12.Humidity(index); % Attain data from test12.
         time=test12.Time(index); % Record set point violations.
         
         index2=find(test12.Humidity>=high & test12.Humidity<=highhigh); % Create fault log for test 12 humidity high set point violations.
         humidity2=test12.Humidity(index2); % Attain data from test12.
         time2=test12.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations. 
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test12HUMIDITYlog.mat',"data","time","errormessage"); % Table details.

         
        case "Test 13 vacuum pump on, no radioactive or oxidising material present, humidity and temperature increased (Humidity)"
         
        test13 = readtable("test13.xlsx") % Import data from excel spreadheet for test13.
        time13=datetime(xlsread('test13.xlsx','A2:A1002'),'convertfrom','excel');
        time13.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d13=datetime('22-Aug-2022') % Date of test.
        d13.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time13=d13 + timeofday(time13) % Date and time variabe.
         
        plot(app.UIAxes,[time13],[test13.Humidity],'Color','#A2142F','LineWidth',0.8,'DisplayName','Test 13 vacuum pump on, no radioactive or oxidising material present, humidity and temperature increased (Humidity %)'); % Plot humidity for test13. 

        lowlow=min(test13.Humidity) % Find minimum value for test13 humidity measurements.
        low=min(test13.Humidity)*1.001 % Calculate low set point for test13 humidity using minimum value, plus 0.01%.
        high=max(test13.Humidity)/1.001 % Calculate high value for test13 humidity using maximum value minus 0.01%.
        highhigh=max(test13.Humidity) % Find maximum value for test13 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test13.Humidity>=lowlow & test13.Humidity<=low))+length(find(test13.Humidity>=high & test13.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test13.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, humidity and temperature increased and pressure too low'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, humidity and temperature increased and pressure too low'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test13.Humidity>=lowlow & test13.Humidity<=low); % Create fault log for test 13 humidity low set point violations.
         humidity=test13.Humidity(index); % Attain data from test13.
         time=test13.Time(index); % Record set point violations.
         
         index2=find(test13.Humidity>=high & test13.Humidity<=highhigh); % Create fault log for test 13 humidity high set point violations.
         humidity2=test13.Humidity(index2); % Attain data from test13.
         time2=test13.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations. 
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test13HUMIDITYlog.mat',"data","time","errormessage"); % Table details.


        case "Test 14 vacuum pump off, no radioactive or oxidising material present, humidity and temperature increased (Humidity)"
                  
        test14 = readtable("test14.xlsx") % Import data from excel spreadheet for test14.
        time14=datetime(xlsread('test14.xlsx','A2:A1002'),'convertfrom','excel');
        time14.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d14=datetime('23-Aug-2022') % Date of test.
        d14.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time14=d14 + timeofday(time14) % Date and time variabe.
         
        plot(app.UIAxes,[time14],[test14.Humidity],'Color','r','LineWidth',0.8,'DisplayName','Test 14 vacuum pump off, no radioactive or oxidising material present, humidity and temperature increased (Humidity %)'); % Plot humidity for test14. 
         
        lowlow=min(test14.Humidity) % Find minimum value for test14 humidity measurements.
        low=min(test14.Humidity)*1.001 % Calculate low set point for test14 humidity using minimum value, plus 0.01%.
        high=max(test14.Humidity)/1.001 % Calculate high value for test14 humidity using maximum value minus 0.01%.
        highhigh=max(test14.Humidity) % Find maximum value for test14 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test14.Humidity>=lowlow & test14.Humidity<=low))+length(find(test14.Humidity>=high & test14.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test14.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, humidity and temperature increased and pressure too high'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, humidity and temperature increased and pressure too high'; % If number of set point violations is greater than 50% humidity instrument is maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test14.Humidity>=lowlow & test14.Humidity<=low); % Create fault log for test 14 humidity low set point violations.
         humidity=test14.Humidity(index); % Attain data from test14.
         time=test14.Time(index); % Record set point violations.
         
         index2=find(test14.Humidity>=high & test14.Humidity<=highhigh); % Create fault log for test 14 humidity high set point violations.
         humidity2=test14.Humidity(index2); % Attain data from test14.
         time2=test14.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations. 
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test14HUMIDITYlog.mat',"data","time","errormessage"); % Table details.
      
         
        case "Test 15 vacuum pump on, no radioactive or oxidising material present, humidity increased and temperature decreased (Humidity)"
                  
        test15 = readtable("test15.xlsx") % Import data from excel spreadheet for test15.
        time15=datetime(xlsread('test15.xlsx','A2:A1002'),'convertfrom','excel');
        time15.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d15=datetime('24-Aug-2022') % Date of test.
        d15.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time15=d15 + timeofday(time15) % Date and time variabe.
        
        plot(app.UIAxes,[time15],[test15.Humidity],'Color','g','LineWidth',0.8,'DisplayName','Test 15 vacuum pump on, no radioactive or oxidising material present, humidity increased and temperature decreased (Humidity %)'); % Plot humidity for test15. 
         
        lowlow=min(test15.Humidity) % Find minimum value for test15 humidity measurements.
        low=min(test15.Humidity)*1.001 % Calculate low set point for test15 humidity using minimum value, plus 0.01%.
        high=max(test15.Humidity)/1.001 % Calculate high value for test15 humidity using maximum value minus 0.01%.
        highhigh=max(test15.Humidity) % Find maximum value for test15 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test15.Humidity>=lowlow & test15.Humidity<=low))+length(find(test15.Humidity>=high & test15.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test15.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, humidity increased and temperature decreased and pressure too low'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, humidity increased and temperature decreased and pressure too low'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test15.Humidity>=lowlow & test15.Humidity<=low); % Create fault log for test 15 humidity low set point violations.
         humidity=test15.Humidity(index); % Attain data from test15.
         time=test15.Time(index); % Record set point violations.
         
         index2=find(test15.Humidity>=high & test15.Humidity<=highhigh); % Create fault log for test 15 humidity high set point violations.
         humidity2=test15.Humidity(index2); % Attain data from test15.
         time2=test15.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations. 
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test15HUMIDITYlog.mat',"data","time","errormessage"); % Table details.


        case "Test 16 vacuum pump off, no radioactive or oxidising material present, humidity increased and temperature decreased (Humidity)"
                  
        test16 = readtable("test16.xlsx") % Import data from excel spreadheet for test16.
        time16=datetime(xlsread('test16.xlsx','A2:A1002'),'convertfrom','excel');
        time16.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d16=datetime('25-Aug-2022') % Date of test.
        d16.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time16=d16 + timeofday(time16) % Date and time variabe.
        
        plot(app.UIAxes,[time16],[test16.Humidity],'Color','b','LineWidth',0.8,'DisplayName','Test 16 vacuum pump off, no radioactive or oxidising material present, humidity increased and temperature decreased (Humidity %)'); % Plot humidity for test16. 
         
        lowlow=min(test16.Humidity) % Find minimum value for test16 humidity measurements.
        low=min(test16.Humidity)*1.001 % Calculate low set point for test16 humidity using minimum value, plus 0.01%.
        high=max(test16.Humidity)/1.001 % Calculate high value for test16 humidity using maximum value minus 0.01%.
        highhigh=max(test16.Humidity) % Find maximum value for test16 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test16.Humidity>=lowlow & test16.Humidity<=low))+length(find(test16.Humidity>=high & test16.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test16.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, humidity increased and temperature decreased and pressure too high'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, humidity increased and temperature decreased and pressure too high'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test16.Humidity>=lowlow & test16.Humidity<=low); % Create fault log for test 16 humidity low set point violations.
         humidity=test16.Humidity(index); % Attain data from test16.
         time=test16.Time(index); % Record set point violations.
         
         index2=find(test16.Humidity>=high & test16.Humidity<=highhigh); % Create fault log for test 16 humidity high set point violations.
         humidity2=test16.Humidity(index2); % Attain data from test16.
         time2=test16.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations. 
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test16HUMIDITYlog.mat',"data","time","errormessage"); % Table details.

         
        case "Test 17 vacuum pump on, no radioactive or oxidising material present, humidity decreased (Humidity)"
                  
        test17 = readtable("test17.xlsx") % Import data from excel spreadheet for test17.
        time17=datetime(xlsread('test17.xlsx','A2:A1002'),'convertfrom','excel');
        time17.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d17=datetime('26-Aug-2022') % Date of test.
        d17.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time17=d17 + timeofday(time17) % Date and time variabe.
         
        plot(app.UIAxes,[time17],[test17.Humidity],'Color','m','LineWidth',0.8,'DisplayName','Test 17 vacuum pump on, no radioactive or oxidising material present, humidity decreased (Humidity %)'); % Plot humidity for test17. 
         
        lowlow=min(test17.Humidity) % Find minimum value for test17 humidity measurements.
        low=min(test17.Humidity)*1.001 % Calculate low set point for test17 humidity using minimum value, plus 0.01%.
        high=max(test17.Humidity)/1.001 % Calculate high value for test17 humidity using maximum value minus 0.01%.
        highhigh=max(test17.Humidity) % Find maximum value for test17 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test17.Humidity>=lowlow & test17.Humidity<=low))+length(find(test17.Humidity>=high & test17.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test17.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, humidity decreased and pressure too low'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, humidity decreased and pressure too low'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test17.Humidity>=lowlow & test17.Humidity<=low); % Create fault log for test 17 humidity low set point violations.
         humidity=test17.Humidity(index); % Attain data from test17.
         time=test17.Time(index); % Record set point violations.
         
         index2=find(test17.Humidity>=high & test17.Humidity<=highhigh); % Create fault log for test 17 humidity high set point violations.
         humidity2=test17.Humidity(index2); % Attain data from test17.
         time2=test17.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations. 
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test17HUMIDITYlog.mat',"data","time","errormessage"); % Table details.

         
        case "Test 18 vacuum pump off, no radioactive or oxidising material present, humidity decreased (Humidity)"
                  
        test18 = readtable("test18.xlsx") % Import data from excel spreadheet for test18.
        time18=datetime(xlsread('test18.xlsx','A2:A1002'),'convertfrom','excel');
        time18.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d18=datetime('27-Aug-2022') % Date of test.
        d18.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time18=d18 + timeofday(time18) % Date and time variabe.
        
        plot(app.UIAxes,[time18],[test18.Humidity],'Color','k','LineWidth',0.8,'DisplayName','Test 18 vacuum pump off, no radioactive or oxidising material present, humidity decreased (Humidity %)'); % Plot humidity for test18. 
         
        lowlow=min(test18.Humidity) % Find minimum value for test18 humidity measurements.
        low=min(test18.Humidity)*1.001 % Calculate low set point for test18 humidity using minimum value, plus 0.01%.
        high=max(test18.Humidity)/1.001 % Calculate high value for test18 humidity using maximum value minus 0.01%.
        highhigh=max(test18.Humidity) % Find maximum value for test18 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test18.Humidity>=lowlow & test18.Humidity<=low))+length(find(test18.Humidity>=high & test18.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test18.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, humidity decreased and pressure too high'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, humidity decreased and pressure too high'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test18.Humidity>=lowlow & test18.Humidity<=low); % Create fault log for test 18 humidity low set point violations.
         humidity=test18.Humidity(index); % Attain data from test18.
         time=test18.Time(index); % Record set point violations.
         
         index2=find(test18.Humidity>=high & test18.Humidity<=highhigh); % Create fault log for test 18 humidity high set point violations.
         humidity2=test18.Humidity(index2); % Attain data from test18.
         time2=test18.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations. 
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test18HUMIDITYlog.mat',"data","time","errormessage"); % Table details.

         
        case "Test 19 vacuum pump on, no radioactive or oxidising material present, humidity decreased and temperature increased (Humidity)"
                  
        test19 = readtable("test19.xlsx") % Import data from excel spreadheet for test19.
        time19=datetime(xlsread('test19.xlsx','A2:A1002'),'convertfrom','excel');
        time19.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d19=datetime('28-Aug-2022') % Date of test.
        d19.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time19=d19 + timeofday(time19) % Date and time variabe.
         
        plot(app.UIAxes,[time19],[test19.Humidity],'Color','#0072BD','LineWidth',0.8,'DisplayName','Test 19 vacuum pump on, no radioactive or oxidising material present, humidity decreased and temperature increased (Humidity %)'); % Plot humidity for test19. 
         
        lowlow=min(test19.Humidity) % Find minimum value for test19 humidity measurements.
        low=min(test19.Humidity)*1.001 % Calculate low set point for test19 humidity using minimum value, plus 0.01%.
        high=max(test19.Humidity)/1.001 % Calculate high value for test19 humidity using maximum value minus 0.01%.
        highhigh=max(test19.Humidity) % Find maximum value for test19 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test19.Humidity>=lowlow & test19.Humidity<=low))+length(find(test19.Humidity>=high & test19.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test19.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, humidity decreased, temperature increased and pressure too low'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, humidity decreased, temperature increased and pressure too low'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test19.Humidity>=lowlow & test19.Humidity<=low); % Create fault log for test 19 humidity low set point violations.
         humidity=test19.Humidity(index); % Attain data from test19.
         time=test19.Time(index); % Record set point violations.
         
         index2=find(test19.Humidity>=high & test19.Humidity<=highhigh); % Create fault log for test 19 humidity high set point violations.
         humidity2=test19.Humidity(index2); % Attain data from test19.
         time2=test19.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations. 
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test19HUMIDITYlog.mat',"data","time","errormessage"); % Table details.

         
        case "Test 20 vacuum pump off, no radioactive or acetoone sources present, humidity decreased and temperature increased (Humidity)"
                  
        test20 = readtable("test20.xlsx") % Import data from excel spreadheet for test20.
        time20=datetime(xlsread('test20.xlsx','A2:A1002'),'convertfrom','excel');
        time20.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d20=datetime('29-Aug-2022') % Date of test.
        d20.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time20=d20 + timeofday(time20) % Date and time variabe.
         
        plot(app.UIAxes,[time20],[test20.Humidity],'Color','#D95319','LineWidth',0.8,'DisplayName','Test 20 vacuum pump off, no radioactive or acetoone sources present, humidity decreased and temperature increased (Humidity %)'); % Plot humidity for test20. 
        
        lowlow=min(test20.Humidity) % Find minimum value for test20 humidity measurements.
        low=min(test20.Humidity)*1.001 % Calculate low set point for test20 humidity using minimum value, plus 0.01%.
        high=max(test20.Humidity)/1.001 % Calculate high value for test20 humidity using maximum value minus 0.01%.
        highhigh=max(test20.Humidity) % Find maximum value for test20 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test20.Humidity>=lowlow & test20.Humidity<=low))+length(find(test20.Humidity>=high & test20.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test20.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox humidity not within design limits, humidity decreased, temperature increased and pressure too high'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox humidity not within design limits, humidity decreased, temperature increased and pressure too high'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test20.Humidity>=lowlow & test20.Humidity<=low); % Create fault log for test 20 humidity low set point violations.
         humidity=test20.Humidity(index); % Attain data from test20.
         time=test20.Time(index); % Record set point violations.
         
         index2=find(test20.Humidity>=high & test20.Humidity<=highhigh); % Create fault log for test 20 humidity high set point violations.
         humidity2=test20.Humidity(index2); % Attain data from test20.
         time2=test20.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations. 
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test20HUMIDITYlog.mat',"data","time","errormessage"); % Table details.


        case "Test 21 vacuum pump on, no radioactive or oxidising material present, humidity and temperature decreased (Humidity)"
                  
        test21 = readtable("test21.xlsx") % Import data from excel spreadheet for test21.
        time21=datetime(xlsread('test21.xlsx','A2:A1002'),'convertfrom','excel');
        time21.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d21=datetime('30-Aug-2022') % Date of test.
        d21.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time21=d21 + timeofday(time21) % Date and time variabe.
         
        plot(app.UIAxes,[time21],[test21.Humidity],'Color','#EDB120','LineWidth',0.8,'DisplayName','Test 21 vacuum pump on, no radioactive or oxidising material present, humidity and temperature decreased (Humidity %)'); % Plot humidity for test21. 

        lowlow=min(test21.Humidity) % Find minimum value for test21 humidity measurements.
        low=min(test21.Humidity)*1.001 % Calculate low set point for test21 humidity using minimum value, plus 0.01%.
        high=max(test21.Humidity)/1.001 % Calculate high value for test21 humidity using maximum value minus 0.01%.
        highhigh=max(test21.Humidity) % Find maximum value for test21 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test21.Humidity>=lowlow & test21.Humidity<=low))+length(find(test21.Humidity>=high & test21.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test21.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, humidity and temperature decreased and pressure too low'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, humidity and temperature decreased and pressure too low'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test21.Humidity>=lowlow & test21.Humidity<=low); % Create fault log for test 21 humidity low set point violations.
         humidity=test21.Humidity(index); % Attain data from test21.
         time=test21.Time(index); % Record set point violations.
         
         index2=find(test21.Humidity>=high & test21.Humidity<=highhigh); % Create fault log for test 21 humidity high set point violations.
         humidity2=test21.Humidity(index2); % Attain data from test21.
         time2=test21.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations. 
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test21HUMIDITYlog.mat',"data","time","errormessage"); % Table details.

         
        case "Test 22 vacuum pump off, no radioactive or oxidising material present, humidity and temperature decreased (Humidity)"
                  
        test22 = readtable("test22.xlsx") % Import data from excel spreadheet for test22.
        time22=datetime(xlsread('test22.xlsx','A2:A1002'),'convertfrom','excel');
        time22.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d22=datetime('31-Aug-2022') % Date of test.
        d22.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time22=d22 + timeofday(time22) % Date and time variabe.
         
        plot(app.UIAxes,[time22],[test22.Humidity],'Color','#7E2F8E','LineWidth',0.8,'DisplayName','Test 22 vacuum pump off, no radioactive or oxidising material present, humidity and temperature decreased (Humidity %)'); % Plot humidity for test22. 

        lowlow=min(test22.Humidity) % Find minimum value for test22 humidity measurements.
        low=min(test22.Humidity)*1.001 % Calculate low set point for test22 humidity using minimum value, plus 0.01%.
        high=max(test22.Humidity)/1.001 % Calculate high value for test22 humidity using maximum value minus 0.01%.
        highhigh=max(test22.Humidity) % Find maximum value for test22 humidity measurements.
        s=app.NumberofSetPointVialationsEditField_2.Value; % Take previous field value. 

         app.NumberofSetPointVialationsEditField_2.Value=length(find(test22.Humidity>=lowlow & test22.Humidity<=low))+length(find(test22.Humidity>=high & test22.Humidity<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
         app.NumberofSetPointVialationsEditField_2.Value=app.NumberofSetPointVialationsEditField_2.Value+s; % Add previous test violations too this set point violations.
         
         app.SetPointVialationPercentageEditField_3.Value=app.NumberofSetPointVialationsEditField_2.Value/length(test22.Humidity)*100; % convert number of set point violations too a percentage and didplay.
         
         if app.SetPointVialationPercentageEditField_3.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.HumiditySystemStatusMessageLabel.Text='Glovebox Humidity Healthy'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_3.Value>20 && app.SetPointVialationPercentageEditField_3.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_3.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% humidity instrument needs maintenance, schedule maintenance and display value yellow.
             app.HumiditySystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, humidity and temperature decreased and pressure too high'; % Display message.
             app.HumiditySystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_3.BackgroundColor='r'; % Greater than 50% set point.
             app.HumiditySystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, humidity and temperature decreased and pressure too high'; % If number of set point violations is greater than 50% humidity instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.HumiditySystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test22.Humidity>=lowlow & test22.Humidity<=low); % Create fault log for test 21 humidity low set point violations.
         humidity=test22.Humidity(index); % Attain data from test22.
         time=test22.Time(index); % Record set point violations.
         
         index2=find(test22.Humidity>=high & test22.Humidity<=highhigh); % Create fault log for test 22 humidity high set point violations.
         humidity2=test22.Humidity(index2); % Attain data from test22.
         time2=test22.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     humidity(L+i,1)=humidity2(i); % Add high set point violations. 
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=humidity; % Column 2 humidity.
         errormessage=app.HumiditySystemStatusMessageLabel.Text % Column 3 label.
         save('test22HUMIDITYlog.mat',"data","time","errormessage"); % Table details.
         
         
        case "blank"
        
        end 
      
        % Presssure 
        switch app.PressureDropDown.Value

        case "Test 1 vacuum pump on, no radioactive or oxidising material present (Pressure)"

        test1 = readtable("test1.xlsx") % Import data from excel spreadsheet for test1. 
        time1=datetime(xlsread('test1.xlsx','A2:A1002'),'convertfrom','excel');
        time1.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d1=datetime('10-Aug-2022') % Date of test.
        d1.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time1=d1 + timeofday(time1) % Date and time variabe.
        
        plot(app.UIAxes,[time1],[test1.Pressure/1000],'Color','#77AC30','LineWidth',0.8,'DisplayName','Test 1 vacuum pump on, no radioactive or oxidising material present (Pressure bar)'); % Plot pressure for test1 and divide by 1000 too convert Hectoopascals too bar.
        
        lowlow=min(test1.Pressure/1000) % Find minimum value for test2 pressure measurements.
        low=min(test1.Pressure/1000)*1.0001 % Calculate low set point for test2 pressure using minimum value, plus 0.001%.
        high=max(test1.Pressure/1000)/1.0001 % Calculate high value for test2 pressure using maximum value minus 0.001%.
        highhigh=max(test1.Pressure/1000) % Find maximum value for test2 pressure measurements.
        
        app.NumberofSetPointVialationsEditField_4.Value=length(find(test1.Pressure/1000>=lowlow & test1.Pressure/1000<=low))+length(find(test1.Pressure/1000>=high & test1.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
        app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test1.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, issue with reduction in Glovebox pressure, pressure too low'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, issue with reduction in Glovebox pressure, pressure too low'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test1.Pressure>=lowlow & test1.Pressure/1000<=low); % Create fault log for test 1 pressure low set point violations.
         pressure=test1.Pressure(index); % Attain data from test1.
         time=test1.Time(index); % Record set point violations.
         
         index2=find(test1.Pressure>=high & test1.Pressure/1000<=highhigh); % Create fault log for test 1 pressure high set point violations.
         pressure2=test1.Pressure(index2); % Attain data from test1.
         time2=test1.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test1PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
        case "Test 2 vacuum pump off, no radioactive or oxidising material present (Pressure)"  
             
        test2 = readtable("test2.xlsx") % Import data from excel spreadsheet for test2.
        time2=datetime(xlsread('test2.xlsx','A2:A1002'),'convertfrom','excel');
        time2.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d2=datetime('11-Aug-2022') % Date of test.
        d2.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time2=d2 + timeofday(time2) % Date and time variabe.
        
        plot(app.UIAxes,[time2],[test2.Pressure/1000],'Color','#4DBEEE','LineWidth',0.8,'DisplayName','Test 2 vacuum pump off, no radioactive or oxidising material present (Pressure bar)'); % Plot pressure for test2 and divide by 1000 too convert Hectoopascals too bar.
         
        lowlow=min(test2.Pressure/1000) % Find minimum value for test2 pressure measurements.
        low=min(test2.Pressure/1000)*1.0001 % Calculate low set point for test2 pressure using minimum value, plus 0.001%.
        high=max(test2.Pressure/1000)/1.0001 % Calculate high value for test2 pressure using maximum value minus 0.001%.
        highhigh=max(test2.Pressure/1000) % Find maximum value for test2 pressure measurements.
        s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 
        
        app.NumberofSetPointVialationsEditField_4.Value=length(find(test2.Pressure/1000>=lowlow & test2.Pressure/1000<=low))+length(find(test2.Pressure/1000>=high & test2.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
        app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations.
        app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test2.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, issue with reduction in Glovebox pressure, pressure too high'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, issue with reduction in Glovebox pressure, pressure too high'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test2.Pressure>=lowlow & test2.Pressure/1000<=low); % Create fault log for test 2 pressure low set point violations.
         pressure=test2.Pressure(index); % Attain data from test2.
         time=test2.Time(index); % Record set point violations.
         
         index2=find(test2.Pressure>=high & test2.Pressure/1000<=highhigh); % Create fault log for test 2 pressure high set point violations.
         pressure2=test2.Pressure(index2); % Attain data from test2.
         time2=test2.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test2PRESSURElog.mat',"data","time","errormessage"); % Table details.


        case "Test 3 185kBq radioactive source present and oxidising material not present (Pressure)"
             
        test3 = readtable("test3.xlsx") % Import data from excel spreadheet for test3.
        time3=datetime(xlsread('test3.xlsx','A2:A1002'),'convertfrom','excel');
        time3.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
        d3=datetime('12-Aug-2022') % Date of test.
        d3.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
        time3=d3 + timeofday(time3) % Date and time variabe.
        
        plot(app.UIAxes,[time3],[test3.Pressure/1000],'Color','#A2142F','LineWidth',0.8,'DisplayName','Test 3 185kBq radioactive source present and oxidising material not present (Pressure bar)'); % Plot pressure for test3 and divide by 1000 too convert Hectoopascals too bar.

        lowlow=min(test3.Pressure/1000) % Find minimum value for test3 pressure measurements.
        low=min(test3.Pressure/1000)*1.0001 % Calculate low set point for test3 pressure using minimum value, plus 0.001%.
        high=max(test3.Pressure/1000)/1.0001 % Calculate high value for test3 pressure using maximum value minus 0.001%.
        highhigh=max(test3.Pressure/1000) % Find maximum value for test3 pressure measurements.
        s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 
        
        app.NumberofSetPointVialationsEditField_4.Value=length(find(test3.Pressure/1000>=lowlow & test3.Pressure/1000<=low))+length(find(test3.Pressure/1000>=high & test3.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
        app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations.
        app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test3.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, high radiation present, check radioactivity of material'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, high radiation present, check radioactivity of material'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test3.Pressure>=lowlow & test3.Pressure/1000<=low); % Create fault log for test 3 pressure low set point violations.
         pressure=test3.Pressure(index); % Attain data from test4.
         time=test3.Time(index); % Record set point violations.
         
         index2=find(test3.Pressure>=high & test3.Pressure/1000<=highhigh); % Create fault log for test 3 pressure high set point violations.
         pressure2=test3.Pressure(index2); % Attain data from test3.
         time2=test3.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test3PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
       case "Test 4 40kBq radioactive source present and oxidising material not present (Pressure)"
           
       test4 = readtable("test4.xlsx") % Import data from excel spreadheet for test4.
       time4=datetime(xlsread('test4.xlsx','A2:A1002'),'convertfrom','excel');
       time4.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d4=datetime('13-Aug-2022') % Date of test.
       d4.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time4=d4 + timeofday(time4) % Date and time variabe.
        
       plot(app.UIAxes,[time4],[test4.Pressure/1000],'Color','r','LineWidth',0.8,'DisplayName','Test 4 40kBq radioactive source present and oxidising material not present (Pressure bar)'); % Plot pressure for test4 and divide by 1000 too convert Hectoopascals too bar.

       lowlow=min(test4.Pressure/1000) % Find minimum value for test4 pressure measurements.
       low=min(test4.Pressure/1000)*1.0001 % Calculate low set point for test4 pressure using minimum value, plus 0.001%.
       high=max(test4.Pressure/1000)/1.0001 % Calculate high value for test4 pressure using maximum value minus 0.001%.
       highhigh=max(test4.Pressure/1000) % Find maximum value for test4 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       
       app.NumberofSetPointVialationsEditField_4.Value=length(find(test4.Pressure/1000>=lowlow & test4.Pressure/1000<=low))+length(find(test4.Pressure/1000>=high & test4.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations.
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test4.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, radioactive source present'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, radioactive source present'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test4.Pressure>=lowlow & test4.Pressure/1000<=low); % Create fault log for test 4 pressure low set point violations.
         pressure=test4.Pressure(index); % Attain data from test4.
         time=test4.Time(index); % Record set point violations.
         
         index2=find(test4.Pressure>=high & test4.Pressure/1000<=highhigh); % Create fault log for test 4 pressure high set point violations.
         pressure2=test4.Pressure(index2); % Attain data from test4.
         time2=test4.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test4PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
       case "Test 5 0.5M Sodium Hydroxide present and radioactive source not present (Pressure)"
             
       test5 = readtable("test5.xlsx") % Import data from excel spreadheet for test5.
       time5=datetime(xlsread('test5.xlsx','A2:A1002'),'convertfrom','excel');
       time5.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d5=datetime('14-Aug-2022') % Date of test.
       d5.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time5=d5 + timeofday(time5) % Date and time variabe.
       
       plot(app.UIAxes,[time5],[test5.Pressure/1000],'Color','g','LineWidth',0.8,'DisplayName','Test 5 0.5M Sodium Hydroxide present and radioactive source not present (Pressure bar)'); % Plot pressure for test5 and divide by 1000 too convert Hectoopascals too bar.

       lowlow=min(test5.Pressure/1000) % Find minimum value for test5 pressure measurements.
       low=min(test5.Pressure/1000)*1.0001 % Calculate low set point for pressure humidity using minimum value, plus 0.001%.
       high=max(test5.Pressure/1000)/1.0001 % Calculate high value for test5 pressure using maximum value minus 0.001%.
       highhigh=max(test5.Pressure/1000) % Find maximum value for test5 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       
       app.NumberofSetPointVialationsEditField_4.Value=length(find(test5.Pressure/1000>=lowlow & test5.Pressure/1000<=low))+length(find(test5.Pressure/1000>=high & test5.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations.  
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test5.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, chemical source present'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, chemical source present'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test5.Pressure>=lowlow & test5.Pressure/1000<=low); % Create fault log for test 5 pressure low set point violations.
         pressure=test5.Pressure(index); % Attain data from test5.
         time=test5.Time(index); % Record set point violations.
         
         index2=find(test5.Pressure>=high & test5.Pressure/1000<=highhigh); % Create fault log for test 5 pressure high set point violations.
         pressure2=test5.Pressure(index2); % Attain data from test5.
         time2=test5.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test5PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
       case "Test 6 0.01M Sodium Hydroxide present and radioactive source not present (Pressure)"
             
       test6 = readtable("test6.xlsx") % Import data from excel spreadheet for test6.
       time6=datetime(xlsread('test6.xlsx','A2:A1002'),'convertfrom','excel');
       time6.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d6=datetime('15-Aug-2022') % Date of test.
       d6.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time6=d6 + timeofday(time6) % Date and time variabe.
        
       plot(app.UIAxes,[time6],[test6.Pressure/1000],'Color','b','LineWidth',0.8,'DisplayName','Test 6 0.01M Sodium Hydroxide present and radioactive source not present (Pressure bar)'); % Plot pressure for test6 and divide by 1000 too convert Hectoopascals too bar.
        
       lowlow=min(test6.Pressure/1000) % Find minimum value for test6 pressure measurements.
       low=min(test6.Pressure/1000)*1.0001 % Calculate low set point for test6 pressure using minimum value, plus 0.001%.
       high=max(test6.Pressure/1000)/1.0001 % Calculate high value for test6 pressure using maximum value minus 0.001%.
       highhigh=max(test6.Pressure/1000) % Find maximum value for test6 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       
       app.NumberofSetPointVialationsEditField_4.Value=length(find(test6.Pressure/1000>=lowlow & test6.Pressure/1000<=low))+length(find(test6.Pressure/1000>=high & test6.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test6.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, chemical source present'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, chemical source present'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test6.Pressure>=lowlow & test6.Pressure/1000<=low); % Create fault log for test 6 pressure low set point violations.
         pressure=test6.Pressure(index); % Attain data from test6.
         time=test6.Time(index); % Record set point violations.
         
         index2=find(test6.Pressure>=high & test6.Pressure/1000<=highhigh); % Create fault log for test 6 pressure high set point violations.
         pressure2=test6.Pressure(index2); % Attain data from test6.
         time2=test6.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test6PRESSURElog.mat',"data","time","errormessage"); % Table details.


       case "Test 7 vacuum pump on, no radioactive or oxidising material present, temperature increased (Pressure)"
             
       test7 = readtable("test7.xlsx") % Import data from excel spreadheet for test7.
       time7=datetime(xlsread('test7.xlsx','A2:A1002'),'convertfrom','excel');
       time7.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d7=datetime('16-Aug-2022') % Date of test.
       d7.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time7=d7 + timeofday(time7) % Date and time variabe.
        
       plot(app.UIAxes,[time7],[test7.Pressure/1000],'Color','m','LineWidth',0.8,'DisplayName','Test 7 vacuum pump on, no radioactive or oxidising material present, temperature increased (Pressure bar)'); % Plot pressure for test7 and divide by 1000 too convert Hectoopascals too bar.
       
       lowlow=min(test7.Pressure/1000) % Find minimum value for test7 pressure measurements.
       low=min(test7.Pressure/1000)*1.0001 % Calculate low set point for test7 pressure using minimum value, plus 0.001%.
       high=max(test7.Pressure/1000)/1.0001 % Calculate high value for test7 pressure using maximum value minus 0.001%.
       highhigh=max(test7.Pressure/1000) % Find maximum value for test7 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       
       app.NumberofSetPointVialationsEditField_4.Value=length(find(test7.Pressure/1000>=lowlow & test7.Pressure/1000<=low))+length(find(test7.Pressure/1000>=high & test7.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test7.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, temperature increased and pressure too low'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, temperature increased and pressure too low'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test7.Pressure>=lowlow & test7.Pressure/1000<=low); % Create fault log for test 7 pressure low set point violations.
         pressure=test7.Pressure(index); % Attain data from test7.
         time=test7.Time(index); % Record set point violations.
         
         index2=find(test7.Pressure>=high & test7.Pressure/1000<=highhigh); % Create fault log for test 7 pressure high set point violations.
         pressure2=test7.Pressure(index2); % Attain data from test7.
         time2=test7.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test7PRESSURElog.mat',"data","time","errormessage"); % Table details.


       case "Test 8 vacuum pump off, no radioactive or oxidising material present, temperature increased (Pressure)"
             
       test8 = readtable("test8.xlsx") % Import data from excel spreadheet for test8.
       time8=datetime(xlsread('test8.xlsx','A2:A1002'),'convertfrom','excel');
       time8.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d8=datetime('17-Aug-2022') % Date of test.
       d8.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time8=d8 + timeofday(time8) % Date and time variabe.
        
       plot(app.UIAxes,[time8],[test8.Pressure/1000],'Color','k','LineWidth',0.8,'DisplayName','Test 8 vacuum pump off, no radioactive or oxidising material present, temperature increased (Pressure bar)'); % Plot pressure for test8 and divide by 1000 too convert Hectoopascals too bar.
       
       lowlow=min(test8.Pressure/1000) % Find minimum value for test8 pressure measurements.
       low=min(test8.Pressure/1000)*1.0001 % Calculate low set point for test8 pressure using minimum value, plus 0.001%.
       high=max(test8.Pressure/1000)/1.0001 % Calculate high value for test8 pressure using maximum value minus 0.001%.
       highhigh=max(test8.Pressure/1000) % Find maximum value for test8 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       
       app.NumberofSetPointVialationsEditField_4.Value=length(find(test8.Pressure/1000>=lowlow & test8.Pressure/1000<=low))+length(find(test8.Pressure/1000>=high & test8.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test8.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, temperature increased and pressure too high'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, temperature increased and pressure too high'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test8.Pressure>=lowlow & test8.Pressure/1000<=low); % Create fault log for test 8 pressure low set point violations.
         pressure=test8.Pressure(index); % Attain data from test8.
         time=test8.Time(index); % Record set point violations.
         
         index2=find(test8.Pressure>=high & test8.Pressure/1000<=highhigh); % Create fault log for test 8 pressure high set point violations.
         pressure2=test8.Pressure(index2); % Attain data from test8.
         time2=test8.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test8PRESSURElog.mat',"data","time","errormessage"); % Table details.
 

       case "Test 9 vacuum pump on, no radioactive or oxidising material present, temperature decreased (Pressure)"
             
       test9 = readtable("test9.xlsx") % Import data from excel spreadheet for test9.
       time9=datetime(xlsread('test9.xlsx','A2:A1002'),'convertfrom','excel');
       time9.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d9=datetime('18-Aug-2022') % Date of test.
       d9.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time9=d9 + timeofday(time9) % Date and time variabe.
        
       plot(app.UIAxes,[time9],[test9.Pressure/1000],'Color','#0072BD','LineWidth',0.8,'DisplayName','Test 9 vacuum pump on, no radioactive or oxidising material present, temperature decreased (Pressure bar)'); % Plot pressure for test9 and divide by 1000 too convert Hectoopascals too bar.
 
       lowlow=min(test9.Pressure/1000) % Find minimum value for test9 pressure measurements.
       low=min(test9.Pressure/1000)*1.0001 % Calculate low set point for test9 pressure using minimum value, plus 0.001%.
       high=max(test9.Pressure/1000)/1.0001 % Calculate high value for test9 pressure using maximum value minus 0.001%.
       highhigh=max(test9.Pressure/1000) % Find maximum value for test9 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       
       app.NumberofSetPointVialationsEditField_4.Value=length(find(test9.Pressure/1000>=lowlow & test9.Pressure/1000<=low))+length(find(test9.Pressure/1000>=high & test9.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test9.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, temperature increased and pressure too low'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, temperature increased and pressure too low'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test9.Pressure>=lowlow & test9.Pressure/1000<=low); % Create fault log for test 9 pressure low set point violations.
         pressure=test9.Pressure(index); % Attain data from test9.
         time=test9.Time(index); % Record set point violations.
         
         index2=find(test9.Pressure>=high & test9.Pressure/1000<=highhigh); % Create fault log for test 9 pressure high set point violations.
         pressure2=test9.Pressure(index2); % Attain data from test9.
         time2=test9.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test9PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
       case "Test 10 vacuum pump off, no radioactive or oxidising material present, temperature decreased (Pressure)"
             
       test10 = readtable("test10.xlsx") % Import data from excel spreadheet for test10.
       time10=datetime(xlsread('test10.xlsx','A2:A1002'),'convertfrom','excel');
       time10.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d10=datetime('19-Aug-2022') % Date of test.
       d10.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time10=d10 + timeofday(time10) % Date and time variabe.
       
       plot(app.UIAxes,[time10],[test10.Pressure/1000],'Color','#D95319','LineWidth',0.8,'DisplayName','Test 10 vacuum pump off, no radioactive or oxidising material present, temperature decreased (Pressure bar)'); % Plot pressure for test10 and divide by 1000 too convert Hectoopascals too bar.
       
      lowlow=min(test10.Pressure/1000) % Find minimum value for test10 pressure measurements.
      low=min(test10.Pressure/1000)*1.0001 % Calculate low set point for test10 pressure using minimum value, plus 0.001%.
      high=max(test10.Pressure/1000)/1.0001 % Calculate high value for test10 pressure using maximum value minus 0.001%.
      highhigh=max(test10.Pressure/1000) % Find maximum value for test10 pressure measurements.
      s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       app.NumberofSetPointVialationsEditField_4.Value=length(find(test10.Pressure/1000>=lowlow & test10.Pressure/1000<=low))+length(find(test10.Pressure/1000>=high & test10.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test10.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, temperature decreased and pressure too high'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, temperature decreased and pressure too high'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test10.Pressure>=lowlow & test10.Pressure/1000<=low); % Create fault log for test 10 pressure low set point violations.
         pressure=test10.Pressure(index); % Attain data from test10.
         time=test10.Time(index); % Record set point violations.
         
         index2=find(test10.Pressure>=high & test10.Pressure/1000<=highhigh); % Create fault log for test 10 pressure high set point violations.
         pressure2=test10.Pressure(index2); % Attain data from test10.
         time2=test10.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test10PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
       case "Test 11 vacuum pump on, no radioactive or oxidising material present, humidity increased (Pressure)"
        
       test11 = readtable("test11.xlsx") % Import data from excel spreadheet for test11.
       time11=datetime(xlsread('test11.xlsx','A2:A1002'),'convertfrom','excel');
       time11.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d11=datetime('20-Aug-2022') % Date of test.
       d11.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time11=d11 + timeofday(time11) % Date and time variabe.
        
       plot(app.UIAxes,[time11],[test11.Pressure/1000],'Color','#EDB120','LineWidth',0.8,'DisplayName','Test 11 vacuum pump on, no radioactive or oxidising material present, humidity increased (Pressure bar)'); % Plot pressure for test11 and divide by 1000 too convert Hectoopascals too bar.
      
       lowlow=min(test11.Pressure/1000) % Find minimum value for test11 pressure measurements.
       low=min(test11.Pressure/1000)*1.0001 % Calculate low set point for test11 pressure using minimum value, plus 0.001%.
       high=max(test11.Pressure/1000)/1.0001 % Calculate high value for test11 pressure using maximum value minus 0.001%.
       highhigh=max(test11.Pressure/1000) % Find maximum value for test11 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       app.NumberofSetPointVialationsEditField_4.Value=length(find(test11.Pressure/1000>=lowlow & test11.Pressure/1000<=low))+length(find(test11.Pressure/1000>=high & test11.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test11.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, humidity increased and pressure too low'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, humidity increased and pressure too low'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test11.Pressure>=lowlow & test11.Pressure/1000<=low); % Create fault log for test 11 pressure low set point violations.
         pressure=test11.Pressure(index); % Attain data from test11.
         time=test11.Time(index); % Record set point violations.
         
         index2=find(test11.Pressure>=high & test11.Pressure/1000<=highhigh); % Create fault log for test 11 pressure high set point violations.
         pressure2=test11.Pressure(index2); % Attain data from test11.
         time2=test11.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test11PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
       case "Test 12 vacuum pump off, no radioactive or oxidising material present, humidity increased (Pressure)"
           
       test12 = readtable("test12.xlsx") % Import data from excel spreadheet for test12.
       time12=datetime(xlsread('test12.xlsx','A2:A1002'),'convertfrom','excel');
       time12.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d12=datetime('21-Aug-2022') % Date of test.
       d12.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time12=d12 + timeofday(time12) % Date and time variabe.
        
       plot(app.UIAxes,[time12],[test12.Pressure/1000],'Color','#7E2F8E','LineWidth',0.8,'DisplayName','Test 12 vacuum pump off, no radioactive or oxidising material present, humidity increased (Pressure bar)'); % Plot pressure for test12 and divide by 1000 too convert Hectoopascals too bar.

       lowlow=min(test12.Pressure/1000) % Find minimum value for test12 pressure measurements.
       low=min(test12.Pressure/1000)*1.0001 % Calculate low set point for test12 pressure using minimum value, plus 0.001%.
       high=max(test12.Pressure/1000)/1.0001 % Calculate high value for test12 pressure using maximum value minus 0.001%.
       highhigh=max(test12.Pressure/1000) % Find maximum value for test12 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       app.NumberofSetPointVialationsEditField_4.Value=length(find(test12.Pressure/1000>=lowlow & test12.Pressure/1000<=low))+length(find(test12.Pressure/1000>=high & test12.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test12.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, humidity increased and pressure too high'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, humidity increased and pressure too high'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test12.Pressure>=lowlow & test12.Pressure/1000<=low); % Create fault log for test 12 pressure low set point violations.
         pressure=test12.Pressure(index); % Attain data from test12.
         time=test12.Time(index); % Record set point violations.
         
         index2=find(test12.Pressure>=high & test12.Pressure/1000<=highhigh); % Create fault log for test 12 pressure high set point violations.
         pressure2=test12.Pressure(index2); % Attain data from test12.
         time2=test12.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test12PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
       case "Test 13 vacuum pump on, no radioactive or oxidising material present, humidity and temperature increased (Pressure)"
       
       test13 = readtable("test13.xlsx") % Import data from excel spreadheet for test13.
       time13=datetime(xlsread('test13.xlsx','A2:A1002'),'convertfrom','excel');
       time13.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d13=datetime('22-Aug-2022') % Date of test.
       d13.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time13=d13 + timeofday(time13) % Date and time variabe.
        
       plot(app.UIAxes,[time13],[test13.Pressure/1000],'Color','#77AC30','LineWidth',0.8,'DisplayName','Test 13 vacuum pump on, no radioactive or oxidising material present, humidity and temperature increased (Pressure bar)'); % Plot pressure for test13 and divide by 1000 too convert Hectoopascals too bar.
        
       lowlow=min(test13.Pressure/1000) % Find minimum value for test13 pressure measurements.
       low=min(test13.Pressure/1000)*1.0001 % Calculate low set point for test13 pressure using minimum value, plus 0.001%.
       high=max(test13.Pressure/1000)/1.0001 % Calculate high value for test13 pressure using maximum value minus 0.001%.
       highhigh=max(test13.Pressure/1000) % Find maximum value for test13 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       app.NumberofSetPointVialationsEditField_4.Value=length(find(test13.Pressure/1000>=lowlow & test13.Pressure/1000<=low))+length(find(test13.Pressure/1000>=high & test13.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test13.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, humidity and temperature increased and pressure too low'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, humidity and temperature increased and pressure too low'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test13.Pressure>=lowlow & test13.Pressure/1000<=low); % Create fault log for test 13 pressure low set point violations.
         pressure=test13.Pressure(index); % Attain data from test13.
         time=test13.Time(index); % Record set point violations.
         
         index2=find(test13.Pressure>=high & test13.Pressure/1000<=highhigh); % Create fault log for test 13 pressure high set point violations.
         pressure2=test13.Pressure(index2); % Attain data from test13.
         time2=test13.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test13PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
       case "Test 14 vacuum pump off, no radioactive or oxidising material present, humidity and temperature increased (Pressure)"
       
       test14 = readtable("test14.xlsx") % Import data from excel spreadheet for test14.
       time14=datetime(xlsread('test14.xlsx','A2:A1002'),'convertfrom','excel');
       time14.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d14=datetime('23-Aug-2022') % Date of test.
       d14.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time14=d14 + timeofday(time14) % Date and time variabe.
       
       plot(app.UIAxes,[time14],[test14.Pressure/1000],'Color','#4DBEEE','LineWidth',0.8,'DisplayName','Test 14 vacuum pump off, no radioactive or oxidising material present, humidity and temperature increased (Pressure bar)'); % Plot pressure for test14 and divide by 1000 too convert Hectoopascals too bar.
       
       lowlow=min(test14.Pressure/1000) % Find minimum value for test14 pressure measurements.
       low=min(test14.Pressure/1000)*1.0001 % Calculate low set point for test14 pressure using minimum value, plus 0.001%.
       high=max(test14.Pressure/1000)/1.0001 % Calculate high value for test14 pressure using maximum value minus 0.001%.
       highhigh=max(test14.Pressure/1000) % Find maximum value for test14 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       app.NumberofSetPointVialationsEditField_4.Value=length(find(test14.Pressure/1000>=lowlow & test14.Pressure/1000<=low))+length(find(test14.Pressure/1000>=high & test14.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test14.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, humidity and temperature increased and pressure too high'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, humidity and temperature increased and pressure too high'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test14.Pressure>=lowlow & test14.Pressure/1000<=low); % Create fault log for test 14 pressure low set point violations.
         pressure=test14.Pressure(index); % Attain data from test14.
         time=test14.Time(index); % Record set point violations.
         
         index2=find(test14.Pressure>=high & test14.Pressure/1000<=highhigh); % Create fault log for test 14 pressure high set point violations.
         pressure2=test14.Pressure(index2); % Attain data from test14.
         time2=test14.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test14PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
       case "Test 15 vacuum pump on, no radioactive or oxidising material present, humidity increased and temperature decreased (Pressure)"
  
       test15 = readtable("test15.xlsx") % Import data from excel spreadheet for test15.
       time15=datetime(xlsread('test15.xlsx','A2:A1002'),'convertfrom','excel');
       time15.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d15=datetime('24-Aug-2022') % Date of test.
       d15.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time15=d15 + timeofday(time15) % Date and time variabe.
        
       plot(app.UIAxes,[time15],[test15.Pressure/1000],'Color','#A2142F','LineWidth',0.8,'DisplayName','Test 15 vacuum pump on, no radioactive or oxidising material present, humidity increased and temperature decreased (Pressure bar)'); % Plot pressure for test15 and divide by 1000 too convert Hectoopascals too bar.
         
       lowlow=min(test15.Pressure/1000) % Find minimum value for test15 pressure measurements.
       low=min(test15.Pressure/1000)*1.0001 % Calculate low set point for test15 pressure using minimum value, plus 0.001%.
       high=max(test15.Pressure/1000)/1.0001 % Calculate high value for test15 pressure using maximum value minus 0.001%.
       highhigh=max(test15.Pressure/1000) % Find maximum value for test15 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       app.NumberofSetPointVialationsEditField_4.Value=length(find(test15.Pressure/1000>=lowlow & test15.Pressure/1000<=low))+length(find(test15.Pressure/1000>=high & test15.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test15.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, humidity increased and temperature decreased and pressure too low'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, humidity increased and temperature decreased and pressure too low'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test15.Pressure>=lowlow & test15.Pressure/1000<=low); % Create fault log for test 15 pressure low set point violations.
         pressure=test15.Pressure(index); % Attain data from test15.
         time=test15.Time(index); % Record set point violations.
         
         index2=find(test15.Pressure>=high & test15.Pressure/1000<=highhigh); % Create fault log for test 15 pressure high set point violations.
         pressure2=test15.Pressure(index2); % Attain data from test15.
         time2=test15.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test15PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
       case "Test 16 vacuum pump off, no radioactive or oxidising material present, humidity increased and temperature decreased (Pressure)"
           
       test16 = readtable("test16.xlsx") % Import data from excel spreadheet for test16.
       time16=datetime(xlsread('test16.xlsx','A2:A1002'),'convertfrom','excel');
       time16.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d16=datetime('25-Aug-2022') % Date of test.
       d16.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time16=d16 + timeofday(time16) % Date and time variabe.
        
       plot(app.UIAxes,[time16],[test16.Pressure/1000],'Color','r','LineWidth',0.8,'DisplayName','Test 16 vacuum pump off, no radioactive or oxidising material present, humidity increased and temperature decreased (Pressure bar)'); % Plot pressure for test16 and divide by 1000 too convert Hectoopascals too bar.
       
       lowlow=min(test16.Pressure/1000) % Find minimum value for test16 pressure measurements.
       low=min(test16.Pressure/1000)*1.0001 % Calculate low set point for test16 pressure using minimum value, plus 0.001%.
       high=max(test16.Pressure/1000)/1.0001 % Calculate high value for test16 pressure using maximum value minus 0.001%.
       highhigh=max(test16.Pressure/1000) % Find maximum value for test16 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       app.NumberofSetPointVialationsEditField_4.Value=length(find(test16.Pressure/1000>=lowlow & test16.Pressure/1000<=low))+length(find(test16.Pressure/1000>=high & test16.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test16.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, humidity increased and temperature decreased and pressure too high'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, humidity increased and temperature decreased and pressure too high'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test16.Pressure>=lowlow & test16.Pressure/1000<=low); % Create fault log for test 16 pressure low set point violations.
         pressure=test16.Pressure(index); % Attain data from test16.
         time=test16.Time(index); % Record set point violations.
         
         index2=find(test16.Pressure>=high & test16.Pressure/1000<=highhigh); % Create fault log for test 16 pressure high set point violations.
         pressure2=test16.Pressure(index2); % Attain data from test16.
         time2=test16.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test16PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
       case "Test 17 vacuum pump on, no radioactive or oxidising material present, humidity decreased (Pressure)"
       
       test17 = readtable("test17.xlsx") % Import data from excel spreadheet for test17.
       time17=datetime(xlsread('test17.xlsx','A2:A1002'),'convertfrom','excel');
       time17.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d17=datetime('26-Aug-2022') % Date of test.
       d17.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time17=d17 + timeofday(time17) % Date and time variabe.
        
       plot(app.UIAxes,[time17],[test17.Pressure/1000],'Color','g','LineWidth',0.8,'DisplayName','Test 17 vacuum pump on, no radioactive or oxidising material present, humidity decreased (Pressure bar)'); % Plot pressure for test17 and divide by 1000 too convert Hectoopascals too bar.
       
       lowlow=min(test17.Pressure/1000) % Find minimum value for test17 pressure measurements.
       low=min(test17.Pressure/1000)*1.0001 % Calculate low set point for test17 pressure using minimum value, plus 0.001%.
       high=max(test17.Pressure/1000)/1.0001 % Calculate high value for test17 pressure using maximum value minus 0.001%.
       highhigh=max(test17.Pressure/1000) % Find maximum value for test17 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       app.NumberofSetPointVialationsEditField_4.Value=length(find(test17.Pressure/1000>=lowlow & test17.Pressure/1000<=low))+length(find(test17.Pressure/1000>=high & test17.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test17.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, humidity decreased and pressure too low'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, humidity decreased and pressure too low'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test17.Pressure>=lowlow & test17.Pressure/1000<=low); % Create fault log for test 17 pressure low set point violations.
         pressure=test17.Pressure(index); % Attain data from test17.
         time=test17.Time(index); % Record set point violations.
         
         index2=find(test17.Pressure>=high & test17.Pressure/1000<=highhigh); % Create fault log for test 17 pressure high set point violations.
         pressure2=test17.Pressure(index2); % Attain data from test17.
         time2=test17.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test17PRESSURElog.mat',"data","time","errormessage"); % Table details.


       case "Test 18 vacuum pump off, no radioactive or oxidising material present, humidity decreased (Pressure)"
                 
       test18 = readtable("test18.xlsx") % Import data from excel spreadheet for test18.
       time18=datetime(xlsread('test18.xlsx','A2:A1002'),'convertfrom','excel');
       time18.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d18=datetime('27-Aug-2022') % Date of test.
       d18.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time18=d18 + timeofday(time18) % Date and time variabe.
        
       plot(app.UIAxes,[time18],[test18.Pressure/1000],'Color','b','LineWidth',0.8,'DisplayName','Test 18 vacuum pump off, no radioactive or oxidising material present, humidity decreased (Pressure bar)'); % Plot pressure for test18 and divide by 1000 too convert Hectoopascals too bar.

       lowlow=min(test18.Pressure/1000) % Find minimum value for test18 pressure measurements.
       low=min(test18.Pressure/1000)*1.0001 % Calculate low set point for test18 pressure using minimum value, plus 0.001%.
       high=max(test18.Pressure/1000)/1.0001 % Calculate high value for test18 pressure using maximum value minus 0.001%.
       highhigh=max(test18.Pressure/1000) % Find maximum value for test18 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       app.NumberofSetPointVialationsEditField_4.Value=length(find(test18.Pressure/1000>=lowlow & test18.Pressure/1000<=low))+length(find(test18.Pressure/1000>=high & test18.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test18.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, humidity decreased and pressure too high'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, humidity decreased and pressure too high'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test18.Pressure>=lowlow & test18.Pressure/1000<=low); % Create fault log for test 18 pressure low set point violations.
         pressure=test18.Pressure(index); % Attain data from test18.
         time=test18.Time(index); % Record set point violations.
         
         index2=find(test18.Pressure>=high & test18.Pressure/1000<=highhigh); % Create fault log for test 18 pressure high set point violations.
         pressure2=test18.Pressure(index2); % Attain data from test18.
         time2=test18.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test18PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
       case "Test 19 vacuum pump on, no radioactive or oxidising material present, humidity decreased and temperature increased (Pressure)"
         
       test19 = readtable("test19.xlsx") % Import data from excel spreadheet for test19.
       time19=datetime(xlsread('test19.xlsx','A2:A1002'),'convertfrom','excel');
       time19.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d19=datetime('28-Aug-2022') % Date of test.
       d19.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time19=d19 + timeofday(time19) % Date and time variabe.
       
       plot(app.UIAxes,[time19],[test19.Pressure/1000],'Color','m','LineWidth',0.8,'DisplayName','Test 19 vacuum pump on, no radioactive or oxidising material present, humidity decreased and temperature increased (Pressure bar)'); % Plot pressure for test19 and divide by 1000 too convert Hectoopascals too bar.

       lowlow=min(test19.Pressure/1000) % Find minimum value for test19 pressure measurements.
       low=min(test19.Pressure/1000)*1.0001 % Calculate low set point for test19 pressure using minimum value, plus 0.001%.
       high=max(test19.Pressure/1000)/1.0001 % Calculate high value for test19 pressure using maximum value minus 0.001%.
       highhigh=max(test19.Pressure/1000) % Find maximum value for test19 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       app.NumberofSetPointVialationsEditField_4.Value=length(find(test19.Pressure/1000>=lowlow & test19.Pressure/1000<=low))+length(find(test19.Pressure/1000>=high & test19.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test19.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, humidity decreased, temperature increased and pressure too low'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, humidity decreased, temperature increased and pressure too low'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test19.Pressure>=lowlow & test19.Pressure/1000<=low); % Create fault log for test 19 pressure low set point violations.
         pressure=test19.Pressure(index); % Attain data from test19.
         time=test19.Time(index); % Record set point violations.
         
         index2=find(test19.Pressure>=high & test19.Pressure/1000<=highhigh); % Create fault log for test 19 pressure high set point violations.
         pressure2=test19.Pressure(index2); % Attain data from test19.
         time2=test19.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test19PRESSURElog.mat',"data","time","errormessage"); % Table details.

      
       case "Test 20 vacuum pump off, no radioactive or acetoone sources present, humidity decreased and temperature increased (Pressure)"
                
       test20 = readtable("test20.xlsx") % Import data from excel spreadheet for test20.
       time20=datetime(xlsread('test20.xlsx','A2:A1002'),'convertfrom','excel');
       time20.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d20=datetime('29-Aug-2022') % Date of test.
       d20.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time20=d20 + timeofday(time20) % Date and time variabe.
        
       plot(app.UIAxes,[time20],[test20.Pressure/1000],'Color','k','LineWidth',0.8,'DisplayName','Test 20 vacuum pump off, no radioactive or acetoone sources present, humidity decreased and temperature increased (Pressure bar)'); % Plot pressure for test20 and divide by 1000 too convert Hectoopascals too bar.

       lowlow=min(test20.Pressure/1000) % Find minimum value for test20 pressure measurements.
       low=min(test20.Pressure/1000)*1.0001 % Calculate low set point for test20 pressure using minimum value, plus 0.001%.
       high=max(test20.Pressure/1000)/1.0001 % Calculate high value for test20 pressure using maximum value minus 0.001%.
       highhigh=max(test20.Pressure/1000) % Find maximum value for test20 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       app.NumberofSetPointVialationsEditField_4.Value=length(find(test20.Pressure/1000>=lowlow & test20.Pressure/1000<=low))+length(find(test20.Pressure/1000>=high & test20.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test20.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs too maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, humidity decreased, temperature increased and pressure too high'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, humidity decreased, temperature increased and pressure too high'; % If number of set point violations is greater than 50% pessure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test20.Pressure>=lowlow & test20.Pressure/1000<=low); % Create fault log for test 20 pressure low set point violations.
         pressure=test20.Pressure(index); % Attain data from test20.
         time=test20.Time(index); % Record set point violations.
         
         index2=find(test20.Pressure>=high & test20.Pressure/1000<=highhigh); % Create fault log for test 20 pressure high set point violations.
         pressure2=test20.Pressure(index2); % Attain data from test20.
         time2=test20.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test20PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
       case "Test 21 vacuum pump on, no radioactive or oxidising material present, humidity and temperature decreased (Pressure)"
          
       test21 = readtable("test21.xlsx") % Import data from excel spreadheet for test21.
       time21=datetime(xlsread('test21.xlsx','A2:A1002'),'convertfrom','excel');
       time21.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d21=datetime('30-Aug-2022') % Date of test.
       d21.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time21=d21 + timeofday(time21) % Date and time variabe.
         
       plot(app.UIAxes,[time21],[test21.Pressure/1000],'Color','#0072BD','LineWidth',0.8,'DisplayName','Test 21 vacuum pump on, no radioactive or oxidising material present, humidity and temperature decreased (Pressure bar)'); % Plot pressure for test21 and divide by 1000 too convert Hectoopascals too bar.
         
       lowlow=min(test21.Pressure/1000) % Find minimum value for test21 pressure measurements.
       low=min(test21.Pressure/1000)*1.0001 % Calculate low set point for test21 pressure using minimum value, plus 0.001%.
       high=max(test21.Pressure/1000)/1.0001 % Calculate high value for test21 pressure using maximum value minus 0.001%.
       highhigh=max(test21.Pressure/1000) % Find maximum value for test21 pressure measurements.
       s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       app.NumberofSetPointVialationsEditField_4.Value=length(find(test21.Pressure/1000>=lowlow & test21.Pressure/1000<=low))+length(find(test21.Pressure/1000>=high & test21.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test21.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, humidity and temperature decreased and pressure too low'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, humidity and temperature decreased and pressure too low'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test21.Pressure>=lowlow & test21.Pressure/1000<=low); % Create fault log for test 21 pressure low set point violations.
         pressure=test21.Pressure(index); % Attain data from test21.
         time=test21.Time(index); % Record set point violations.
         
         index2=find(test21.Pressure>=high & test21.Pressure/1000<=highhigh); % Create fault log for test 21 pressure high set point violations.
         pressure2=test21.Pressure(index2); % Attain data from test20.
         time2=test21.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test21PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
       case "Test 22 vacuum pump off, no radioactive or oxidising material present, humidity and temperature decreased (Pressure)"
      
       test22 = readtable("test22.xlsx") % Import data from excel spreadheet for test22.
       time22=datetime(xlsread('test22.xlsx','A2:A1002'),'convertfrom','excel');
       time22.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d22=datetime('31-Aug-2022') % Date of test.
       d22.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time22=d22 + timeofday(time22); % Date and time variabe.
         
       plot(app.UIAxes,[time22],[test22.Pressure/1000],'Color','#D95319','LineWidth',0.8,'DisplayName','Test 22 vacuum pump off, no radioactive or oxidising material present, humidity and temperature decreased (Pressure bar)'); % Plot pressure for test22 and divide by 1000 too convert Hectoopascals too bar.

      lowlow=min(test22.Pressure/1000) % Find minimum value for test22 pressure measurements.
      low=min(test22.Pressure/1000)*1.0001 % Calculate low set point for test22 pressure using minimum value, plus 0.001%.
      high=max(test22.Pressure/1000)/1.0001 % Calculate high value for test22 pressure using maximum value minus 0.001%.
      highhigh=max(test22.Pressure/1000) % Find maximum value for test22 pressure measurements.
      s=app.NumberofSetPointVialationsEditField_4.Value; % Take previous field value. 

       app.NumberofSetPointVialationsEditField_4.Value=length(find(test22.Pressure/1000>=lowlow & test22.Pressure/1000<=low))+length(find(test22.Pressure/1000>=high & test22.Pressure/1000<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_4.Value=app.NumberofSetPointVialationsEditField_4.Value+s; % Add previous test violations too this set point violations. 
       app.SetPointVialationPercentageEditField_5.Value=app.NumberofSetPointVialationsEditField_4.Value/length(test22.Pressure/1000)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_5.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.PressureSystemStatusMessageLabel.Text='Glovebox Pressure Healthy'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_5.Value>20 && app.SetPointVialationPercentageEditField_5.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_5.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% pressure instrument needs maintenance, schedule maintenance and display value yellow.
             app.PressureSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox temperature not within design limits, humidity and temperature decreased and pressure too high'; % Display message.
             app.PressureSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_5.BackgroundColor='r'; % Greater than 50% set point.
             app.PressureSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox temperature not within design limits, humidity and temperature decreased and pressure too high'; % If number of set point violations is greater than 50% instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.PressureSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test22.Pressure>=lowlow & test22.Pressure/1000<=low); % Create fault log for test 22 pressure low set point violations.
         pressure=test22.Pressure(index); % Attain data from test22.
         time=test22.Time(index); % Record set point violations.
         
         index2=find(test22.Pressure>=high & test22.Pressure/1000<=highhigh); % Create fault log for test 22 pressure high set point violations.
         pressure2=test22.Pressure(index2); % Attain data from test20.
         time2=test22.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     pressure(L+i,1)=pressure2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=pressure; % Column 2 pressure.
         errormessage=app.PressureSystemStatusMessageLabel.Text % Column 3 label.
         save('test22PRESSURElog.mat',"data","time","errormessage"); % Table details.

         
       case "blank"
         
       end
         
       % Oxygen
       switch app.OxygenDropDown.Value

       case "Test 1 vacuum pump on, no radioactive or oxidising material present (Oxygen)"
   
       test1 = readtable("test1.xlsx") % Import data from excel spreadsheet for test1.
       time1=datetime(xlsread('test1.xlsx','A2:A1002'),'convertfrom','excel');
       time1.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d1=datetime('10-Aug-2022') % Date of test.
       d1.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time1=d1 + timeofday(time1) % Date and time variabe.
        
       plot(app.UIAxes,[time1],[test1.Oxygen],'Color','#EDB120','LineWidth',0.8,'DisplayName','Test 1 vacuum pump on, no radioactive or oxidising material present (Oxygen %)'); % Plot oxygen for test1.

       lowlow=min(test1.Oxygen) % Find minimum value for test1 oxygen measurements.
       low=min(test1.Oxygen)*1.001 % Calculate low set point for test1 oxygen using minimum value, plus 0.01%.
       high=max(test1.Oxygen)/1.001 % Calculate high value for test1 oxygen using maximum value minus 0.01%.
       highhigh=max(test1.Oxygen) % Find maximum value for test1 oxygen measurements.
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test1.Oxygen>=lowlow & test1.Oxygen<=low))+length(find(test1.Oxygen>=high & test1.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test1.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - "Glovebox oxygen concentration not within design limits, issue with reduction in Glovebox pressure, pressure too low"'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, issue with reduction in Glovebox pressure, pressure too low'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test1.Oxygen>=lowlow & test1.Oxygen<=low); % Create fault log for test 1 oxygen low set point violations.
         oxygen=test1.Oxygen(index); % Attain data from test1.
         time=test1.Time(index); % Record set point violations.
         
         index2=find(test1.Oxygen>=high & test1.Oxygen<=highhigh); % Create fault log for test 1 oxygen high set point violations.
         oxygen2=test1.Oxygen(index2); % Attain data from test1.
         time2=test1.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test1OXYGENlog.mat',"data","time","errormessage"); % Table details.


       case "Test 2 vacuum pump off, no radioactive or oxidising material present (Oxygen)"  
             
       test2 = readtable("test2.xlsx") % Import data from excel spreadsheet for test2.
       time2=datetime(xlsread('test2.xlsx','A2:A1002'),'convertfrom','excel');
       time2.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d2=datetime('11-Aug-2022') % Date of test.
       d2.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time2=d2 + timeofday(time2) % Date and time variabe.
        
       plot(app.UIAxes,[time2],[test2.Oxygen],'Color','#7E2F8E','LineWidth',0.8,'DisplayName','Test 2 vacuum pump off, no radioactive or oxidising material present (Oxygen %)'); % Plot oxygen for test2.
       
       lowlow=min(test2.Oxygen) % Find minimum value for test2 oxygen measurements.
       low=min(test2.Oxygen)*1.001 % Calculate low set point for test2 oxygen using minimum value, plus 0.01%.
       high=max(test2.Oxygen)/1.001 % Calculate high value for test2 oxygen using maximum value minus 0.01%.
       highhigh=max(test2.Oxygen) % Find maximum value for test2 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test2.Oxygen>=lowlow & test2.Oxygen<=low))+length(find(test2.Oxygen>=high & test2.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test2.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox pressure not within design limits, issue with reduction in Glovebox pressure, pressure too high'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='Y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox pressure not within design limits, issue with reduction in Glovebox pressure, pressure too high'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test2.Oxygen>=lowlow & test2.Oxygen<=low); % Create fault log for test 2 oxygen low set point violations.
         oxygen=test2.Oxygen(index); % Attain data from test2.
         time=test2.Time(index); % Record set point violations.
         
         index2=find(test2.Oxygen>=high & test2.Oxygen<=highhigh); % Create fault log for test 2 oxygen high set point violations.
         oxygen2=test2.Oxygen(index2); % Attain data from test2.
         time2=test2.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test2OXYGENlog.mat',"data","time","errormessage"); % Table details.


       case "Test 3 185kBq radioactive source present and oxidising material not present (Oxygen)"
             
       test3 = readtable("test3.xlsx") % Import data from excel spreadheet for test3.
       time3=datetime(xlsread('test3.xlsx','A2:A1002'),'convertfrom','excel');
       time3.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d3=datetime('12-Aug-2022') % Date of test.
       d3.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time3=d3 + timeofday(time3) % Date and time variabe.
        
       plot(app.UIAxes,[time3],[test3.Oxygen],'Color','#7E2F8E','LineWidth',0.8,'DisplayName','Test 3 185kBq radioactive source present and oxidising material not present (Oxygen %)'); % Plot oxygen for test3.
        
       lowlow=min(test3.Oxygen) % Find minimum value for test3 oxygen measurements.
       low=min(test3.Oxygen)*1.001 % Calculate low set point for test3 oxygen using minimum value, plus 0.01%.
       high=max(test3.Oxygen)/1.001 % Calculate high value for test3 oxygen using maximum value minus 0.01%.
       highhigh=max(test3.Oxygen) % Find maximum value for test3 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test3.Oxygen>=lowlow & test3.Oxygen<=low))+length(find(test3.Oxygen>=high & test3.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test3.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, high radiation present, check radioactivity of material'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, high radiation present, check radioactivity of material'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test3.Oxygen>=lowlow & test3.Oxygen<=low); % Create fault log for test 3 oxygen low set point violations.
         oxygen=test3.Oxygen(index); % Attain data from test3.
         time=test3.Time(index); % Record set point violations.
         
         index2=find(test3.Oxygen>=high & test3.Oxygen<=highhigh); % Create fault log for test 3 oxygen high set point violations.
         oxygen2=test3.Oxygen(index2); % Attain data from test3.
         time2=test3.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test3OXYGENlog.mat',"data","time","errormessage"); % Table details.

         
       case "Test 4 40kBq radioactive source present and oxidising material not present (Oxygen)"
           
       test4 = readtable("test4.xlsx") % Import data from excel spreadheet for test4.
       time4=datetime(xlsread('test4.xlsx','A2:A1002'),'convertfrom','excel');
       time4.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d4=datetime('13-Aug-2022') % Date of test.
       d4.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time4=d4 + timeofday(time4) % Date and time variabe.
       
       plot(app.UIAxes,[time4],[test4.Oxygen],'Color','#77AC30','LineWidth',0.8,'DisplayName','Test 4 40kBq radioactive source present and oxidising material not present (Oxygen %)'); % Plot oxygen for test4.

       lowlow=min(test4.Oxygen) % Find minimum value for test4 oxygen measurements.
       low=min(test4.Oxygen)*1.001 % Calculate low set point for test4 oxygen using minimum value, plus 0.01%.
       high=max(test4.Oxygen)/1.001 % Calculate high value for test4 oxygen using maximum value minus 0.01%.
       highhigh=max(test4.Oxygen) % Find maximum value for test4 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test4.Oxygen>=lowlow & test4.Oxygen<=low))+length(find(test4.Oxygen>=high & test4.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test4.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, radioactive source present'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, radioactive source present'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test4.Oxygen>=lowlow & test4.Oxygen<=low); % Create fault log for test 4 oxygen low set point violations.
         oxygen=test4.Oxygen(index); % Attain data from test4.
         time=test4.Time(index); % Record set point violations.
         
         index2=find(test4.Oxygen>=high & test4.Oxygen<=highhigh); % Create fault log for test 4 oxygen high set point violations.
         oxygen2=test4.Oxygen(index2); % Attain data from test4.
         time2=test4.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test4OXYGENlog.mat',"data","time","errormessage"); % Table details.


       case "Test 5 0.5M Sodium Hydroxide present and radioactive source not present (Oxygen)"
             
       test5 = readtable("test5.xlsx") % Import data from excel spreadheet for test5.
       time5=datetime(xlsread('test5.xlsx','A2:A1002'),'convertfrom','excel');
       time5.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d5=datetime('14-Aug-2022') % Date of test.
       d5.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time5=d5 + timeofday(time5) % Date and time variabe.

       plot(app.UIAxes,[time5],[test5.Oxygen],'Color','#4DBEEE','LineWidth',0.8,'DisplayName','Test 5 0.5M Sodium Hydroxide present and radioactive source not present (Oxygen %)'); % Plot oxygen for test5.

       lowlow=min(test5.Oxygen) % Find minimum value for test5 oxygen measurements.
       low=min(test5.Oxygen)*1.001 % Calculate low set point for test5 oxygen using minimum value, plus 0.01%.
       high=max(test5.Oxygen)/1.001 % Calculate high value for test5 oxygen using maximum value minus 0.01%.
       highhigh=max(test5.Oxygen) % Find maximum value for test5 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test5.Oxygen>=lowlow & test5.Oxygen<=low))+length(find(test5.Oxygen>=high & test5.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test5.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, chemical source present'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, chemical source present'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test5.Oxygen>=lowlow & test5.Oxygen<=low); % Create fault log for test 5 oxygen low set point violations.
         oxygen=test5.Oxygen(index); % Attain data from test5.
         time=test5.Time(index); % Record set point violations.
         
         index2=find(test5.Oxygen>=high & test5.Oxygen<=highhigh); % Create fault log for test 5 oxygen high set point violations.
         oxygen2=test5.Oxygen(index2); % Attain data from test5.
         time2=test5.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test5OXYGENlog.mat',"data","time","errormessage"); % Table details

         
       case "Test 6 0.01M Sodium Hydroxide present and radioactive source not present (Oxygen)"
             
       test6 = readtable("test6.xlsx") % Import data from excel spreadheet for test6.
       time6=datetime(xlsread('test6.xlsx','A2:A1002'),'convertfrom','excel');
       time6.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d6=datetime('15-Aug-2022') % Date of test.
       d6.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time6=d6 + timeofday(time6) % Date and time variabe.
       
       plot(app.UIAxes,[time6],[test6.Oxygen],'Color','#A2142F','LineWidth',0.8,'DisplayName','Test 6 0.01M Sodium Hydroxide present and radioactive source not present (Oxygen %)'); % Plot oxygen for test6.
        
       lowlow=min(test6.Oxygen) % Find minimum value for test6 oxygen measurements.
       low=min(test6.Oxygen)*1.001 % Calculate low set point for test6 oxygen using minimum value, plus 0.01%.
       high=max(test6.Oxygen)/1.001 % Calculate high value for test6 oxygen using maximum value minus 0.01%.
       highhigh=max(test6.Oxygen) % Find maximum value for test6 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test6.Oxygen>=lowlow & test6.Oxygen<=low))+length(find(test6.Oxygen>=high & test6.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test6.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, chemical source present'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, chemical source present'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test6.Oxygen>=lowlow & test6.Oxygen<=low); % Create fault log for test 6 oxygen low set point violations.
         oxygen=test6.Oxygen(index); % Attain data from test6.
         time=test6.Time(index); % Record set point violations.
         
         index2=find(test6.Oxygen>=high & test6.Oxygen<=highhigh); % Create fault log for test 6 oxygen high set point violations.
         oxygen2=test6.Oxygen(index2); % Attain data from test6.
         time2=test6.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test6OXYGENlog.mat',"data","time","errormessage"); % Table details

 
       case "Test 7 vacuum pump on, no radioactive or acetone source present, temperature increased (Oxygen)"
             
       test7 = readtable("test7.xlsx") % Import data from excel spreadheet for test7.
       time7=datetime(xlsread('test7.xlsx','A2:A1002'),'convertfrom','excel');
       time7.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d7=datetime('16-Aug-2022') % Date of test.
       d7.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time7=d7 + timeofday(time7) % Date and time variabe.
       
       plot(app.UIAxes,[time7],[test7.Oxygen],'Color','r','LineWidth',0.8,'DisplayName','Test 7 vacuum pump on, no radioactive or acetoone source present, temperature increased (Oxygen %)'); % Plot oxygen for test7.

       lowlow=min(test7.Oxygen) % Find minimum value for test7 oxygen measurements.
       low=min(test7.Oxygen)*1.001 % Calculate low set point for test7 oxygen using minimum value, plus 0.01%.
       high=max(test7.Oxygen)/1.001 % Calculate high value for test7 oxygen using maximum value minus 0.01%.
       highhigh=max(test7.Oxygen) % Find maximum value for test7 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test7.Oxygen>=lowlow & test7.Oxygen<=low))+length(find(test7.Oxygen>=high & test7.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test7.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, temperature increased and pressure too low'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, temperature increased and pressure too low'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test7.Oxygen>=lowlow & test7.Oxygen<=low); % Create fault log for test 7 oxygen low set point violations.
         oxygen=test7.Oxygen(index); % Attain data from test7.
         time=test7.Time(index); % Record set point violations.
         
         index2=find(test7.Oxygen>=high & test7.Oxygen<=highhigh); % Create fault log for test 7 oxygen high set point violations.
         oxygen2=test7.Oxygen(index2); % Attain data from test6.
         time2=test7.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test7OXYGENlog.mat',"data","time","errormessage"); % Table details
       

       case "Test 8 vacuum pump off, no radioactive or oxidising material present, temperature increased (Oxygen)"
             
       test8 = readtable("test8.xlsx") % Import data from excel spreadheet for test8.
       time8=datetime(xlsread('test8.xlsx','A2:A1002'),'convertfrom','excel');
       time8.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d8=datetime('17-Aug-2022') % Date of test.
       d8.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time8=d8 + timeofday(time8) % Date and time variabe.
        
       plot(app.UIAxes,[time8],[test8.Oxygen],'Color','g','LineWidth',0.8,'DisplayName','Test 8 vacuum pump off, no radioactive or oxidising material present, temperature increased (Oxygen %)'); % Plot oxygen for test8.
      
       lowlow=min(test8.Oxygen) % Find minimum value for test8 oxygen measurements.
       low=min(test8.Oxygen)*1.001 % Calculate low set point for test8 oxygen using minimum value, plus 0.01%.
       high=max(test8.Oxygen)/1.001 % Calculate high value for test8 oxygen using maximum value minus 0.01%.
       highhigh=max(test8.Oxygen) % Find maximum value for test8 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test8.Oxygen>=lowlow & test8.Oxygen<=low))+length(find(test8.Oxygen>=high & test8.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test8.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, temperature increased and pressure too high'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, temperature increased and pressure too high'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test8.Oxygen>=lowlow & test8.Oxygen<=low); % Create fault log for test 8 oxygen low set point violations.
         oxygen=test8.Oxygen(index); % Attain data from test8.
         time=test8.Time(index); % Record set point violations.
         
         index2=find(test8.Oxygen>=high & test8.Oxygen<=highhigh); % Create fault log for test 8 oxygen high set point violations.
         oxygen2=test8.Oxygen(index2); % Attain data from test8.
         time2=test8.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test8OXYGENlog.mat',"data","time","errormessage"); % Table details

         
       case "Test 9 vacuum pump on, no radioactive or oxidising material present, temperature decreased (Oxygen)"
             
       test9 = readtable("test9.xlsx") % Import data from excel spreadheet for test9.
       time9=datetime(xlsread('test9.xlsx','A2:A1002'),'convertfrom','excel');
       time9.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d9=datetime('18-Aug-2022') % Date of test.
       d9.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time9=d9 + timeofday(time9) % Date and time variabe.
       
       plot(app.UIAxes,[time9],[test9.Oxygen],'Color','b','LineWidth',0.8,'DisplayName','Test 9 vacuum pump on, no radioactive or oxidising material present, temperature decreased (Oxygen %)'); % Plot oxygen for test9.
       
       lowlow=min(test9.Oxygen) % Find minimum value for test9 oxygen measurements.
       low=min(test9.Oxygen)*1.001 % Calculate low set point for test9 oxygen using minimum value, plus 0.01%.
       high=max(test9.Oxygen)/1.001 % Calculate high value for test9 oxygen using maximum value minus 0.01%.
       highhigh=max(test9.Oxygen) % Find maximum value for test9 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test9.Oxygen>=lowlow & test9.Oxygen<=low))+length(find(test9.Oxygen>=high & test9.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test9.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, temperature increased and pressure too low'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, temperature increased and pressure too low'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test9.Oxygen>=lowlow & test9.Oxygen<=low); % Create fault log for test 9 oxygen low set point violations.
         oxygen=test9.Oxygen(index); % Attain data from test9.
         time=test9.Time(index); % Record set point violations.
         
         index2=find(test9.Oxygen>=high & test9.Oxygen<=highhigh); % Create fault log for test 9 oxygen high set point violations.
         oxygen2=test9.Oxygen(index2); % Attain data from test9.
         time2=test9.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test9OXYGENlog.mat',"data","time","errormessage"); % Table details


       case "Test 10 vacuum pump off, no radioactive or oxidising material present, temperature decreased (Oxygen)"
             
       test10 = readtable("test10.xlsx") % Import data from excel spreadheet for test10.
       time10=datetime(xlsread('test10.xlsx','A2:A1002'),'convertfrom','excel');
       time10.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d10=datetime('19-Aug-2022') % Date of test.
       d10.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time10=d10 + timeofday(time10) % Date and time variabe.
       
       plot(app.UIAxes,[time10],[test10.Oxygen],'Color','m','LineWidth',0.8,'DisplayName','Test 10 vacuum pump off, no radioactive or oxidising material present, temperature decreased (Oxygen %)'); % Plot oxygen for test10.
       
       lowlow=min(test10.Oxygen) % Find minimum value for test10 oxygen measurements.
       low=min(test10.Oxygen)*1.001 % Calculate low set point for test10 oxygen using minimum value, plus 0.01%.
       high=max(test10.Oxygen)/1.001 % Calculate high value for test10 oxygen using maximum value minus 0.01%.
       highhigh=max(test10.Oxygen) % Find maximum value for test10 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test10.Oxygen>=lowlow & test10.Oxygen<=low))+length(find(test10.Oxygen>=high & test10.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test10.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, temperature decreased and pressure too high'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, temperature decreased and pressure too high'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test10.Oxygen>=lowlow & test10.Oxygen<=low); % Create fault log for test 10 oxygen low set point violations.
         oxygen=test10.Oxygen(index); % Attain data from test10.
         time=test10.Time(index); % Record set point violations.
         
         index2=find(test10.Oxygen>=high & test10.Oxygen<=highhigh); % Create fault log for test 10 oxygen high set point violations.
         oxygen2=test10.Oxygen(index2); % Attain data from test10.
         time2=test10.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test10OXYGENlog.mat',"data","time","errormessage"); % Table details
         

       case "Test 11 vacuum pump on, no radioactive or oxidising material present, humidity increased (Oxygen)"
         
       test11 = readtable("test11.xlsx") % Import data from excel spreadheet for test11.
       time11=datetime(xlsread('test11.xlsx','A2:A1002'),'convertfrom','excel');
       time11.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d11=datetime('20-Aug-2022') % Date of test.
       d11.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time11=d11 + timeofday(time11) % Date and time variabe.
       
       plot(app.UIAxes,[time11],[test11.Oxygen],'Color','k','LineWidth',0.8,'DisplayName','Test 11 vacuum pump on, no radioactive or oxidising material present, humidity increased (Oxygen %)'); % Plot oxygen for test11.   
       
       lowlow=min(test11.Oxygen) % Find minimum value for test11 oxygen measurements.
       low=min(test11.Oxygen)*1.001 % Calculate low set point for test11 oxygen using minimum value, plus 0.01%.
       high=max(test11.Oxygen)/1.001 % Calculate high value for test11 oxygen using maximum value minus 0.01%.
       highhigh=max(test11.Oxygen) % Find maximum value for test11 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test11.Oxygen>=lowlow & test11.Oxygen<=low))+length(find(test11.Oxygen>=high & test11.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test11.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, humidity increased and pressure too low'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, humidity increased and pressure too low'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test11.Oxygen>=lowlow & test11.Oxygen<=low); % Create fault log for test 11 oxygen low set point violations.
         oxygen=test11.Oxygen(index); % Attain data from test11.
         time=test11.Time(index); % Record set point violations.
         
         index2=find(test11.Oxygen>=high & test11.Oxygen<=highhigh); % Create fault log for test 11 oxygen high set point violations.
         oxygen2=test11.Oxygen(index2); % Attain data from test11.
         time2=test11.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test11OXYGENlog.mat',"data","time","errormessage"); % Table details

         
       case "Test 12 vacuum pump off, no radioactive or oxidising material present, humidity increased (Oxygen)"
         
       test12 = readtable("test12.xlsx") % Import data from excel spreadheet for test12.
       time12=datetime(xlsread('test12.xlsx','A2:A1002'),'convertfrom','excel');
       time12.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d12=datetime('21-Aug-2022') % Date of test.
       d12.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time12=d12 + timeofday(time12) % Date and time variabe.
       
       plot(app.UIAxes,[time12],[test12.Oxygen],'Color','#0072BD','LineWidth',0.8,'DisplayName','Test 12 vacuum pump off, no radioactive or oxidising material present, humidity increased (Oxygen %)'); % Plot oxygen for test12. 
       
       lowlow=min(test12.Oxygen) % Find minimum value for test12 oxygen measurements.
       low=min(test12.Oxygen)*1.001 % Calculate low set point for test12 oxygen using minimum value, plus 0.01%.
       high=max(test12.Oxygen)/1.001 % Calculate high value for test12 oxygen using maximum value minus 0.01%.
       highhigh=max(test12.Oxygen) % Find maximum value for test12 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test12.Oxygen>=lowlow & test12.Oxygen<=low))+length(find(test12.Oxygen>=high & test12.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test12.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, humidity increased and pressure too high'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, humidity increased and pressure too high'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test12.Oxygen>=lowlow & test12.Oxygen<=low); % Create fault log for test 12 oxygen low set point violations.
         oxygen=test12.Oxygen(index); % Attain data from test12.
         time=test12.Time(index); % Record set point violations.
         
         index2=find(test12.Oxygen>=high & test12.Oxygen<=highhigh); % Create fault log for test 12 oxygen high set point violations.
         oxygen2=test12.Oxygen(index2); % Attain data from test12.
         time2=test12.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test12OXYGENlog.mat',"data","time","errormessage"); % Table details


       case "Test 13 vacuum pump on, no radioactive or oxidising material present, humidity and temperature increased (Oxygen)"
         
       test13 = readtable("test13.xlsx") % Import data from excel spreadheet for test13.
       time13=datetime(xlsread('test13.xlsx','A2:A1002'),'convertfrom','excel');
       time13.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d13=datetime('22-Aug-2022') % Date of test.
       d13.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time13=d13 + timeofday(time13) % Date and time variabe.
       
       plot(app.UIAxes,[time13],[test13.Oxygen],'Color','#D95319','LineWidth',0.8,'DisplayName','Test 13 vacuum pump on, no radioactive or oxidising material present, humidity and temperature increased (Oxygen %)'); % Plot oxygen for test13. 

       lowlow=min(test13.Oxygen) % Find minimum value for test13 oxygen measurements.
       low=min(test13.Oxygen)*1.001 % Calculate low set point for test13 oxygen using minimum value, plus 0.01%.
       high=max(test13.Oxygen)/1.001 % Calculate high value for test13 oxygen using maximum value minus 0.01%.
       highhigh=max(test13.Oxygen) % Find maximum value for test13 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test13.Oxygen>=lowlow & test13.Oxygen<=low))+length(find(test13.Oxygen>=high & test13.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test13.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, humidity and temperature increased and pressure too low'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, humidity and temperature increased and pressure too low'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test13.Oxygen>=lowlow & test13.Oxygen<=low); % Create fault log for test 13 oxygen low set point violations.
         oxygen=test13.Oxygen(index); % Attain data from test13.
         time=test13.Time(index); % Record set point violations.
         
         index2=find(test13.Oxygen>=high & test13.Oxygen<=highhigh); % Create fault log for test 13 oxygen high set point violations.
         oxygen2=test13.Oxygen(index2); % Attain data from test13.
         time2=test13.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test13OXYGENlog.mat',"data","time","errormessage"); % Table details
       

       case "Test 14 vacuum pump off, no radioactive or oxidising material present, humidity and temperature increased (Oxygen)"
                  
       test14 = readtable("test14.xlsx") % Import data from excel spreadheet for test14.
       time14=datetime(xlsread('test14.xlsx','A2:A1002'),'convertfrom','excel');
       time14.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d14=datetime('23-Aug-2022') % Date of test.
       d14.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time14=d14 + timeofday(time14) % Date and time variabe.
       
       plot(app.UIAxes,[time14],[test14.Oxygen],'Color','#EDB120','LineWidth',0.8,'DisplayName','Test 14 vacuum pump off, no radioactive or oxidising material present, humidity and temperature increased (Oxygen %)'); % Plot oxygen for test14. 

       lowlow=min(test14.Oxygen) % Find minimum value for test14 oxygen measurements.
       low=min(test14.Oxygen)*1.001 % Calculate low set point for test14 oxygen using minimum value, plus 0.01%.
       high=max(test14.Oxygen)/1.001 % Calculate high value for test14 oxygen using maximum value minus 0.01%.
       highhigh=max(test14.Oxygen) % Find maximum value for test14 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test14.Oxygen>=lowlow & test14.Oxygen<=low))+length(find(test14.Oxygen>=high & test14.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test14.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, humidity and temperature increased and pressure too high'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, humidity and temperature increased and pressure too high'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test14.Oxygen>=lowlow & test14.Oxygen<=low); % Create fault log for test 14 oxygen low set point violations.
         oxygen=test14.Oxygen(index); % Attain data from test14.
         time=test14.Time(index); % Record set point violations.
         
         index2=find(test14.Oxygen>=high & test14.Oxygen<=highhigh); % Create fault log for test 14 oxygen high set point violations.
         oxygen2=test14.Oxygen(index2); % Attain data from test14.
         time2=test14.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test14OXYGENlog.mat',"data","time","errormessage"); % Table details

         
       case "Test 15 vacuum pump on, no radioactive or oxidising material present, humidity increased and temperature decreased (Oxygen)"
                  
       test15 = readtable("test15.xlsx") % Import data from excel spreadheet for test15.
       time15=datetime(xlsread('test15.xlsx','A2:A1002'),'convertfrom','excel');
       time15.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d15=datetime('24-Aug-2022') % Date of test.
       d15.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time15=d15 + timeofday(time15) % Date and time variabe.
       
       plot(app.UIAxes,[time15],[test15.Oxygen],'Color','#7E2F8E','LineWidth',0.8,'DisplayName','Test 15 vacuum pump on, no radioactive or oxidising material present, humidity increased and temperature decreased (Oxygen %)'); % Plot oxygen for test15. 
       
       lowlow=min(test15.Oxygen) % Find minimum value for test15 oxygen measurements.
       low=min(test15.Oxygen)*1.001 % Calculate low set point for test15 oxygen using minimum value, plus 0.01%.
       high=max(test15.Oxygen)/1.001 % Calculate high value for test15 oxygen using maximum value minus 0.01%.
       highhigh=max(test15.Oxygen) % Find maximum value for test15 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test15.Oxygen>=lowlow & test15.Oxygen<=low))+length(find(test15.Oxygen>=high & test15.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test15.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, humidity increased and temperature decreased and pressure too low'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, humidity increased and temperature decreased and pressure too low'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test15.Oxygen>=lowlow & test15.Oxygen<=low); % Create fault log for test 15 oxygen low set point violations.
         oxygen=test15.Oxygen(index); % Attain data from test15.
         time=test15.Time(index); % Record set point violations.
         
         index2=find(test15.Oxygen>=high & test15.Oxygen<=highhigh); % Create fault log for test 15 oxygen high set point violations.
         oxygen2=test15.Oxygen(index2); % Attain data from test15.
         time2=test15.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test15OXYGENlog.mat',"data","time","errormessage"); % Table details

         
       case "Test 16 vacuum pump off, no radioactive or oxidising material present, humidity increased and temperature decreased (Oxygen)"
                  
       test16 = readtable("test16.xlsx") % Import data from excel spreadheet for test16.
       time16=datetime(xlsread('test16.xlsx','A2:A1002'),'convertfrom','excel');
       time16.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d16=datetime('25-Aug-2022') % Date of test.
       d16.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time16=d16 + timeofday(time16) % Date and time variabe.
       
       plot(app.UIAxes,[time16],[test16.Oxygen],'Color','#77AC30','LineWidth',0.8,'DisplayName','Test 16 vacuum pump off, no radioactive or oxidising material present, humidity increased and temperature decreased (Oxygen %)'); % Plot oxygen for test16. 
        
       lowlow=min(test16.Oxygen) % Find minimum value for test16 oxygen measurements.
       low=min(test16.Oxygen)*1.001 % Calculate low set point for test16 oxygen using minimum value, plus 0.01%.
       high=max(test16.Oxygen)/1.001 % Calculate high value for test16 oxygen using maximum value minus 0.01%.
       highhigh=max(test16.Oxygen) % Find maximum value for test16 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test16.Oxygen>=lowlow & test16.Oxygen<=low))+length(find(test16.Oxygen>=high & test16.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test16.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, humidity increased and temperature decreased and pressure too high'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, humidity increased and temperature decreased and pressure too high'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test16.Oxygen>=lowlow & test16.Oxygen<=low); % Create fault log for test 16 oxygen low set point violations.
         oxygen=test16.Oxygen(index); % Attain data from test16.
         time=test16.Time(index); % Record set point violations.
         
         index2=find(test16.Oxygen>=high & test16.Oxygen<=highhigh); % Create fault log for test 16 oxygen high set point violations.
         oxygen2=test16.Oxygen(index2); % Attain data from test16.
         time2=test16.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test16OXYGENlog.mat',"data","time","errormessage"); % Table details
     

       case "Test 17 vacuum pump on, no radioactive or oxidising material present, humidity decreased (Oxygen)"
                  
       test17 = readtable("test17.xlsx") % Import data from excel spreadheet for test17.
       time17=datetime(xlsread('test17.xlsx','A2:A1002'),'convertfrom','excel');
       time17.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d17=datetime('26-Aug-2022') % Date of test.
       d17.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time17=d17 + timeofday(time17) % Date and time variabe.
       
       plot(app.UIAxes,[time17],[test17.Oxygen],'Color','#4DBEEE','LineWidth',0.8,'DisplayName','Test 17 vacuum pump on, no radioactive or oxidising material present, humidity decreased (Oxygen %)'); % Plot oxygen for test17. 
         
       lowlow=min(test17.Oxygen) % Find minimum value for test17 oxygen measurements.
       low=min(test17.Oxygen)*1.001 % Calculate low set point for test17 oxygen using minimum value, plus 0.01%.
       high=max(test17.Oxygen)/1.001 % Calculate high value for test17 oxygen using maximum value minus 0.01%.
       highhigh=max(test17.Oxygen) % Find maximum value for test17 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test17.Oxygen>=lowlow & test17.Oxygen<=low))+length(find(test17.Oxygen>=high & test17.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test17.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, humidity decreased and pressure too low'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, humidity decreased and pressure too low'; % If number of set point violations is greater than 50% pressure instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test17.Oxygen>=lowlow & test17.Oxygen<=low); % Create fault log for test 17 oxygen low set point violations.
         oxygen=test17.Oxygen(index); % Attain data from test17.
         time=test17.Time(index); % Record set point violations.
         
         index2=find(test17.Oxygen>=high & test17.Oxygen<=highhigh); % Create fault log for test 17 oxygen high set point violations.
         oxygen2=test17.Oxygen(index2); % Attain data from test17.
         time2=test17.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test17OXYGENlog.mat',"data","time","errormessage"); % Table details


       case "Test 18 vacuum pump off, no radioactive or oxidising material present, humidity decreased (Oxygen)"
                  
       test18 = readtable("test18.xlsx") % Import data from excel spreadheet for test18.
       time18=datetime(xlsread('test18.xlsx','A2:A1002'),'convertfrom','excel');
       time18.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d18=datetime('27-Aug-2022') % Date of test.
       d18.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time18=d18 + timeofday(time18) % Date and time variabe.
       
       plot(app.UIAxes,[time18],[test18.Oxygen],'Color','#A2142F','LineWidth',0.8,'DisplayName','Test 18 vacuum pump off, no radioactive or oxidising material present, humidity decreased (Oxygen %)'); % Plot oxygen for test18. 
        
       lowlow=min(test18.Oxygen) % Find minimum value for test18 oxygen measurements.
       low=min(test18.Oxygen)*1.001 % Calculate low set point for test18 oxygen using minimum value, plus 0.01%.
       high=max(test18.Oxygen)/1.001 % Calculate high value for test18 oxygen using maximum value minus 0.01%.
       highhigh=max(test18.Oxygen) % Find maximum value for test18 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test18.Oxygen>=lowlow & test18.Oxygen<=low))+length(find(test18.Oxygen>=high & test18.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test18.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, humidity decreased and pressure too high'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, humidity decreased and pressure too high'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test18.Oxygen>=lowlow & test18.Oxygen<=low); % Create fault log for test 18 oxygen low set point violations.
         oxygen=test18.Oxygen(index); % Attain data from test18.
         time=test18.Time(index); % Record set point violations.
         
         index2=find(test18.Oxygen>=high & test18.Oxygen<=highhigh); % Create fault log for test 18 oxygen high set point violations.
         oxygen2=test18.Oxygen(index2); % Attain data from test18.
         time2=test18.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test18OXYGENlog.mat',"data","time","errormessage"); % Table details

         
       case "Test 19 vacuum pump on, no radioactive or oxidising material present, humidity decreased and temperature increased (Oxygen)"
                  
       test19 = readtable("test19.xlsx") % Import data from excel spreadheet for test19.
       time19=datetime(xlsread('test19.xlsx','A2:A1002'),'convertfrom','excel');
       time19.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d19=datetime('28-Aug-2022') % Date of test.
       d19.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time19=d19 + timeofday(time19) % Date and time variabe.
       
       plot(app.UIAxes,[time19],[test19.Oxygen],'Color','r','LineWidth',0.8,'DisplayName','Test 19 vacuum pump on, no radioactive or oxidising material present, humidity decreased and temperature increased (Oxygen %)'); % Plot oxygen for test19. 
         
       lowlow=min(test19.Oxygen) % Find minimum value for test19 oxygen measurements.
       low=min(test19.Oxygen)*1.001 % Calculate low set point for test19 oxygen using minimum value, plus 0.01%.
       high=max(test19.Oxygen)/1.001 % Calculate high value for test19 oxygen using maximum value minus 0.01%.
       highhigh=max(test19.Oxygen) % Find maximum value for test19 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test19.Oxygen>=lowlow & test19.Oxygen<=low))+length(find(test19.Oxygen>=high & test19.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test19.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, humidity decreased, temperature increased and pressure too low'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, humidity decreased, temperature increased and pressure too low'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test19.Oxygen>=lowlow & test19.Oxygen<=low); % Create fault log for test 19 oxygen low set point violations.
         oxygen=test19.Oxygen(index); % Attain data from test19.
         time=test19.Time(index); % Record set point violations.
         
         index2=find(test19.Oxygen>=high & test19.Oxygen<=highhigh); % Create fault log for test 19 oxygen high set point violations.
         oxygen2=test19.Oxygen(index2); % Attain data from test19.
         time2=test19.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test19OXYGENlog.mat',"data","time","errormessage"); % Table details

         
       case "Test 20 vacuum pump off, no radioactive or acetoone sources present, humidity decreased and temperature increased (Oxygen)"
                  
       test20 = readtable("test20.xlsx") % Import data from excel spreadheet for test20.
       time20=datetime(xlsread('test20.xlsx','A2:A1002'),'convertfrom','excel');
       time20.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d20=datetime('29-Aug-2022') % Date of test.
       d20.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time20=d20 + timeofday(time20) % Date and time variabe.
        
       plot(app.UIAxes,[time20],[test20.Oxygen],'Color','g','LineWidth',0.8,'DisplayName','Test 20 vacuum pump off, no radioactive or acetoone sources present, humidity decreased and temperature increased (Oxygen %)'); % Plot oxygen for test20. 
       
       lowlow=min(test20.Oxygen) % Find minimum value for test20 oxygen measurements.
       low=min(test20.Oxygen)*1.001 % Calculate low set point for test20 oxygen using minimum value, plus 0.01%.
       high=max(test20.Oxygen)/1.001 % Calculate high value for test20 oxygen using maximum value minus 0.01%.
       highhigh=max(test20.Oxygen) % Find maximum value for test20 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test20.Oxygen>=lowlow & test20.Oxygen<=low))+length(find(test20.Oxygen>=high & test20.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test20.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, humidity decreased, temperature increased and pressure too high'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, humidity decreased, temperature increased and pressure too high'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test20.Oxygen>=lowlow & test20.Oxygen<=low); % Create fault log for test 20 oxygen low set point violations.
         oxygen=test20.Oxygen(index); % Attain data from test20.
         time=test20.Time(index); % Record set point violations.
         
         index2=find(test20.Oxygen>=high & test20.Oxygen<=highhigh); % Create fault log for test 20 oxygen high set point violations.
         oxygen2=test20.Oxygen(index2); % Attain data from test20.
         time2=test20.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test20OXYGENlog.mat',"data","time","errormessage"); % Table details


       case "Test 21 vacuum pump on, no radioactive or oxidising material present, humidity and temperature decreased (Oxygen)"
                  
       test21 = readtable("test21.xlsx") % Import data from excel spreadheet for test21.
       time21=datetime(xlsread('test21.xlsx','A2:A1002'),'convertfrom','excel');
       time21.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d21=datetime('30-Aug-2022') % Date of test.
       d21.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time21=d21 + timeofday(time21) % Date and time variabe.
       
       plot(app.UIAxes,[time21],[test21.Oxygen],'Color','m','LineWidth',0.8,'DisplayName','Test 21 vacuum pump on, no radioactive or oxidising material present, humidity and temperature decreased (Oxygen %)'); % Plot oxygen for test21. 

       lowlow=min(test21.Oxygen) % Find minimum value for test21 oxygen measurements.
       low=min(test21.Oxygen)*1.001 % Calculate low set point for test21 oxygen using minimum value, plus 0.01%.
       high=max(test21.Oxygen)/1.001 % Calculate high value for test21 oxygen using maximum value minus 0.01%.
       highhigh=max(test21.Oxygen) % Find maximum value for test21 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test21.Oxygen>=lowlow & test21.Oxygen<=low))+length(find(test21.Oxygen>=high & test21.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test21.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, humidity and temperature decreased and pressure too low'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, humidity and temperature decreased and pressure too low'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test21.Oxygen>=lowlow & test21.Oxygen<=low); % Create fault log for test 21 oxygen low set point violations.
         oxygen=test21.Oxygen(index); % Attain data from test21.
         time=test21.Time(index); % Record set point violations.
         
         index2=find(test21.Oxygen>=high & test21.Oxygen<=highhigh); % Create fault log for test 21 oxygen high set point violations.
         oxygen2=test21.Oxygen(index2); % Attain data from test21.
         time2=test21.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test21OXYGENlog.mat',"data","time","errormessage"); % Table details


       case "Test 22 vacuum pump off, no radioactive or oxidising material present, humidity and temperature decreased (Oxygen)"
                  
       test22 = readtable("test22.xlsx") % Import data from excel spreadheet for test22.
       time22=datetime(xlsread('test22.xlsx','A2:A1002'),'convertfrom','excel');
       time22.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d22=datetime('31-Aug-2022') % Date of test.
       d22.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time22=d22 + timeofday(time22) % Date and time variabe.
       
       plot(app.UIAxes,[time22],[test22.Oxygen],'Color','k','LineWidth',0.8,'DisplayName','Test 22 vacuum pump off, no radioactive or oxidising material present, humidity and temperature decreased (Oxygen %)'); % Plot oxygen for test22. 
        
       lowlow=min(test22.Oxygen) % Find minimum value for test22 oxygen measurements.
       low=min(test22.Oxygen)*1.001 % Calculate low set point for test22 oxygen using minimum value, plus 0.01%.
       high=max(test22.Oxygen)/1.001 % Calculate high value for test22 oxygen using maximum value minus 0.01%.
       highhigh=max(test22.Oxygen) % Find maximum value for test22 oxygen measurements.
       s=app.NumberofSetPointVialationsEditField_6.Value; % Take previous field value. 
       
       app.NumberofSetPointVialationsEditField_6.Value=length(find(test22.Oxygen>=lowlow & test22.Oxygen<=low))+length(find(test22.Oxygen>=high & test22.Oxygen<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_6.Value=app.NumberofSetPointVialationsEditField_6.Value+s; % Add previous test violations too this set point violations.   
       app.SetPointVialationPercentageEditField_7.Value=app.NumberofSetPointVialationsEditField_6.Value/length(test22.Oxygen)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_7.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.OxygenSystemStatusMessageLabel.Text='Glovebox Oxygen Healthy'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_7.Value>20 && app.SetPointVialationPercentageEditField_7.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_7.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% oxygen instrument needs maintenance, schedule maintenance and display value yellow.
             app.OxygenSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox oxygen concentration not within design limits, humidity and temperature decreased and pressure too high'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_7.BackgroundColor='r'; % Greater than 50% set point.
             app.OxygenSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox oxygen concentration not within design limits, humidity and temperature decreased and pressure too high'; % If number of set point violations is greater than 50% oxygen instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.OxygenSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test22.Oxygen>=lowlow & test22.Oxygen<=low); % Create fault log for test 22 oxygen low set point violations.
         oxygen=test22.Oxygen(index); % Attain data from test22.
         time=test22.Time(index); % Record set point violations.
         
         index2=find(test22.Oxygen>=high & test22.Oxygen<=highhigh); % Create fault log for test 22 oxygen high set point violations.
         oxygen2=test22.Oxygen(index2); % Attain data from test22.
         time2=test22.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     oxygen(L+i,1)=oxygen2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=oxygen; % Column 2 oxygen.
         errormessage=app.OxygenSystemStatusMessageLabel.Text % Column 3 label.
         save('test22OXYGENlog.mat',"data","time","errormessage"); % Table details

         
       case "blank"
         
       end
       
             % Radiation
       switch app.RadiationDropDown.Value

       case "Test 1 vacuum pump on, no radioactive or oxidising material present (Radiation)"

       test1 = readtable("test1.xlsx") % Import data from excel spreadsheet for test1. 
       time1=datetime(xlsread('test1.xlsx','A2:A1002'),'convertfrom','excel');
       time1.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d1=datetime('10-Aug-2022') % Date of test.
       d1.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time1=d1 + timeofday(time1) % Date and time variabe.
       
       plot(app.UIAxes,[time1],[test1.Radiation],'Color','#0072BD','LineWidth',0.8,'DisplayName','Test 1 vacuum pump on, no radioactive or oxidising material present (Radiation mSV)'); % Plot radiation for test1.
       
       lowlow=min(test1.Radiation) % Find minimum value for test1 radiation measurements.
       low=min(test1.Radiation)*1.001 % Calculate low set point for test1 radiation using minimum value, plus 0.01%.
       high=max(test1.Radiation)/1.001 % Calculate high value for test1 radiation using maximum value minus 0.01%.
       highhigh=max(test1.Radiation) % Find maximum value for test1 radiation measurements.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test1.Radiation>=lowlow & test1.Radiation<=low))+length(find(test1.Radiation>=high & test1.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
         
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test1.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
       
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
         end
      

         index=find(test1.Radiation>=lowlow & test1.Radiation<=low); % Create fault log for test 1 radiation low set point violations.
         radiation=test1.Radiation(index); % Attain data from test1.
         time=test1.Time(index); % Record set point violations.
         
         index2=find(test1.Radiation>=high & test1.Radiation<=highhigh); % Create fault log for test 1 radiation high set point violations.
         radiation2=test1.Radiation(index2); % Attain data from test1.
         time2=test1.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test1RADIATIONlog.mat',"data","time","errormessage"); % Table details

         
       case "Test 2 vacuum pump off, no radioactive or oxidising material present (Radiation)"  
             
       test2 = readtable("test2.xlsx") % Import data from excel spreadsheet for test2.
       time2=datetime(xlsread('test2.xlsx','A2:A1002'),'convertfrom','excel');
       time2.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d2=datetime('11-Aug-2022') % Date of test.
       d2.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time2=d2 + timeofday(time2) % Date and time variabe.
       
       plot(app.UIAxes,[time2],[test2.Radiation],'Color','#D95319','LineWidth',0.8,'DisplayName','Test 2 vacuum pump off, no radioactive or oxidising material present (Radiation mSV)'); % Plot radiation for test2.

       lowlow=min(test2.Radiation) % Find minimum value for test2 radiation measurements.
       low=min(test2.Radiation)*1.001 % Calculate low set point for test2 radiation using minimum value, plus 0.01%.
       high=max(test2.Radiation)/1.001 % Calculate high value for test2 radiation using maximum value minus 0.01%.
       highhigh=max(test2.Radiation) % Find maximum value for test2 radiation measurements.
       s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test2.Radiation>=lowlow & test2.Radiation<=low))+length(find(test2.Radiation>=high & test2.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test2.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
         end

         
         index=find(test2.Radiation>=lowlow & test2.Radiation<=low); % Create fault log for test 2 radiation low set point violations.
         radiation=test2.Radiation(index); % Attain data from test2.
         time=test2.Time(index); % Record set point violations.
         
         index2=find(test2.Radiation>=high & test2.Radiation<=highhigh); % Create fault log for test 2 radiation high set point violations.
         radiation2=test2.Radiation(index2); % Attain data from test2.
         time2=test2.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test2RADIATIONlog.mat',"data","time","errormessage"); % Table details

         
       case "Test 3 185kBq radioactive source present and oxidising material not present (Radiation)"
             
       test3 = readtable("test3.xlsx") % Import data from excel spreadheet for test3.
       time3=datetime(xlsread('test3.xlsx','A2:A1002'),'convertfrom','excel');
       time3.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d3=datetime('12-Aug-2022') % Date of test.
       d3.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time3=d3 + timeofday(time3) % Date and time variabe.
       
       plot(app.UIAxes,[time3],[test3.Radiation],'Color','#EDB120','LineWidth',0.8,'DisplayName','Test 3 185kBq radioactive source present and oxidising material not present (Radiation mSV)'); % Plot radiation for test3.

       lowlow=min(test3.Radiation) % Find minimum value for test3 radiation measurements.
       low=min(test3.Radiation)*1.001 % Calculate low set point for test3 radiation using minimum value, plus 0.01%.
       high=max(test3.Radiation)/1.001 % Calculate high value for test3 radiation using maximum value minus 0.01%.
       highhigh=max(test3.Radiation) % Find maximum value for test3 radiation measurements.
       s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test3.Radiation>=lowlow & test3.Radiation<=low))+length(find(test3.Radiation>=high & test3.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test3.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% radiation instrument needs maintenance, schedule maintenance and display value yellow.
             app.RadiationSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox radiation not within design limits, radioactive source present'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='r'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox radiation not within design limits, radioactive source present'; % If number of set point violations is greater than 50% radiation instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.RadiationSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end

         
         index=find(test3.Radiation>=lowlow & test3.Radiation<=low); % Create fault log for test 3 radiation low set point violations.
         radiation=test3.Radiation(index); % Attain data from test3.
         time=test3.Time(index); % Record set point violations.
         
         index2=find(test3.Radiation>=high & test3.Radiation<=highhigh); % Create fault log for test 3 radiation high set point violations.
         radiation2=test3.Radiation(index2); % Attain data from test3.
         time2=test3.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test3RADIATIONlog.mat',"data","time","errormessage"); % Table details

         
       case "Test 4 40kBq radioactive source present and oxidising material not present (Radiation)"
           
       test4 = readtable("test4.xlsx") % Import data from excel spreadheet for test4.
       time4=datetime(xlsread('test4.xlsx','A2:A1002'),'convertfrom','excel');
       time4.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d4=datetime('13-Aug-2022') % Date of test.
       d4.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time4=d4 + timeofday(time4) % Date and time variabe.
       
       plot(app.UIAxes,[time4],[test4.Radiation],'Color','#7E2F8E','LineWidth',0.8,'DisplayName','Test 4 40kBq radioactive source present and oxidising material not present (Radiation mSV)'); % Plot radiation for test4.

       lowlow=min(test4.Radiation) % Find minimum value for test4 radiation measurements.
       low=min(test4.Radiation)*1.001 % Calculate low set point for test4 radiation using minimum value, plus 0.01%.
       high=max(test4.Radiation)/1.001 % Calculate high value for test4 radiation using maximum value minus 0.01%.
       highhigh=max(test4.Radiation) % Find maximum value for test4 radiation measurements.
       s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test4.Radiation>=lowlow & test4.Radiation<=low))+length(find(test4.Radiation>=high & test4.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test4.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
         if app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='y'; % If the number of set point violations is greater than 20% but less than 50% radiation instrument needs maintenance, schedule maintenance and display value yellow.
             app.RadiationSystemStatusMessageLabel.Text='Schedule Maintenace - Glovebox radiation not within design limits, radioactive source present'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='y'; % Define colour as yellow.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='r'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='Stop Glovebox Operations Maintenance Required - Glovebox radiation not within design limits, radioactive source present'; % If number of set point violations is greater than 50% radiation instrument needs maintained immediately, Stop Glovebox operations and display value red.
             app.RadiationSystemStatusMessageLabel.FontColor='r'; % Define colour as red. 
            
         end
         
         index=find(test4.Radiation>=lowlow & test4.Radiation<=low); % Create fault log for test 4 radiation low set point violations.
         radiation=test4.Radiation(index); % Attain data from test4.
         time=test4.Time(index); % Record set point violations.
         
         index2=find(test4.Radiation>=high & test4.Radiation<=highhigh); % Create fault log for test 4 radiation high set point violations.
         radiation2=test4.Radiation(index2); % Attain data from test4.
         time2=test4.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test4RADIATIONlog.mat',"data","time","errormessage"); % Table details

         
       case "Test 5 0.5M Sodium Hydroxide present and radioactive source not present (Radiation)"
             
       test5 = readtable("test5.xlsx") % Import data from excel spreadheet for test5.
       time5=datetime(xlsread('test5.xlsx','A2:A1002'),'convertfrom','excel');
       time5.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d5=datetime('14-Aug-2022') % Date of test.
       d5.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time5=d5 + timeofday(time5) % Date and time variabe.
       
       plot(app.UIAxes,[time5],[test5.Radiation],'Color','#77AC30','LineWidth',0.8,'DisplayName','Test 5 0.5M Sodium Hydroxide present and radioactive source not present (Radiation mSV)'); % Plot radiation for test5.

       lowlow=min(test5.Radiation) % Find minimum value for test5 radiation measurements.
       low=min(test5.Radiation)*1.001 % Calculate low set point for test5 radiation using minimum value, plus 0.01%.
       high=max(test5.Radiation)/1.001 % Calculate high value for test5 radiation using maximum value minus 0.01%.
       highhigh=max(test5.Radiation) % Find maximum value for test5 radiation measurements.
       s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test5.Radiation>=lowlow & test5.Radiation<=low))+length(find(test5.Radiation>=high & test5.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test5.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         
         index=find(test5.Radiation>=lowlow & test5.Radiation<=low); % Create fault log for test 5 radiation low set point violations.
         radiation=test5.Radiation(index); % Attain data from test5.
         time=test5.Time(index); % Record set point violations.
         
         index2=find(test5.Radiation>=high & test5.Radiation<=highhigh); % Create fault log for test 5 radiation high set point violations.
         radiation2=test5.Radiation(index2); % Attain data from test5.
         time2=test5.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test5RADIATIONlog.mat',"data","time","errormessage"); % Table details

         
       case "Test 6 0.01M Sodium Hydroxide present and radioactive source not present (Radiation)"
             
       test6 = readtable("test6.xlsx") % Import data from excel spreadheet for test6.
       time6=datetime(xlsread('test6.xlsx','A2:A1002'),'convertfrom','excel');
       time6.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d6=datetime('15-Aug-2022') % Date of test.
       d6.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time6=d6 + timeofday(time6) % Date and time variabe.
       
       plot(app.UIAxes,[time6],[test6.Radiation],'Color','#4DBEEE','LineWidth',0.8,'DisplayName','Test 6 0.01M Sodium Hydroxide present and radioactive source not present (Radiation mSV)'); % Plot radiation for test6.
         
       lowlow=min(test6.Radiation) % Find minimum value for test6 radiation measurements.
       low=min(test6.Radiation)*1.001 % Calculate low set point for test6 radiation using minimum value, plus 0.01%.
       high=max(test6.Radiation)/1.001 % Calculate high value for test6 radiation using maximum value minus 0.01%.
       highhigh=max(test6.Radiation) % Find maximum value for test6 radiation measurements.
       s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test6.Radiation>=lowlow & test6.Radiation<=low))+length(find(test6.Radiation>=high & test6.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test6.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         
         index=find(test6.Radiation>=lowlow & test6.Radiation<=low); % Create fault log for test 6 radiation low set point violations.
         radiation=test6.Radiation(index); % Attain data from test6.
         time=test6.Time(index); % Record set point violations.
         
         index2=find(test6.Radiation>=high & test6.Radiation<=highhigh); % Create fault log for test 6 radiation high set point violations.
         radiation2=test6.Radiation(index2); % Attain data from test6.
         time2=test6.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test6RADIATIONlog.mat',"data","time","errormessage"); % Table details

         
       case "Test 7 vacuum pump on, no radioactive or acetoone source present, temperature increased (Radiation)"
             
       test7 = readtable("test7.xlsx") % Import data from excel spreadheet for test7.
       time7=datetime(xlsread('test7.xlsx','A2:A1002'),'convertfrom','excel');
       time7.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d7=datetime('16-Aug-2022') % Date of test.
       d7.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time7=d7 + timeofday(time7) % Date and time variabe.
       
       plot(app.UIAxes,[time7],[test7.Radiation],'Color','#A2142F','LineWidth',0.8,'DisplayName','Test 7 vacuum pump on, no radioactive or acetoone source present, temperature increased (Radiation mSV)'); % Plot radiation for test7.

       lowlow=min(test7.Radiation) % Find minimum value for test7 radiation measurements.
       low=min(test7.Radiation)*1.001 % Calculate low set point for test7 radiation using minimum value, plus 0.01%.
       high=max(test7.Radiation)/1.001 % Calculate high value for test7 radiation using maximum value minus 0.01%.
       highhigh=max(test7.Radiation) % Find maximum value for test7 radiation measurements.
       s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test7.Radiation>=lowlow & test7.Radiation<=low))+length(find(test7.Radiation>=high & test7.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test7.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         
         index=find(test7.Radiation>=lowlow & test7.Radiation<=low); % Create fault log for test 7 radiation low set point violations.
         radiation=test7.Radiation(index); % Attain data from test7.
         time=test7.Time(index); % Record set point violations.
         
         index2=find(test7.Radiation>=high & test7.Radiation<=highhigh); % Create fault log for test 7 radiation high set point violations.
         radiation2=test7.Radiation(index2); % Attain data from test7.
         time2=test7.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test7RADIATIONlog.mat',"data","time","errormessage"); % Table details

         
       case "Test 8 vacuum pump off, no radioactive or oxidising material present, temperature increased (Radiation)" 
             
       test8 = readtable("test8.xlsx") % Import data from excel spreadheet for test8.
       time8=datetime(xlsread('test8.xlsx','A2:A1002'),'convertfrom','excel');
       time8.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d8=datetime('17-Aug-2022') % Date of test.
       d8.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time8=d8 + timeofday(time8) % Date and time variabe.
       
       plot(app.UIAxes,[time8],[test8.Radiation],'Color','r','LineWidth',0.8,'DisplayName','Test 8 vacuum pump off, no radioactive or oxidising material present, temperature increased (Radiation mSV)'); % Plot radiation for test8.
       
       lowlow=min(test8.Radiation) % Find minimum value for test8 radiation measurements.
       low=min(test8.Radiation)*1.001 % Calculate low set point for test8 radiation using minimum value, plus 0.01%.
       high=max(test8.Radiation)/1.001 % Calculate high value for test8 radiation using maximum value minus 0.01%.
       highhigh=max(test8.Radiation) % Find maximum value for test8 radiation measurements.
       s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test8.Radiation>=lowlow & test8.Radiation<=low))+length(find(test8.Radiation>=high & test8.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test8.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
        
       if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
         end     

         
         index=find(test8.Radiation>=lowlow & test8.Radiation<=low); % Create fault log for test 8 radiation low set point violations.
         radiation=test8.Radiation(index); % Attain data from test8.
         time=test8.Time(index); % Record set point violations.
         
         index2=find(test8.Radiation>=high & test8.Radiation<=highhigh); % Create fault log for test 8 radiation high set point violations.
         radiation2=test8.Radiation(index2); % Attain data from test8.
         time2=test8.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test8RADIATIONlog.mat',"data","time","errormessage"); % Table details

         
       case "Test 9 vacuum pump on, no radioactive or oxidising material present, temperature decreased (Radiation)"
           
       test9 = readtable("test9.xlsx") % Import data from excel spreadheet for test9.
       time9=datetime(xlsread('test9.xlsx','A2:A1002'),'convertfrom','excel');
       time9.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
       d9=datetime('18-Aug-2022') % Date of test.
       d9.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
       time9=d9 + timeofday(time9) % Date and time variabe.
       
       plot(app.UIAxes,[time9],[test9.Radiation],'Color','g','LineWidth',0.8,'DisplayName','Test 9 vacuum pump on, no radioactive or oxidising material present, temperature decreased (Radiation mSV)'); % Plot radiation for test9.
       
       lowlow=min(test9.Radiation) % Find minimum value for test9 radiation measurements.
       low=min(test9.Radiation)*1.001 % Calculate low set point for test9 radiation using minimum value, plus 0.01%.
       high=max(test9.Radiation)/1.001 % Calculate high value for test9 radiation using maximum value minus 0.01%.
       highhigh=max(test9.Radiation) % Find maximum value for test9 radiation measurements.
       s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test9.Radiation>=lowlow & test9.Radiation<=low))+length(find(test9.Radiation>=high & test9.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test9.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         
         index=find(test9.Radiation>=lowlow & test9.Radiation<=low); % Create fault log for test 9 radiation low set point violations.
         radiation=test9.Radiation(index); % Attain data from test9.
         time=test9.Time(index); % Record set point violations.
         
         index2=find(test9.Radiation>=high & test9.Radiation<=highhigh); % Create fault log for test 9 radiation high set point violations.
         radiation2=test9.Radiation(index2); % Attain data from test9.
         time2=test9.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test9RADIATIONlog.mat',"data","time","errormessage"); % Table details


      case "Test 10 vacuum pump off, no radioactive or oxidising material present, temperature decreased (Radiation)"
           
      test10 = readtable("test10.xlsx") % Import data from excel spreadheet for test10.
      time10=datetime(xlsread('test10.xlsx','A2:A1002'),'convertfrom','excel');
      time10.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
      d10=datetime('19-Aug-2022') % Date of test.
      d10.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
      time10=d10 + timeofday(time10) % Date and time variabe.
       
      plot(app.UIAxes,[time10],[test10.Radiation],'Color','b','LineWidth',0.8,'DisplayName','Test 10 vacuum pump off, no radioactive or oxidising material present, temperature decreased (Radiation mSV)'); % Plot radiation for test10.

      lowlow=min(test10.Radiation) % Find minimum value for test10 radiation measurements.
      low=min(test10.Radiation)*1.001 % Calculate low set point for test10 radiation using minimum value, plus 0.01%.
      high=max(test10.Radiation)/1.001 % Calculate high value for test10 radiation using maximum value minus 0.01%.
      highhigh=max(test10.Radiation) % Find maximum value for test10 radiation  measurements.
      s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test10.Radiation>=lowlow & test10.Radiation<=low))+length(find(test10.Radiation>=high & test10.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test10.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         
         index=find(test10.Radiation>=lowlow & test10.Radiation<=low); % Create fault log for test 10 radiation low set point violations.
         radiation=test10.Radiation(index); % Attain data from test10.
         time=test10.Time(index); % Record set point violations.
         
         index2=find(test10.Radiation>=high & test10.Radiation<=highhigh); % Create fault log for test 10 radiation high set point violations.
         radiation2=test10.Radiation(index2); % Attain data from test10.
         time2=test10.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test10RADIATIONlog.mat',"data","time","errormessage"); % Table details

         
      case "Test 11 vacuum pump on, no radioactive or oxidising material present, humidity increased (Radiation)"
         
      test11 = readtable("test11.xlsx") % Import data from excel spreadheet for test11.
      time11=datetime(xlsread('test11.xlsx','A2:A1002'),'convertfrom','excel');
      time11.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
      d11=datetime('20-Aug-2022') % Date of test.
      d11.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
      time11=d11 + timeofday(time11) % Date and time variabe.
      
      plot(app.UIAxes,[time11],[test11.Radiation],'Color','m','LineWidth',0.8,'DisplayName','Test 11 vacuum pump on, no radioactive or oxidising material present, humidity increased (Radiation mSV)'); % Plot radiation for test11.   
       
      lowlow=min(test11.Radiation) % Find minimum value for test11 radiation measurements.
      low=min(test11.Radiation)*1.001 % Calculate low set point for test11 radiation using minimum value, plus 0.01%.
      high=max(test11.Radiation)/1.001 % Calculate high value for test11 radiation using maximum value minus 0.01%.
      highhigh=max(test11.Radiation) % Find maximum value for test11 radiation measurements.
      s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test11.Radiation>=lowlow & test11.Radiation<=low))+length(find(test11.Radiation>=high & test11.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test11.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         
         index=find(test11.Radiation>=lowlow & test11.Radiation<=low); % Create fault log for test 11 radiation low set point violations.
         radiation=test11.Radiation(index); % Attain data from test11.
         time=test11.Time(index); % Record set point violations.
         
         index2=find(test11.Radiation>=high & test11.Radiation<=highhigh); % Create fault log for test 11 radiation high set point violations.
         radiation2=test11.Radiation(index2); % Attain data from test11.
         time2=test11.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test11RADIATIONlog.mat',"data","time","errormessage"); % Table details


      case "Test 12 vacuum pump off, no radioactive or oxidising material present, humidity increased (Radiation)"
         
      test12 = readtable("test12.xlsx") % Import data from excel spreadheet for test12.
      time12=datetime(xlsread('test12.xlsx','A2:A1002'),'convertfrom','excel');
      time12.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
      d12=datetime('21-Aug-2022') % Date of test.
      d12.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
      time12=d12 + timeofday(time12) % Date and time variabe.
       
      plot(app.UIAxes,[time12],[test12.Radiation],'Color','k','LineWidth',0.8,'DisplayName','Test 12 vacuum pump off, no radioactive or oxidising material present, humidity increased (Radiation mSV)'); % Plot radiation for test12. 
      
      lowlow=min(test12.Radiation) % Find minimum value for test12 radiation measurements.
      low=min(test12.Radiation)*1.001 % Calculate low set point for test12 radiation using minimum value, plus 0.01%.
      high=max(test12.Radiation)/1.001 % Calculate high value for test12 radiation using maximum value minus 0.01%.
      highhigh=max(test12.Radiation) % Find maximum value for test12 radiation measurements.
      s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test12.Radiation>=lowlow & test12.Radiation<=low))+length(find(test12.Radiation>=high & test12.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test12.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         
         index=find(test12.Radiation>=lowlow & test12.Radiation<=low); % Create fault log for test 12 radiation low set point violations.
         radiation=test12.Radiation(index); % Attain data from test12.
         time=test12.Time(index); % Record set point violations.
         
         index2=find(test12.Radiation>=high & test12.Radiation<=highhigh); % Create fault log for test 12 radiation high set point violations.
         radiation2=test12.Radiation(index2); % Attain data from test12.
         time2=test12.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test12RADIATIONlog.mat',"data","time","errormessage"); % Table details

         
      case "Test 13 vacuum pump on, no radioactive or oxidising material present, humidity and temperature increased (Radiation)"
         
      test13 = readtable("test13.xlsx") % Import data from excel spreadheet for test13.
      time13=datetime(xlsread('test13.xlsx','A2:A1002'),'convertfrom','excel');
      time13.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
      d13=datetime('22-Aug-2022') % Date of test.
      d13.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
      time13=d13 + timeofday(time13) % Date and time variabe.
       
      plot(app.UIAxes,[time13],[test13.Radiation],'Color','#0072BD','LineWidth',0.8,'DisplayName','Test 13 vacuum pump on, no radioactive or oxidising material present, humidity and temperature increased (Radiation mSV)'); % Plot radiation for test13. 
       
      lowlow=min(test13.Radiation) % Find minimum value for test13 radiation measurements.
      low=min(test13.Radiation)*1.001 % Calculate low set point for test13 radiation using minimum value, plus 0.01%.
      high=max(test13.Radiation)/1.001 % Calculate high value for test13 radiation using maximum value minus 0.01%.
      highhigh=max(test13.Radiation) % Find maximum value for test13 radiation measurements.
      s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test13.Radiation>=lowlow & test13.Radiation<=low))+length(find(test13.Radiation>=high & test13.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test13.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         
         index=find(test13.Radiation>=lowlow & test13.Radiation<=low); % Create fault log for test 13 radiation low set point violations.
         radiation=test13.Radiation(index); % Attain data from test13.
         time=test13.Time(index); % Record set point violations.
         
         index2=find(test13.Radiation>=high & test13.Radiation<=highhigh); % Create fault log for test 13 radiation high set point violations.
         radiation2=test13.Radiation(index2); % Attain data from test13.
         time2=test13.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test13RADIATIONlog.mat',"data","time","errormessage"); % Table details

        
      case "Test 14 vacuum pump off, no radioactive or oxidising material present, humidity and temperature increased (Radiation)"
                  
      test14 = readtable("test14.xlsx") % Import data from excel spreadheet for test14.
      time14=datetime(xlsread('test14.xlsx','A2:A1002'),'convertfrom','excel');
      time14.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
      d14=datetime('23-Aug-2022') % Date of test.
      d14.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
      time14=d14 + timeofday(time14) % Date and time variabe.
      
      plot(app.UIAxes,[time14],[test14.Radiation],'Color','#D95319','LineWidth',0.8,'DisplayName','Test 14 vacuum pump off, no radioactive or oxidising material present, humidity and temperature increased (Radiation mSV)'); % Plot radiation for test14. 
      
      lowlow=min(test14.Radiation) % Find minimum value for test14 radiation measurements.
      low=min(test14.Radiation)*1.001 % Calculate low set point for test14 radiation using minimum value, plus 0.01%.
      high=max(test14.Radiation)/1.001 % Calculate high value for test14 radiation using maximum value minus 0.01%.
      highhigh=max(test14.Radiation) % Find maximum value for test14 radiation measurements.
      s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test14.Radiation>=lowlow & test14.Radiation<=low))+length(find(test14.Radiation>=high & test14.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test14.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         
         index=find(test14.Radiation>=lowlow & test14.Radiation<=low); % Create fault log for test 14 radiation low set point violations.
         radiation=test14.Radiation(index); % Attain data from test14.
         time=test14.Time(index); % Record set point violations.
         
         index2=find(test14.Radiation>=high & test14.Radiation<=highhigh); % Create fault log for test 14 radiation high set point violations.
         radiation2=test14.Radiation(index2); % Attain data from test14.
         time2=test14.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test14RADIATIONlog.mat',"data","time","errormessage"); % Table details

         
      case "Test 15 vacuum pump on, no radioactive or oxidising material present, humidity increased and temperature decreased (Radiation)"
                  
      test15 = readtable("test15.xlsx") % Import data from excel spreadheet for test15.
      time15=datetime(xlsread('test15.xlsx','A2:A1002'),'convertfrom','excel');
      time15.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
      d15=datetime('24-Aug-2022') % Date of test.
      d15.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
      time15=d15 + timeofday(time15) % Date and time variabe.
       
      plot(app.UIAxes,[time15],[test15.Radiation],'Color','#EDB120','LineWidth',0.8,'DisplayName','Test 15 vacuum pump on, no radioactive or oxidising material present, humidity increased and temperature decreased (Radiation mSV)'); % Plot radiation for test15. 
        
       lowlow=min(test15.Radiation) % Find minimum value for test15 radiation measurements.
       low=min(test15.Radiation)*1.001 % Calculate low set point for test15 radiation using minimum value, plus 0.01%.
       high=max(test15.Radiation)/1.001 % Calculate high value for test15 radiation using maximum value minus 0.01%.
       highhigh=max(test15.Radiation) % Find maximum value for test15 radiation measurements.
       s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test15.Radiation>=lowlow & test15.Radiation<=low))+length(find(test15.Radiation>=high & test15.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test15.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         index=find(test15.Radiation>=lowlow & test15.Radiation<=low); % Create fault log for test 15 radiation low set point violations.
         radiation=test15.Radiation(index); % Attain data from test15.
         time=test15.Time(index); % Record set point violations.
         
         index2=find(test15.Radiation>=high & test15.Radiation<=highhigh); % Create fault log for test 15 radiation high set point violations.
         radiation2=test15.Radiation(index2); % Attain data from test15.
         time2=test15.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test15RADIATIONlog.mat',"data","time","errormessage"); % Table details


      case "Test 16 vacuum pump off, no radioactive or oxidising material present, humidity increased and temperature decreased (Radiation)"
                  
      test16 = readtable("test16.xlsx") % Import data from excel spreadheet for test16.
      time16=datetime(xlsread('test16.xlsx','A2:A1002'),'convertfrom','excel');
      time16.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
      d16=datetime('25-Aug-2022') % Date of test.
      d16.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
      time16=d16 + timeofday(time16) % Date and time variabe.
       
      plot(app.UIAxes,[time16],[test16.Radiation],'Color','#7E2F8E','LineWidth',0.8,'DisplayName','Test 16 vacuum pump off, no radioactive or oxidising material present, humidity increased and temperature decreased (Radiation mSV)'); % Plot radiation for test16. 
      
      lowlow=min(test16.Radiation) % Find minimum value for test16 radiation measurements.
      low=min(test16.Radiation)*1.001 % Calculate low set point for test16 radiation using minimum value, plus 0.01%.
      high=max(test16.Radiation)/1.001 % Calculate high value for test16 radiation using maximum value minus 0.01%.
      highhigh=max(test16.Radiation) % Find maximum value for test16 radiation measurements.
      s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test16.Radiation>=lowlow & test16.Radiation<=low))+length(find(test16.Radiation>=high & test16.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test16.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         
         index=find(test16.Radiation>=lowlow & test16.Radiation<=low); % Create fault log for test 16 radiation low set point violations.
         radiation=test16.Radiation(index); % Attain data from test16.
         time=test16.Time(index); % Record set point violations.
         
         index2=find(test16.Radiation>=high & test16.Radiation<=highhigh); % Create fault log for test 16 radiation high set point violations.
         radiation2=test16.Radiation(index2); % Attain data from test16.
         time2=test16.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test16RADIATIONlog.mat',"data","time","errormessage"); % Table details

         
      case "Test 17 vacuum pump on, no radioactive or oxidising material present, humidity decreased (Radiation)"
                  
      test17 = readtable("test17.xlsx") % Import data from excel spreadheet for test17.
      time17=datetime(xlsread('test17.xlsx','A2:A1002'),'convertfrom','excel');
      time17.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
      d17=datetime('26-Aug-2022') % Date of test.
      d17.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
      time17=d17 + timeofday(time17) % Date and time variabe.
       
      plot(app.UIAxes,[time17],[test17.Radiation],'Color','#77AC30','LineWidth',0.8,'DisplayName','Test 17 vacuum pump on, no radioactive or oxidising material present, humidity decreased (Radiation mSV)'); % Plot radiation for test17. 
      
      lowlow=min(test17.Radiation) % Find minimum value for test17 radiation measurements.
      low=min(test17.Radiation)*1.001 % Calculate low set point for test17 radiation using minimum value, plus 0.01%.
      high=max(test17.Radiation)/1.001 % Calculate high value for test17 radiation using maximum value minus 0.01%.
      highhigh=max(test17.Radiation) % Find maximum value for test17 radiation measurements.
      s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test17.Radiation>=lowlow & test17.Radiation<=low))+length(find(test17.Radiation>=high & test17.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test17.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         
         index=find(test17.Radiation>=lowlow & test17.Radiation<=low); % Create fault log for test 17 radiation low set point violations.
         radiation=test17.Radiation(index); % Attain data from test17.
         time=test17.Time(index); % Record set point violations.
         
         index2=find(test17.Radiation>=high & test17.Radiation<=highhigh); % Create fault log for test 17 radiation high set point violations.
         radiation2=test17.Radiation(index2); % Attain data from test17.
         time2=test17.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test17RADIATIONlog.mat',"data","time","errormessage"); % Table details

      
      case "Test 18 vacuum pump off, no radioactive or oxidising material present, humidity decreased (Radiation)"
                  
      test18 = readtable("test18.xlsx") % Import data from excel spreadheet for test18.
      time18=datetime(xlsread('test18.xlsx','A2:A1002'),'convertfrom','excel');
      time18.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
      d18=datetime('27-Aug-2022') % Date of test.
      d18.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
      time18=d18 + timeofday(time18) % Date and time variabe.
       
      plot(app.UIAxes,[time18],[test18.Radiation],'Color','#4DBEEE','LineWidth',0.8,'DisplayName','Test 18 vacuum pump off, no radioactive or oxidising material present, humidity decreased (Radiation mSV)'); % Plot radiation for test18. 
         
      lowlow=min(test18.Radiation) % Find minimum value for test18 radiation measurements.
      low=min(test18.Radiation)*1.001 % Calculate low set point for test18 radiation using minimum value, plus 0.01%.
      high=max(test18.Radiation)/1.001 % Calculate high value for test18 radiation using maximum value minus 0.01%.
      highhigh=max(test18.Radiation) % Find maximum value for test18 radiation measurements.
      s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test18.Radiation>=lowlow & test18.Radiation<=low))+length(find(test18.Radiation>=high & test18.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test18.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         
         index=find(test18.Radiation>=lowlow & test18.Radiation<=low); % Create fault log for test 18 radiation low set point violations.
         radiation=test18.Radiation(index); % Attain data from test18.
         time=test18.Time(index); % Record set point violations.
         
         index2=find(test18.Radiation>=high & test18.Radiation<=highhigh); % Create fault log for test 18 radiation high set point violations.
         radiation2=test18.Radiation(index2); % Attain data from test18.
         time2=test18.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test18RADIATIONlog.mat',"data","time","errormessage"); % Table details

         
      case "Test 19 vacuum pump on, no radioactive or oxidising material present, humidity decreased and temperature increased (Radiation)"
                  
      test19 = readtable("test19.xlsx") % Import data from excel spreadheet for test19.
      time19=datetime(xlsread('test19.xlsx','A2:A1002'),'convertfrom','excel');
      time19.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
      d19=datetime('28-Aug-2022') % Date of test.
      d19.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
      time19=d19 + timeofday(time19) % Date and time variabe.
       
      plot(app.UIAxes,[time19],[test19.Radiation],'Color','#A2142F','LineWidth',0.8,'DisplayName','Test 19 vacuum pump on, no radioactive or oxidising material present, humidity decreased and temperature increased (Radiation mSV)'); % Plot radiation for test19. 
         
      lowlow=min(test19.Radiation) % Find minimum value for test19 radiation measurements.
      low=min(test19.Radiation)*1.001 % Calculate low set point for test19 radiation using minimum value, plus 0.01%.
      high=max(test19.Radiation)/1.001 % Calculate high value for test19 radiation using maximum value minus 0.01%.
      highhigh=max(test19.Radiation) % Find maximum value for test19 radiation measurements.
      s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test19.Radiation>=lowlow & test19.Radiation<=low))+length(find(test19.Radiation>=high & test19.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test19.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
        
         index=find(test19.Radiation>=lowlow & test19.Radiation<=low); % Create fault log for test 19 radiation low set point violations.
         radiation=test19.Radiation(index); % Attain data from test19.
         time=test19.Time(index); % Record set point violations.
         
         index2=find(test19.Radiation>=high & test19.Radiation<=highhigh); % Create fault log for test 19 radiation high set point violations.
         radiation2=test19.Radiation(index2); % Attain data from test19.
         time2=test19.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test19RADIATIONlog.mat',"data","time","errormessage"); % Table details
      

      case "Test 20 vacuum pump off, no radioactive or acetoone sources present, humidity decreased and temperature increased (Radiation)"
                  
      test20 = readtable("test20.xlsx") % Import data from excel spreadheet for test20.
      time20=datetime(xlsread('test20.xlsx','A2:A1002'),'convertfrom','excel');
      time20.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
      d20=datetime('29-Aug-2022') % Date of test.
      d20.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
      time20=d20 + timeofday(time20) % Date and time variabe.
       
      plot(app.UIAxes,[time20],[test20.Radiation],'Color','r','LineWidth',0.8,'DisplayName','Test 20 vacuum pump off, no radioactive or acetoone sources present, humidity decreased and temperature increased (Radiation mSV)'); % Plot radiation for test20. 
        
      lowlow=min(test20.Radiation) % Find minimum value for test20 radiation measurements.
      low=min(test20.Radiation)*1.001 % Calculate low set point for test20 radiation using minimum value, plus 0.01%.
      high=max(test20.Radiation)/1.001 % Calculate high value for test20 radiation using maximum value minus 0.01%.
      highhigh=max(test20.Radiation) % Find maximum value for test20 radiation measurements.
      s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test20.Radiation>=lowlow & test20.Radiation<=low))+length(find(test20.Radiation>=high & test20.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test20.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         
         index=find(test20.Radiation>=lowlow & test20.Radiation<=low); % Create fault log for test 20 radiation low set point violations.
         radiation=test20.Radiation(index); % Attain data from test20.
         time=test20.Time(index); % Record set point violations.
         
         index2=find(test20.Radiation>=high & test20.Radiation<=highhigh); % Create fault log for test 20 radiation high set point violations.
         radiation2=test20.Radiation(index2); % Attain data from test20.
         time2=test20.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test20RADIATIONlog.mat',"data","time","errormessage"); % Table details

         
      case "Test 21 vacuum pump on, no radioactive or oxidising material present, humidity and temperature decreased (Radiation)"
                  
      test21 = readtable("test21.xlsx") % Import data from excel spreadheet for test21.
      time21=datetime(xlsread('test21.xlsx','A2:A1002'),'convertfrom','excel');
      time21.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
      d21=datetime('30-Aug-2022') % Date of test.
      d21.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
      time21=d21 + timeofday(time21) % Date and time variabe.
       
      plot(app.UIAxes,[time21],[test21.Radiation],'Color','g','LineWidth',0.8,'DisplayName','Test 21 vacuum pump on, no radioactive or oxidising material present, humidity and temperature decreased (Radiation mSV)'); % Plot radiation for test21. 

      lowlow=min(test21.Radiation) % Find minimum value for test21 radiation measurements.
      low=min(test21.Radiation)*1.001 % Calculate low set point for test21 radiation using minimum value, plus 0.01%.
      high=max(test21.Radiation)/1.001 % Calculate high value for test21 radiation using maximum value minus 0.01%.
      highhigh=max(test21.Radiation) % Find maximum value for test21 radiation measurements.
      s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test21.Radiation>=lowlow & test21.Radiation<=low))+length(find(test21.Radiation>=high & test21.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test21.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         
         index=find(test21.Radiation>=lowlow & test21.Radiation<=low); % Create fault log for test 21 radiation low set point violations.
         radiation=test21.Radiation(index); % Attain data from test21.
         time=test21.Time(index); % Record set point violations.
         
         index2=find(test21.Radiation>=high & test21.Radiation<=highhigh); % Create fault log for test 21 radiation high set point violations.
         radiation2=test21.Radiation(index2); % Attain data from test21.
         time2=test21.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test21RADIATIONlog.mat',"data","time","errormessage"); % Table details

         
      case "Test 22 vacuum pump off, no radioactive or oxidising material present, humidity and temperature decreased (Radiation)"
                  
      test22 = readtable("test22.xlsx") % Import data from excel spreadheet for test22.
      time22=datetime(xlsread('test22.xlsx','A2:A1002'),'convertfrom','excel');
      time22.Format ='dd.MM.uuuu HH:mm:ss'; % Date and time layout.
      d22=datetime('31-Aug-2022') % Date of test.
      d22.Format ='dd.MM.uuuu HH:mm:ss'; % Format time and date and link toogether.
      time22=d22 + timeofday(time22) % Date and time variabe.
       
      plot(app.UIAxes,[time22],[test22.Radiation],'Color','b','LineWidth',0.8,'DisplayName','Test 22 vacuum pump off, no radioactive or oxidising material present, humidity and temperature decreased (Radiation mSV)'); % Plot radiation for test22. 

      lowlow=min(test22.Radiation) % Find minimum value for test22 radiation measurements.
      low=min(test22.Radiation)*1.001 % Calculate low set point for test22 radiation using minimum value, plus 0.01%.
      high=max(test22.Radiation)/1.001 % Calculate high value for test22 radiation using maximum value minus 0.01%.
      highhigh=max(test22.Radiation) % Find maximum value for test22 radiation measurements.
      s=app.NumberofSetPointVialationsEditField_8.Value; % Take previous field value.
       
       app.NumberofSetPointVialationsEditField_8.Value=length(find(test22.Radiation>=lowlow & test22.Radiation<=low))+length(find(test22.Radiation>=high & test22.Radiation<=highhigh)); % System too count number of set point violations for the lower and upper ranges.
       app.NumberofSetPointVialationsEditField_8.Value=app.NumberofSetPointVialationsEditField_8.Value+s; % Add previous test violations too this set point violations  
       app.SetPointVialationPercentageEditField_9.Value=app.NumberofSetPointVialationsEditField_8.Value/length(test22.Radiation)*100; % convert number of set point violations too a percentage and didplay. 
      
        if   app.SetPointVialationPercentageEditField_9.Value<=20 % 20% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % If the number of set point violations is less than 20% Glovebox is healthy and display value green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within deisgn limits'; % Display message.
             app.OxygenSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         elseif app.SetPointVialationPercentageEditField_9.Value>20 && app.SetPointVialationPercentageEditField_9.Value<=50 % greater than 20% and 50% set point.
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % greater than 20% and less than 50% system healthy display green.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - "Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green.
             
         else 
             app.SetPointVialationPercentageEditField_9.BackgroundColor='g'; % Greater than 50% set point.
             app.RadiationSystemStatusMessageLabel.Text='System Healthy - Glovebox radiation within design limits'; % Display message.
             app.RadiationSystemStatusMessageLabel.FontColor='g'; % Define colour as green. 
            
        end
         
         index=find(test22.Radiation>=lowlow & test22.Radiation<=low); % Create fault log for test 22 radiation low set point violations.
         radiation=test22.Radiation(index); % Attain data from test22.
         time=test22.Time(index); % Record set point violations.
         
         index2=find(test22.Radiation>=high & test22.Radiation<=highhigh); % Create fault log for test 22 radiation high set point violations.
         radiation2=test22.Radiation(index2); % Attain data from test22.
         time2=test22.Time(index2); % Record set point violations. 
         
  L=length(index); % List items
 for i=1 : length(index2) % Index items
     index(L+i,1)=index2(i); % Index items and start new line.
     radiation(L+i,1)=radiation2(i); % Add high set point violations.
     time(L+i,1)=time2(i); % List high set point violations.
   
 end
         data(:,1)=index; % Column 1 measurement where violation occured.
         data(:,2)=radiation; % Column 2 oxygen.
         errormessage=app.RadiationSystemStatusMessageLabel.Text % Column 3 label.
         save('test22RADIATIONlog.mat',"data","time","errormessage"); % Table details


      case "blank"
         
      end
        end
        
        %(MathWorks, 2022) [62]

        % Button pushed function: ResetButton
        function ResetButtonPushed(app, event)
            hold(app.UIAxes,'off')
        end

        % Button pushed function: HoldButton
        function HoldButtonPushed(app, event)
            hold(app.UIAxes,'on')      
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create UIFigure and hide until all components are created
            app.UIFigure = uifigure('Visible', 'off');
            app.UIFigure.Position = [100 100 1751 877];
            app.UIFigure.Name = 'MATLAB App';

            % Create HoldButton
            app.HoldButton = uibutton(app.UIFigure, 'push');
            app.HoldButton.ButtonPushedFcn = createCallbackFcn(app, @HoldButtonPushed, true);
            app.HoldButton.FontWeight = 'bold';
            app.HoldButton.Position = [265 371 61 29];
            app.HoldButton.Text = 'Hold';

            % Create Image
            app.Image = uiimage(app.UIFigure);
            app.Image.Position = [1634 815 100 100];
            app.Image.ImageSource = 'Screenshot 2022-06-30 at 20.08.36.png';

            % Create Image_2
            app.Image_2 = uiimage(app.UIFigure);
            app.Image_2.Position = [1493 815 100 100];
            app.Image_2.ImageSource = 'Screenshot 2022-06-30 at 20.10.16.png';

            % Create Image_3
            app.Image_3 = uiimage(app.UIFigure);
            app.Image_3.Position = [18 815 100 100];
            app.Image_3.ImageSource = 'Screenshot 2022-06-30 at 20.11.58.png';

            % Create GloveboxPredictiveMaintenanceSystemLabel
            app.GloveboxPredictiveMaintenanceSystemLabel = uilabel(app.UIFigure);
            app.GloveboxPredictiveMaintenanceSystemLabel.FontSize = 20;
            app.GloveboxPredictiveMaintenanceSystemLabel.FontWeight = 'bold';
            app.GloveboxPredictiveMaintenanceSystemLabel.Position = [670 840 408 27];
            app.GloveboxPredictiveMaintenanceSystemLabel.Text = 'Glovebox Predictive Maintenance System';

            % Create TemperatureDropDownLabel
            app.TemperatureDropDownLabel = uilabel(app.UIFigure);
            app.TemperatureDropDownLabel.HorizontalAlignment = 'right';
            app.TemperatureDropDownLabel.FontWeight = 'bold';
            app.TemperatureDropDownLabel.Position = [20 772 78 22];
            app.TemperatureDropDownLabel.Text = 'Temperature';

            % Create TemperatureDropDown
            app.TemperatureDropDown = uidropdown(app.UIFigure);
            app.TemperatureDropDown.Items = {'Test 1 vacuum pump on, no radioactive or oxidising material present (Temperature)', 'Test 2 vacuum pump off, no radioactive or oxidising material present (Temperature)', 'Test 3 185kBq radioactive source present and oxidising material not present (Temperature)', 'Test 4 40kBq radioactive source present and oxidising material not present (Temperature)', 'Test 5 0.5M Sodium Hydroxide present and radioactive source not present (Temperature)', 'Test 6 0.01M Sodium Hydroxide present and radioactive source not present (Temperature)', 'Test 7 vacuum pump on, no radioactive or oxidising material present, temperature increased (Temperature)', 'Test 8 vacuum pump off, no radioactive or oxidising material present, temperature increased (Temperature)', 'Test 9 vacuum pump on, no radioactive or oxidising material present, temperature decreased (Temperature)', 'Test 10 vacuum pump off, no radioactive or oxidising material present, temperature decreased (Temperature)', 'Test 11 vacuum pump on, no radioactive or oxidising material present, humidity increased (Temperature)', 'Test 12 vacuum pump off, no radioactive or oxidising material present, humidity increased (Temperature)', 'Test 13 vacuum pump on, no radioactive or oxidising material present, humidity and temperature increased (Temperature)', 'Test 14 vacuum pump off, no radioactive or oxidising material present, humidity and temperature increased (Temperature)', 'Test 15 vacuum pump on, no radioactive or oxidising material present, humidity increased and temperature decreased (Temperature)', 'Test 16 vacuum pump off, no radioactive or oxidising material present, humidity increased and temperature decreased (Temperature)', 'Test 17 vacuum pump on, no radioactive or oxidising material present, humidity decreased (Temperature)', 'Test 18 vacuum pump off, no radioactive or oxidising material present, humidity decreased (Temperature)', 'Test 19 vacuum pump on, no radioactive or oxidising material present, humidity decreased and temperature increased (Temperature)', 'Test 20 vacuum pump off, no radioactive or oxidising material present, humidity decreased and temperature increased (Temperature)', 'Test 21 vacuum pump on, no radioactive or oxidising material present, humidity and temperature decreased (Temperature)', 'Test 22 vacuum pump off, no radioactive or oxidising material present, humidity and temperature decreased (Temperature)', 'blank'};
            app.TemperatureDropDown.Position = [101 772 402 20];
            app.TemperatureDropDown.Value = 'blank';

            % Create HumidityDropDownLabel
            app.HumidityDropDownLabel = uilabel(app.UIFigure);
            app.HumidityDropDownLabel.HorizontalAlignment = 'right';
            app.HumidityDropDownLabel.FontWeight = 'bold';
            app.HumidityDropDownLabel.Position = [30 686 56 22];
            app.HumidityDropDownLabel.Text = 'Humidity';

            % Create HumidityDropDown
            app.HumidityDropDown = uidropdown(app.UIFigure);
            app.HumidityDropDown.Items = {'Test 1 vacuum pump on, no radioactive or oxidising material present (Humidity)', 'Test 2 vacuum pump off, no radioactive or oxidising material present (Humidity)', 'Test 3 185kBq radioactive source present and oxidising material not present (Humidity)', 'Test 4 40kBq radioactive source present and oxidising material not present (Humidity)', 'Test 5 0.5M Sodium Hydroxide present and radioactive source not present (Humidity)', 'Test 6 0.01M Sodium Hydroxide present and radioactive source not present (Humidity)', 'Test 7 vacuum pump on, no radioactive or oxidising material present, temperature increased (Humidity)', 'Test 8 vacuum pump off, no radioactive or oxidising material present, temperature increased (Humidity)', 'Test 9 vacuum pump on, no radioactive or oxidising material present, temperature decreased (Humidity)', 'Test 10 vacuum pump off, no radioactive or oxidising material present, temperature decreased (Humidity)', 'Test 11 vacuum pump on, no radioactive or oxidising material present, humidity increased (Humidity)', 'Test 12 vacuum pump off, no radioactive or oxidising material present, humidity increased (Humidity)', 'Test 13 vacuum pump on, no radioactive or oxidising material present, humidity and temperature increased (Humidity)', 'Test 14 vacuum pump off, no radioactive or oxidising material present, humidity and temperature increased (Humidity)', 'Test 15 vacuum pump on, no radioactive or oxidising material present, humidity increased and temperature decreased (Humidity)', 'Test 16 vacuum pump off, no radioactive or oxidising material present, humidity increased and temperature decreased (Humidity)', 'Test 17 vacuum pump on, no radioactive or oxidising material present, humidity decreased (Humidity)', 'Test 18 vacuum pump off, no radioactive or oxidising material present, humidity decreased (Humidity)', 'Test 19 vacuum pump on, no radioactive or oxidising material present, humidity decreased and temperature increased (Humidity)', 'Test 20 vacuum pump off, no radioactive or acetone sources present, humidity decreased and temperature increased (Humidity)', 'Test 21 vacuum pump on, no radioactive or oxidising material present, humidity and temperature decreased (Humidity)', 'Test 22 vacuum pump off, no radioactive or oxidising material present, humidity and temperature decreased (Humidity)', 'blank'};
            app.HumidityDropDown.Position = [101 686 402 20];
            app.HumidityDropDown.Value = 'blank';

            % Create PressureDropDownLabel
            app.PressureDropDownLabel = uilabel(app.UIFigure);
            app.PressureDropDownLabel.HorizontalAlignment = 'right';
            app.PressureDropDownLabel.FontWeight = 'bold';
            app.PressureDropDownLabel.Position = [30 604 56 22];
            app.PressureDropDownLabel.Text = 'Pressure';

            % Create PressureDropDown
            app.PressureDropDown = uidropdown(app.UIFigure);
            app.PressureDropDown.Items = {'Test 1 vacuum pump on, no radioactive or oxidising material present (Pressure)', 'Test 2 vacuum pump off, no radioactive or oxidising material present (Pressure)', 'Test 3 185kBq radioactive source present and oxidising material not present (Pressure)', 'Test 4 40kBq radioactive source present and oxidising material not present (Pressure)', 'Test 5 0.5M Sodium Hydroxide present and radioactive source not present (Pressure)', 'Test 6 0.01M Sodium Hydroxide present and radioactive source not present (Pressure)', 'Test 7 vacuum pump on, no radioactive or oxidising material present, temperature increased (Pressure)', 'Test 8 vacuum pump off, no radioactive or oxidising material present, temperature increased (Pressure)', 'Test 9 vacuum pump on, no radioactive or oxidising material present, temperature decreased (Pressure)', 'Test 10 vacuum pump off, no radioactive or oxidising material present, temperature decreased (Pressure)', 'Test 11 vacuum pump on, no radioactive or oxidising material present, humidity increased (Pressure)', 'Test 12 vacuum pump off, no radioactive or oxidising material present, humidity increased (Pressure)', 'Test 13 vacuum pump on, no radioactive or oxidising material present, humidity and temperature increased (Pressure)', 'Test 14 vacuum pump off, no radioactive or oxidising material present, humidity and temperature increased (Pressure)', 'Test 15 vacuum pump on, no radioactive or oxidising material present, humidity increased and temperature decreased (Pressure)', 'Test 16 vacuum pump off, no radioactive or oxidising material present, humidity increased and temperature decreased (Pressure)', 'Test 17 vacuum pump on, no radioactive or oxidising material present, humidity decreased (Pressure)', 'Test 18 vacuum pump off, no radioactive or oxidising material present, humidity decreased (Pressure)', 'Test 19 vacuum pump on, no radioactive or oxidising material present, humidity decreased and temperature increased (Pressure)', 'Test 20 vacuum pump off, no radioactive or acetone sources present, humidity decreased and temperature increased (Pressure)', 'Test 21 vacuum pump on, no radioactive or oxidising material present, humidity and temperature decreased (Pressure)', 'Test 22 vacuum pump off, no radioactive or oxidising material present, humidity and temperature decreased (Pressure)', 'blank'};
            app.PressureDropDown.Position = [101 604 402 20];
            app.PressureDropDown.Value = 'blank';

            % Create OxygenDropDownLabel
            app.OxygenDropDownLabel = uilabel(app.UIFigure);
            app.OxygenDropDownLabel.HorizontalAlignment = 'right';
            app.OxygenDropDownLabel.FontWeight = 'bold';
            app.OxygenDropDownLabel.Position = [37 513 49 22];
            app.OxygenDropDownLabel.Text = 'Oxygen';

            % Create OxygenDropDown
            app.OxygenDropDown = uidropdown(app.UIFigure);
            app.OxygenDropDown.Items = {'Test 1 vacuum pump on, no radioactive or oxidising material present (Oxygen)', 'Test 2 vacuum pump off, no radioactive or oxidising material present (Oxygen)', 'Test 3 185kBq radioactive source present and oxidising material not present (Oxygen)', 'Test 4 40kBq radioactive source present and oxidising material not present (Oxygen)', 'Test 5 0.5M Sodium Hydroxide present and radioactive source not present (Oxygen)', 'Test 6 0.01M Sodium Hydroxide present and radioactive source not present (Oxygen)', 'Test 7 vacuum pump on, no radioactive or acetone source present, temperature increased (Oxygen)', 'Test 8 vacuum pump off, no radioactive or oxidising material present, temperature increased (Oxygen)', 'Test 9 vacuum pump on, no radioactive or oxidising material present, temperature decreased (Oxygen)', 'Test 10 vacuum pump off, no radioactive or oxidising material present, temperature decreased (Oxygen)', 'Test 11 vacuum pump on, no radioactive or oxidising material present, humidity increased (Oxygen)', 'Test 12 vacuum pump off, no radioactive or oxidising material present, humidity increased (Oxygen)', 'Test 13 vacuum pump on, no radioactive or oxidising material present, humidity and temperature increased (Oxygen)', 'Test 14 vacuum pump off, no radioactive or oxidising material present, humidity and temperature increased (Oxygen)', 'Test 15 vacuum pump on, no radioactive or oxidising material present, humidity increased and temperature decreased (Oxygen)', 'Test 16 vacuum pump off, no radioactive or oxidising material present, humidity increased and temperature decreased (Oxygen)', 'Test 17 vacuum pump on, no radioactive or oxidising material present, humidity decreased (Oxygen)', 'Test 18 vacuum pump off, no radioactive or oxidising material present, humidity decreased (Oxygen)', 'Test 19 vacuum pump on, no radioactive or oxidising material present, humidity decreased and temperature increased (Oxygen)', 'Test 20 vacuum pump off, no radioactive or acetone sources present, humidity decreased and temperature increased (Oxygen)', 'Test 21 vacuum pump on, no radioactive or oxidising material present, humidity and temperature decreased (Oxygen)', 'Test 22 vacuum pump off, no radioactive or oxidising material present, humidity and temperature decreased (Oxygen)', 'blank'};
            app.OxygenDropDown.Position = [101 513 402 20];
            app.OxygenDropDown.Value = 'blank';

            % Create RadiationDropDownLabel
            app.RadiationDropDownLabel = uilabel(app.UIFigure);
            app.RadiationDropDownLabel.HorizontalAlignment = 'right';
            app.RadiationDropDownLabel.FontWeight = 'bold';
            app.RadiationDropDownLabel.Position = [20 424 60 22];
            app.RadiationDropDownLabel.Text = 'Radiation';

            % Create RadiationDropDown
            app.RadiationDropDown = uidropdown(app.UIFigure);
            app.RadiationDropDown.Items = {'Test 1 vacuum pump on, no radioactive or oxidising material present (Radiation)', 'Test 2 vacuum pump off, no radioactive or oxidising material present (Radiation)', 'Test 3 185kBq radioactive source present and oxidising material not present (Radiation)', 'Test 4 40kBq radioactive source present and oxidising material not present (Radiation)', 'Test 5 0.5M Sodium Hydroxide present and radioactive source not present (Radiation)', 'Test 6 0.01M Sodium Hydroxide present and radioactive source not present (Radiation)', 'Test 7 vacuum pump on, no radioactive or acetone source present, temperature increased (Radiation)', 'Test 8 vacuum pump off, no radioactive or oxidising material present, temperature increased (Radiation)', 'Test 9 vacuum pump on, no radioactive or oxidising material present, temperature decreased (Radiation)', 'Test 10 vacuum pump off, no radioactive or oxidising material present, temperature decreased (Radiation)', 'Test 11 vacuum pump on, no radioactive or oxidising material present, humidity increased (Radiation)', 'Test 12 vacuum pump off, no radioactive or oxidising material present, humidity increased (Radiation)', 'Test 13 vacuum pump on, no radioactive or oxidising material present, humidity and temperature increased (Radiation)', 'Test 14 vacuum pump off, no radioactive or oxidising material present, humidity and temperature increased (Radiation)', 'Test 15 vacuum pump on, no radioactive or oxidising material present, humidity increased and temperature decreased (Radiation)', 'Test 16 vacuum pump off, no radioactive or oxidising material present, humidity increased and temperature decreased (Radiation)', 'Test 17 vacuum pump on, no radioactive or oxidising material present, humidity decreased (Radiation)', 'Test 18 vacuum pump off, no radioactive or oxidising material present, humidity decreased (Radiation)', 'Test 19 vacuum pump on, no radioactive or oxidising material present, humidity decreased and temperature increased (Radiation)', 'Test 20 vacuum pump off, no radioactive or acetone sources present, humidity decreased and temperature increased (Radiation)', 'Test 21 vacuum pump on, no radioactive or oxidising material present, humidity and temperature decreased (Radiation)', 'Test 22 vacuum pump off, no radioactive or oxidising material present, humidity and temperature decreased (Radiation)', 'blank'};
            app.RadiationDropDown.Position = [95 424 402 20];
            app.RadiationDropDown.Value = 'blank';

            % Create OperatorGuideTextAreaLabel
            app.OperatorGuideTextAreaLabel = uilabel(app.UIFigure);
            app.OperatorGuideTextAreaLabel.HorizontalAlignment = 'right';
            app.OperatorGuideTextAreaLabel.FontWeight = 'bold';
            app.OperatorGuideTextAreaLabel.Position = [18 318 94 22];
            app.OperatorGuideTextAreaLabel.Text = 'Operator Guide';

            % Create OperatorGuideTextArea
            app.OperatorGuideTextArea = uitextarea(app.UIFigure);
            app.OperatorGuideTextArea.FontWeight = 'bold';
            app.OperatorGuideTextArea.Position = [119 10 414 335];
            app.OperatorGuideTextArea.Value = {'1) Select a variable drop down menu and select test.'; ''; '2) When test selected, press the plot button. '; ''; '3) If multiple tests or variables are wanting to be plotted, press the hold button each time an additional plot is added after the plot button is pressed.'; ''; '4)To reset plot set all variable drop down menus to blank and press the plot button.'; ''; '5) Alternatively reset plot by selecting one of the variable test''s and press plot and reset. Ensure other drop down menus are set to blank.'; ''; '6) Once a variable has been plotted, the number of set points are determined and the probability of failure is calculated. '; ''; '7) When a has been plotted a status message is presented, establishing whether the system is healthy or not.'; ''};

            % Create ResetButton
            app.ResetButton = uibutton(app.UIFigure, 'push');
            app.ResetButton.ButtonPushedFcn = createCallbackFcn(app, @ResetButtonPushed, true);
            app.ResetButton.FontWeight = 'bold';
            app.ResetButton.Position = [446 371 61 29];
            app.ResetButton.Text = 'Reset';

            % Create PlotButton
            app.PlotButton = uibutton(app.UIFigure, 'push');
            app.PlotButton.ButtonPushedFcn = createCallbackFcn(app, @PlotButtonPushed, true);
            app.PlotButton.FontWeight = 'bold';
            app.PlotButton.Position = [105 371 61 29];
            app.PlotButton.Text = 'Plot';

            % Create NumberofSetPointVialationsEditFieldLabel
            app.NumberofSetPointVialationsEditFieldLabel = uilabel(app.UIFigure);
            app.NumberofSetPointVialationsEditFieldLabel.HorizontalAlignment = 'right';
            app.NumberofSetPointVialationsEditFieldLabel.FontWeight = 'bold';
            app.NumberofSetPointVialationsEditFieldLabel.Position = [657 771 259 22];
            app.NumberofSetPointVialationsEditFieldLabel.Text = 'Temperature Number of Set Point Vialations';

            % Create NumberofSetPointVialationsEditField
            app.NumberofSetPointVialationsEditField = uieditfield(app.UIFigure, 'numeric');
            app.NumberofSetPointVialationsEditField.Position = [931 772 55 21];

            % Create SetPointVialationsEditFieldLabel
            app.SetPointVialationsEditFieldLabel = uilabel(app.UIFigure);
            app.SetPointVialationsEditFieldLabel.HorizontalAlignment = 'right';
            app.SetPointVialationsEditFieldLabel.FontWeight = 'bold';
            app.SetPointVialationsEditFieldLabel.Position = [545 737 380 22];
            app.SetPointVialationsEditFieldLabel.Text = 'Probability of Maintenance Required for Temperature Instrument';

            % Create SetPointVialationPercentageEditField
            app.SetPointVialationPercentageEditField = uieditfield(app.UIFigure, 'numeric');
            app.SetPointVialationPercentageEditField.Position = [931 737 55 22];

            % Create SetPointVialationsEditFieldLabel_2
            app.SetPointVialationsEditFieldLabel_2 = uilabel(app.UIFigure);
            app.SetPointVialationsEditFieldLabel_2.HorizontalAlignment = 'right';
            app.SetPointVialationsEditFieldLabel_2.FontWeight = 'bold';
            app.SetPointVialationsEditFieldLabel_2.Position = [689 684 236 22];
            app.SetPointVialationsEditFieldLabel_2.Text = 'Humidity Number of Set Point Vialations';

            % Create NumberofSetPointVialationsEditField_2
            app.NumberofSetPointVialationsEditField_2 = uieditfield(app.UIFigure, 'numeric');
            app.NumberofSetPointVialationsEditField_2.Position = [931 684 55 22];

            % Create SetPointVialationsEditFieldLabel_3
            app.SetPointVialationsEditFieldLabel_3 = uilabel(app.UIFigure);
            app.SetPointVialationsEditFieldLabel_3.HorizontalAlignment = 'right';
            app.SetPointVialationsEditFieldLabel_3.FontWeight = 'bold';
            app.SetPointVialationsEditFieldLabel_3.Position = [566 650 358 22];
            app.SetPointVialationsEditFieldLabel_3.Text = 'Probability of Maintenance Required for Humidity Instrument';

            % Create SetPointVialationPercentageEditField_3
            app.SetPointVialationPercentageEditField_3 = uieditfield(app.UIFigure, 'numeric');
            app.SetPointVialationPercentageEditField_3.Position = [930 648 56 24];

            % Create SetPointVialationsEditFieldLabel_4
            app.SetPointVialationsEditFieldLabel_4 = uilabel(app.UIFigure);
            app.SetPointVialationsEditFieldLabel_4.HorizontalAlignment = 'right';
            app.SetPointVialationsEditFieldLabel_4.FontWeight = 'bold';
            app.SetPointVialationsEditFieldLabel_4.Position = [680 602 236 22];
            app.SetPointVialationsEditFieldLabel_4.Text = 'Pressure Number of Set Point Vialations';

            % Create NumberofSetPointVialationsEditField_4
            app.NumberofSetPointVialationsEditField_4 = uieditfield(app.UIFigure, 'numeric');
            app.NumberofSetPointVialationsEditField_4.Position = [930 602 56 22];

            % Create SetPointVialationsEditFieldLabel_5
            app.SetPointVialationsEditFieldLabel_5 = uilabel(app.UIFigure);
            app.SetPointVialationsEditFieldLabel_5.HorizontalAlignment = 'right';
            app.SetPointVialationsEditFieldLabel_5.FontWeight = 'bold';
            app.SetPointVialationsEditFieldLabel_5.Position = [558 568 358 22];
            app.SetPointVialationsEditFieldLabel_5.Text = 'Probability of Maintenance Required for Pressure Instrument';

            % Create SetPointVialationPercentageEditField_5
            app.SetPointVialationPercentageEditField_5 = uieditfield(app.UIFigure, 'numeric');
            app.SetPointVialationPercentageEditField_5.Position = [930 568 56 22];

            % Create SetPointVialationsEditFieldLabel_6
            app.SetPointVialationsEditFieldLabel_6 = uilabel(app.UIFigure);
            app.SetPointVialationsEditFieldLabel_6.HorizontalAlignment = 'right';
            app.SetPointVialationsEditFieldLabel_6.FontWeight = 'bold';
            app.SetPointVialationsEditFieldLabel_6.Position = [687 511 229 22];
            app.SetPointVialationsEditFieldLabel_6.Text = 'Oxygen Number of Set Point Vialations';

            % Create NumberofSetPointVialationsEditField_6
            app.NumberofSetPointVialationsEditField_6 = uieditfield(app.UIFigure, 'numeric');
            app.NumberofSetPointVialationsEditField_6.Position = [931 511 55 22];

            % Create SetPointVialationsEditFieldLabel_7
            app.SetPointVialationsEditFieldLabel_7 = uilabel(app.UIFigure);
            app.SetPointVialationsEditFieldLabel_7.HorizontalAlignment = 'right';
            app.SetPointVialationsEditFieldLabel_7.FontWeight = 'bold';
            app.SetPointVialationsEditFieldLabel_7.Position = [575 477 350 22];
            app.SetPointVialationsEditFieldLabel_7.Text = 'Probability of Maintenance Required for Oxygen Instrument';

            % Create SetPointVialationPercentageEditField_7
            app.SetPointVialationPercentageEditField_7 = uieditfield(app.UIFigure, 'numeric');
            app.SetPointVialationPercentageEditField_7.Position = [931 477 55 22];

            % Create SetPointVialationsEditFieldLabel_8
            app.SetPointVialationsEditFieldLabel_8 = uilabel(app.UIFigure);
            app.SetPointVialationsEditFieldLabel_8.HorizontalAlignment = 'right';
            app.SetPointVialationsEditFieldLabel_8.FontWeight = 'bold';
            app.SetPointVialationsEditFieldLabel_8.Position = [678 424 240 22];
            app.SetPointVialationsEditFieldLabel_8.Text = 'Radiation Number of Set Point Vialations';

            % Create NumberofSetPointVialationsEditField_8
            app.NumberofSetPointVialationsEditField_8 = uieditfield(app.UIFigure, 'numeric');
            app.NumberofSetPointVialationsEditField_8.Position = [931 424 55 22];

            % Create SetPointVialationsEditFieldLabel_9
            app.SetPointVialationsEditFieldLabel_9 = uilabel(app.UIFigure);
            app.SetPointVialationsEditFieldLabel_9.HorizontalAlignment = 'right';
            app.SetPointVialationsEditFieldLabel_9.FontWeight = 'bold';
            app.SetPointVialationsEditFieldLabel_9.Position = [562 378 363 22];
            app.SetPointVialationsEditFieldLabel_9.Text = 'Probability of Maintenance Required for Radiation Instrument';

            % Create SetPointVialationPercentageEditField_9
            app.SetPointVialationPercentageEditField_9 = uieditfield(app.UIFigure, 'numeric');
            app.SetPointVialationPercentageEditField_9.Position = [931 380 55 20];

            % Create TemperatureSystemStatusMessageLabel
            app.TemperatureSystemStatusMessageLabel = uilabel(app.UIFigure);
            app.TemperatureSystemStatusMessageLabel.BackgroundColor = [0 0 0];
            app.TemperatureSystemStatusMessageLabel.HorizontalAlignment = 'center';
            app.TemperatureSystemStatusMessageLabel.WordWrap = 'on';
            app.TemperatureSystemStatusMessageLabel.FontSize = 20;
            app.TemperatureSystemStatusMessageLabel.FontWeight = 'bold';
            app.TemperatureSystemStatusMessageLabel.Position = [540 294 1194 54];
            app.TemperatureSystemStatusMessageLabel.Text = 'System Temperature Status Message';

            % Create HumiditySystemStatusMessageLabel
            app.HumiditySystemStatusMessageLabel = uilabel(app.UIFigure);
            app.HumiditySystemStatusMessageLabel.BackgroundColor = [0 0 0];
            app.HumiditySystemStatusMessageLabel.HorizontalAlignment = 'center';
            app.HumiditySystemStatusMessageLabel.WordWrap = 'on';
            app.HumiditySystemStatusMessageLabel.FontSize = 20;
            app.HumiditySystemStatusMessageLabel.FontWeight = 'bold';
            app.HumiditySystemStatusMessageLabel.Position = [540 223 1194 72];
            app.HumiditySystemStatusMessageLabel.Text = 'System Humidity Status Message';

            % Create PressureSystemStatusMessageLabel
            app.PressureSystemStatusMessageLabel = uilabel(app.UIFigure);
            app.PressureSystemStatusMessageLabel.BackgroundColor = [0 0 0];
            app.PressureSystemStatusMessageLabel.HorizontalAlignment = 'center';
            app.PressureSystemStatusMessageLabel.WordWrap = 'on';
            app.PressureSystemStatusMessageLabel.FontSize = 20;
            app.PressureSystemStatusMessageLabel.FontWeight = 'bold';
            app.PressureSystemStatusMessageLabel.Position = [540 152 1194 72];
            app.PressureSystemStatusMessageLabel.Text = 'System Pressure Status Message';

            % Create OxygenSystemStatusMessageLabel
            app.OxygenSystemStatusMessageLabel = uilabel(app.UIFigure);
            app.OxygenSystemStatusMessageLabel.BackgroundColor = [0 0 0];
            app.OxygenSystemStatusMessageLabel.HorizontalAlignment = 'center';
            app.OxygenSystemStatusMessageLabel.WordWrap = 'on';
            app.OxygenSystemStatusMessageLabel.FontSize = 20;
            app.OxygenSystemStatusMessageLabel.FontWeight = 'bold';
            app.OxygenSystemStatusMessageLabel.Position = [540 81 1194 72];
            app.OxygenSystemStatusMessageLabel.Text = 'System Oxygen Status Message';

            % Create RadiationSystemStatusMessageLabel
            app.RadiationSystemStatusMessageLabel = uilabel(app.UIFigure);
            app.RadiationSystemStatusMessageLabel.BackgroundColor = [0 0 0];
            app.RadiationSystemStatusMessageLabel.HorizontalAlignment = 'center';
            app.RadiationSystemStatusMessageLabel.WordWrap = 'on';
            app.RadiationSystemStatusMessageLabel.FontSize = 20;
            app.RadiationSystemStatusMessageLabel.FontWeight = 'bold';
            app.RadiationSystemStatusMessageLabel.Position = [540 10 1194 72];
            app.RadiationSystemStatusMessageLabel.Text = 'System Radiation Status Message';

            % Create Label
            app.Label = uilabel(app.UIFigure);
            app.Label.FontWeight = 'bold';
            app.Label.Position = [993 737 13 22];
            app.Label.Text = '%';

            % Create Label_2
            app.Label_2 = uilabel(app.UIFigure);
            app.Label_2.FontWeight = 'bold';
            app.Label_2.Position = [993 650 13 22];
            app.Label_2.Text = '%';

            % Create Label_3
            app.Label_3 = uilabel(app.UIFigure);
            app.Label_3.FontWeight = 'bold';
            app.Label_3.Position = [993 568 13 22];
            app.Label_3.Text = '%';

            % Create Label_4
            app.Label_4 = uilabel(app.UIFigure);
            app.Label_4.FontWeight = 'bold';
            app.Label_4.Position = [993 477 13 22];
            app.Label_4.Text = '%';

            % Create Label_5
            app.Label_5 = uilabel(app.UIFigure);
            app.Label_5.FontWeight = 'bold';
            app.Label_5.Position = [993 378 13 22];
            app.Label_5.Text = '%';

            % Create UIAxes
            app.UIAxes = uiaxes(app.UIFigure);
            title(app.UIAxes, 'Glovebox Environment')
            xlabel(app.UIAxes, 'Time')
            ylabel(app.UIAxes, 'Magnitude')
            zlabel(app.UIAxes, 'Z')
            app.UIAxes.AmbientLightColor = [0 0 0];
            app.UIAxes.PlotBoxAspectRatio = [1.72831632653061 1 1];
            app.UIAxes.FontName = 'Georgia';
            app.UIAxes.FontWeight = 'bold';
            app.UIAxes.Layer = 'top';
            app.UIAxes.GridLineStyle = '--';
            app.UIAxes.XColor = [0 0 0];
            app.UIAxes.BoxStyle = 'full';
            app.UIAxes.LineWidth = 1;
            app.UIAxes.XGrid = 'on';
            app.UIAxes.YGrid = 'on';
            app.UIAxes.Box = 'on';
            app.UIAxes.Position = [1065 330 669 548];

            % Show the figure after all components are created
            app.UIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = Glovebox_Predictive_Maintenance_System_Joshua_Donald

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.UIFigure)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.UIFigure)
        end
    end
end
